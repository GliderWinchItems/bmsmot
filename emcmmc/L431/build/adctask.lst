ARM GAS  /tmp/cc6e4rqP.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"adctask.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.adctask_init,"ax",%progbits
  22              		.align	2
  23              		.global	adctask_init
  24              		.thumb
  25              		.thumb_func
  27              	adctask_init:
  28              	.LFB292:
  29              		.file 1 "Ourwares/adctask.c"
   1:Ourwares/adctask.c **** /******************************************************************************
   2:Ourwares/adctask.c **** * File Name          : adctask.c
   3:Ourwares/adctask.c **** * Date First Issued  : 02/01/2019
   4:Ourwares/adctask.c **** * Description        : Handle ADC w DMA using FreeRTOS/ST HAL within a task
   5:Ourwares/adctask.c **** *******************************************************************************/
   6:Ourwares/adctask.c **** 
   7:Ourwares/adctask.c **** #include "FreeRTOS.h"
   8:Ourwares/adctask.c **** #include "cmsis_os.h"
   9:Ourwares/adctask.c **** #include "malloc.h"
  10:Ourwares/adctask.c **** #include "adctask.h"
  11:Ourwares/adctask.c **** #include "adcparams.h"
  12:Ourwares/adctask.c **** #include "adcfastsum16.h"
  13:Ourwares/adctask.c **** #include "ADCTask.h"
  14:Ourwares/adctask.c **** 
  15:Ourwares/adctask.c **** #include "morse.h"
  16:Ourwares/adctask.c **** 
  17:Ourwares/adctask.c **** extern ADC_HandleTypeDef hadc1;
  18:Ourwares/adctask.c **** 
  19:Ourwares/adctask.c **** struct ADCDMATSKBLK adc1dmatskblk[ADCNUM];
  20:Ourwares/adctask.c **** 
  21:Ourwares/adctask.c **** /* *************************************************************************
  22:Ourwares/adctask.c ****  * struct ADCDMATSKBLK* adctask_init(ADC_HandleTypeDef* phadc,\
  23:Ourwares/adctask.c **** 	 uint32_t  notebit1,\
  24:Ourwares/adctask.c **** 	 uint32_t  notebit2,\
  25:Ourwares/adctask.c **** 	 uint32_t* pnoteval);
  26:Ourwares/adctask.c ****  *	@brief	: Setup ADC DMA buffers and control block
  27:Ourwares/adctask.c ****  * @param	: phadc = pointer to 'MX ADC control block
  28:Ourwares/adctask.c ****  * @param	: notebit1 = unique bit for notification @ 1/2 dma buffer
  29:Ourwares/adctask.c ****  * @param	: notebit2 = unique bit for notification @ end dma buffer
ARM GAS  /tmp/cc6e4rqP.s 			page 2


  30:Ourwares/adctask.c ****  * @param	: pnoteval = pointer to word receiving notification word from OS
  31:Ourwares/adctask.c ****  * @return	: NULL = fail
  32:Ourwares/adctask.c ****  * *************************************************************************/
  33:Ourwares/adctask.c **** /*
  34:Ourwares/adctask.c ****    notebit1 notify at the halfway dma buffer point
  35:Ourwares/adctask.c ****      associates with pdma (beginning of dma buffer)
  36:Ourwares/adctask.c ****    notebit2 notify at the end of the dma buffer
  37:Ourwares/adctask.c ****      associates with pdma + dmact * phadc->Init.NbrOfConversion
  38:Ourwares/adctask.c **** */
  39:Ourwares/adctask.c **** 
  40:Ourwares/adctask.c **** struct ADCDMATSKBLK* adctask_init(ADC_HandleTypeDef* phadc,\
  41:Ourwares/adctask.c **** 	uint32_t  notebit1,\
  42:Ourwares/adctask.c **** 	uint32_t  notebit2,\
  43:Ourwares/adctask.c **** 	uint32_t* pnoteval)
  44:Ourwares/adctask.c **** {
  30              		.loc 1 44 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              	.LVL0:
  35 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 32
  38              		.cfi_offset 4, -32
  39              		.cfi_offset 5, -28
  40              		.cfi_offset 6, -24
  41              		.cfi_offset 7, -20
  42              		.cfi_offset 8, -16
  43              		.cfi_offset 9, -12
  44              		.cfi_offset 10, -8
  45              		.cfi_offset 14, -4
  46 0004 0746     		mov	r7, r0
  47 0006 8A46     		mov	r10, r1
  48 0008 9146     		mov	r9, r2
  49 000a 9846     		mov	r8, r3
  50              	.LVL1:
  45:Ourwares/adctask.c **** 	uint16_t* pdma;
  46:Ourwares/adctask.c **** 	struct ADCDMATSKBLK* pblk = &adc1dmatskblk[0]; // ADC1 only for now
  47:Ourwares/adctask.c **** 
  48:Ourwares/adctask.c **** 	/* 'adcparams.h' MUST match what STM32CubeMX set up. */
  49:Ourwares/adctask.c **** 	if (ADC1IDX_ADCSCANSIZE != phadc->Init.NbrOfConversion) morse_trap(61);//return NULL;
  51              		.loc 1 49 0
  52 000c C369     		ldr	r3, [r0, #28]
  53              	.LVL2:
  54 000e 062B     		cmp	r3, #6
  55 0010 02D0     		beq	.L2
  56              		.loc 1 49 0 is_stmt 0 discriminator 1
  57 0012 3D20     		movs	r0, #61
  58              	.LVL3:
  59 0014 FFF7FEFF 		bl	morse_trap
  60              	.LVL4:
  61              	.L2:
  50:Ourwares/adctask.c **** 
  51:Ourwares/adctask.c **** 	/* ADC DMA summation length must match 1/2 DMA buffer sizing. */
  52:Ourwares/adctask.c **** 	if (ADCFASTSUM16SIZE != ADC1DMANUMSEQ) morse_trap(62);
  53:Ourwares/adctask.c **** 
  54:Ourwares/adctask.c **** 	/* length = total number of uint16_t in dma buffer */
ARM GAS  /tmp/cc6e4rqP.s 			page 3


  55:Ourwares/adctask.c **** 	uint32_t length = ADC1DMANUMSEQ * 2 * phadc->Init.NbrOfConversion;
  62              		.loc 1 55 0 is_stmt 1
  63 0018 FD69     		ldr	r5, [r7, #28]
  64 001a 6D01     		lsls	r5, r5, #5
  65              	.LVL5:
  56:Ourwares/adctask.c **** 
  57:Ourwares/adctask.c **** taskENTER_CRITICAL();
  66              		.loc 1 57 0
  67 001c FFF7FEFF 		bl	vPortEnterCritical
  68              	.LVL6:
  58:Ourwares/adctask.c **** 
  59:Ourwares/adctask.c **** 	/* Initialize params for ADC. */
  60:Ourwares/adctask.c **** 	adcparams_init();
  69              		.loc 1 60 0
  70 0020 FFF7FEFF 		bl	adcparams_init
  71              	.LVL7:
  61:Ourwares/adctask.c **** 
  62:Ourwares/adctask.c **** 	/* Get dma buffer allocated */
  63:Ourwares/adctask.c **** 	pdma = (uint16_t*)calloc(length, sizeof(uint16_t));
  72              		.loc 1 63 0
  73 0024 0221     		movs	r1, #2
  74 0026 2846     		mov	r0, r5
  75 0028 FFF7FEFF 		bl	calloc
  76              	.LVL8:
  64:Ourwares/adctask.c **** 	if (pdma == NULL) {taskEXIT_CRITICAL();morse_trap(63);}
  77              		.loc 1 64 0
  78 002c 0646     		mov	r6, r0
  79 002e 20B9     		cbnz	r0, .L3
  80              		.loc 1 64 0 is_stmt 0 discriminator 1
  81 0030 FFF7FEFF 		bl	vPortExitCritical
  82              	.LVL9:
  83 0034 3F20     		movs	r0, #63
  84 0036 FFF7FEFF 		bl	morse_trap
  85              	.LVL10:
  86              	.L3:
  65:Ourwares/adctask.c **** 
  66:Ourwares/adctask.c **** 	/* Populate our control block */
  67:Ourwares/adctask.c **** /* The following reproduced for convenience--
  68:Ourwares/adctask.c **** struct ADCDMATSKBLK
  69:Ourwares/adctask.c **** {
  70:Ourwares/adctask.c **** 	struct ADCDMATSKBLK* pnext;
  71:Ourwares/adctask.c **** 	ADC_HandleTypeDef* phadc; // Pointer to 'MX adc control block
  72:Ourwares/adctask.c **** 	uint32_t  notebit1; // Notification bit for dma half complete interrupt
  73:Ourwares/adctask.c **** 	uint32_t  notebit2; // Notification bit for dma complete interrupt
  74:Ourwares/adctask.c **** 	uint32_t* pnoteval; // Pointer to notification word
  75:Ourwares/adctask.c **** 	uint16_t* pdma1;    // Pointer to first half of dma buffer
  76:Ourwares/adctask.c **** 	uint16_t* pdma2;    // Pointer to second half of dma buffer
  77:Ourwares/adctask.c **** 	osThreadId adctaskHandle;
  78:Ourwares/adctask.c **** 	uint32_t* psum;     // Pointer summed 1/2 dma buffer
  79:Ourwares/adctask.c **** 	uint16_t  dmact;    // Number of sequences in 1/2 dma buffer
  80:Ourwares/adctask.c **** };
  81:Ourwares/adctask.c **** 
  82:Ourwares/adctask.c **** */
  83:Ourwares/adctask.c **** 	pblk->phadc    = phadc;
  87              		.loc 1 83 0 is_stmt 1
  88 003a 0D4C     		ldr	r4, .L5
  89 003c 6760     		str	r7, [r4, #4]
ARM GAS  /tmp/cc6e4rqP.s 			page 4


  84:Ourwares/adctask.c **** 	pblk->notebit1 = notebit1;
  90              		.loc 1 84 0
  91 003e C4F808A0 		str	r10, [r4, #8]
  85:Ourwares/adctask.c **** 	pblk->notebit2 = notebit2;
  92              		.loc 1 85 0
  93 0042 C4F80C90 		str	r9, [r4, #12]
  86:Ourwares/adctask.c **** 	pblk->pnoteval = pnoteval;
  94              		.loc 1 86 0
  95 0046 C4F81080 		str	r8, [r4, #16]
  87:Ourwares/adctask.c **** 	pblk->pdma1    = pdma;
  96              		.loc 1 87 0
  97 004a 6661     		str	r6, [r4, #20]
  88:Ourwares/adctask.c **** 	pblk->pdma2    = pdma + (ADC1DMANUMSEQ * phadc->Init.NbrOfConversion);
  98              		.loc 1 88 0
  99 004c FB69     		ldr	r3, [r7, #28]
 100 004e 06EB4316 		add	r6, r6, r3, lsl #5
 101              	.LVL11:
 102 0052 A661     		str	r6, [r4, #24]
  89:Ourwares/adctask.c **** 	pblk->adctaskHandle = ADCTaskHandle;
 103              		.loc 1 89 0
 104 0054 074B     		ldr	r3, .L5+4
 105 0056 1B68     		ldr	r3, [r3]
 106 0058 E361     		str	r3, [r4, #28]
  90:Ourwares/adctask.c **** 
  91:Ourwares/adctask.c **** /**
  92:Ourwares/adctask.c ****   * @brief  Enables ADC DMA request after last transfer (Single-ADC mode) and enables ADC periphera
  93:Ourwares/adctask.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  94:Ourwares/adctask.c ****   *         the configuration information for the specified ADC.
  95:Ourwares/adctask.c ****   * @param  pData The destination Buffer address.
  96:Ourwares/adctask.c ****   * @param  Length The length of data to be transferred from ADC peripheral to memory.
  97:Ourwares/adctask.c ****   * @retval HAL status
  98:Ourwares/adctask.c ****   */
  99:Ourwares/adctask.c **** 
 100:Ourwares/adctask.c **** taskEXIT_CRITICAL();
 107              		.loc 1 100 0
 108 005a FFF7FEFF 		bl	vPortExitCritical
 109              	.LVL12:
 101:Ourwares/adctask.c **** 	
 102:Ourwares/adctask.c **** //	HAL_ADCEx_Calibration_Start(phadc);
 103:Ourwares/adctask.c **** 
 104:Ourwares/adctask.c **** 	HAL_ADC_Start_DMA(pblk->phadc, (uint32_t*)pblk->pdma1, length);
 110              		.loc 1 104 0
 111 005e 2A46     		mov	r2, r5
 112 0060 6169     		ldr	r1, [r4, #20]
 113 0062 6068     		ldr	r0, [r4, #4]
 114 0064 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 115              	.LVL13:
 105:Ourwares/adctask.c **** 	return pblk;
 106:Ourwares/adctask.c **** }
 116              		.loc 1 106 0
 117 0068 2046     		mov	r0, r4
 118 006a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 119              	.LVL14:
 120              	.L6:
 121 006e 00BF     		.align	2
 122              	.L5:
 123 0070 00000000 		.word	adc1dmatskblk
ARM GAS  /tmp/cc6e4rqP.s 			page 5


 124 0074 00000000 		.word	ADCTaskHandle
 125              		.cfi_endproc
 126              	.LFE292:
 128              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 129              		.align	2
 130              		.global	HAL_ADC_ConvHalfCpltCallback
 131              		.thumb
 132              		.thumb_func
 134              	HAL_ADC_ConvHalfCpltCallback:
 135              	.LFB293:
 107:Ourwares/adctask.c **** 
 108:Ourwares/adctask.c **** /* #######################################################################
 109:Ourwares/adctask.c ****    ADC DMA interrupt callbacks
 110:Ourwares/adctask.c ****    ####################################################################### */
 111:Ourwares/adctask.c **** /* *************************************************************************
 112:Ourwares/adctask.c ****  * void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef* hadc);
 113:Ourwares/adctask.c ****  *	@brief	: Call back from stm32f4xx_hal_adc: Halfway point of dma buffer
 114:Ourwares/adctask.c ****  * *************************************************************************/
 115:Ourwares/adctask.c **** /* *************************************************************************
 116:Ourwares/adctask.c ****  * void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef* hadc);
 117:Ourwares/adctask.c ****  *	@brief	: Call back from stm32f4xx_hal_adc: Halfway point of dma buffer
 118:Ourwares/adctask.c ****  * *************************************************************************/
 119:Ourwares/adctask.c **** void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef* hadc)
 120:Ourwares/adctask.c **** {
 136              		.loc 1 120 0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 8
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 140              	.LVL15:
 141 0000 00B5     		push	{lr}
 142              	.LCFI1:
 143              		.cfi_def_cfa_offset 4
 144              		.cfi_offset 14, -4
 145 0002 85B0     		sub	sp, sp, #20
 146              	.LCFI2:
 147              		.cfi_def_cfa_offset 24
 121:Ourwares/adctask.c **** //	adcommon.dmact += 1; // Running count
 122:Ourwares/adctask.c **** 	BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 148              		.loc 1 122 0
 149 0004 0023     		movs	r3, #0
 150 0006 0393     		str	r3, [sp, #12]
 151              	.LVL16:
 123:Ourwares/adctask.c **** 	struct ADCDMATSKBLK* ptmp = &adc1dmatskblk[0];
 124:Ourwares/adctask.c **** 
 125:Ourwares/adctask.c **** 	/* Trigger Recieve Task to poll dma uarts */
 126:Ourwares/adctask.c **** 	if( ptmp->adctaskHandle == NULL) return; // Skip task has not been created
 152              		.loc 1 126 0
 153 0008 0B4B     		ldr	r3, .L10
 154 000a D869     		ldr	r0, [r3, #28]
 155              	.LVL17:
 156 000c 80B1     		cbz	r0, .L7
 127:Ourwares/adctask.c **** 	xTaskNotifyFromISR(ptmp->adctaskHandle, 
 157              		.loc 1 127 0
 158 000e 9968     		ldr	r1, [r3, #8]
 159 0010 03AB     		add	r3, sp, #12
 160 0012 0093     		str	r3, [sp]
 161 0014 0023     		movs	r3, #0
ARM GAS  /tmp/cc6e4rqP.s 			page 6


 162 0016 0122     		movs	r2, #1
 163 0018 FFF7FEFF 		bl	xTaskGenericNotifyFromISR
 164              	.LVL18:
 128:Ourwares/adctask.c **** 		ptmp->notebit1,	/* 'or' bit assigned to buffer to notification value. */
 129:Ourwares/adctask.c **** 		eSetBits,      /* Set 'or' option */
 130:Ourwares/adctask.c **** 		&xHigherPriorityTaskWoken ); 
 131:Ourwares/adctask.c **** 
 132:Ourwares/adctask.c **** 	portYIELD_FROM_ISR( xHigherPriorityTaskWoken );
 165              		.loc 1 132 0
 166 001c 039B     		ldr	r3, [sp, #12]
 167 001e 3BB1     		cbz	r3, .L7
 168              		.loc 1 132 0 is_stmt 0 discriminator 1
 169 0020 4FF08052 		mov	r2, #268435456
 170 0024 054B     		ldr	r3, .L10+4
 171 0026 1A60     		str	r2, [r3]
 172              		.syntax unified
 173              	@ 132 "Ourwares/adctask.c" 1
 174 0028 BFF34F8F 		dsb
 175              	@ 0 "" 2
 176              	@ 132 "Ourwares/adctask.c" 1
 177 002c BFF36F8F 		isb
 178              	@ 0 "" 2
 179              		.thumb
 180              		.syntax unified
 181              	.L7:
 133:Ourwares/adctask.c **** 	return;
 134:Ourwares/adctask.c **** }
 182              		.loc 1 134 0 is_stmt 1
 183 0030 05B0     		add	sp, sp, #20
 184              	.LCFI3:
 185              		.cfi_def_cfa_offset 4
 186              		@ sp needed
 187 0032 5DF804FB 		ldr	pc, [sp], #4
 188              	.L11:
 189 0036 00BF     		.align	2
 190              	.L10:
 191 0038 00000000 		.word	adc1dmatskblk
 192 003c 04ED00E0 		.word	-536810236
 193              		.cfi_endproc
 194              	.LFE293:
 196              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 197              		.align	2
 198              		.global	HAL_ADC_ConvCpltCallback
 199              		.thumb
 200              		.thumb_func
 202              	HAL_ADC_ConvCpltCallback:
 203              	.LFB294:
 135:Ourwares/adctask.c **** /* *************************************************************************
 136:Ourwares/adctask.c ****  * void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc);
 137:Ourwares/adctask.c ****  *	@brief	: Call back from stm32f4xx_hal_adc: End point of dma buffer
 138:Ourwares/adctask.c ****  * *************************************************************************/
 139:Ourwares/adctask.c **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
 140:Ourwares/adctask.c **** {
 204              		.loc 1 140 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 8
 207              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc6e4rqP.s 			page 7


 208              	.LVL19:
 209 0000 00B5     		push	{lr}
 210              	.LCFI4:
 211              		.cfi_def_cfa_offset 4
 212              		.cfi_offset 14, -4
 213 0002 85B0     		sub	sp, sp, #20
 214              	.LCFI5:
 215              		.cfi_def_cfa_offset 24
 141:Ourwares/adctask.c **** //	adcommon.dmact += 1; // Running count
 142:Ourwares/adctask.c **** 	BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 216              		.loc 1 142 0
 217 0004 0023     		movs	r3, #0
 218 0006 0393     		str	r3, [sp, #12]
 219              	.LVL20:
 143:Ourwares/adctask.c **** 	struct ADCDMATSKBLK* ptmp = &adc1dmatskblk[0];
 144:Ourwares/adctask.c **** 
 145:Ourwares/adctask.c **** 	/* Trigger Recieve Task to poll dma uarts */
 146:Ourwares/adctask.c **** 	if( ptmp->adctaskHandle == NULL) return; // Skip task has not been created
 220              		.loc 1 146 0
 221 0008 0B4B     		ldr	r3, .L15
 222 000a D869     		ldr	r0, [r3, #28]
 223              	.LVL21:
 224 000c 80B1     		cbz	r0, .L12
 147:Ourwares/adctask.c **** 	xTaskNotifyFromISR(ptmp->adctaskHandle, 
 225              		.loc 1 147 0
 226 000e D968     		ldr	r1, [r3, #12]
 227 0010 03AB     		add	r3, sp, #12
 228 0012 0093     		str	r3, [sp]
 229 0014 0023     		movs	r3, #0
 230 0016 0122     		movs	r2, #1
 231 0018 FFF7FEFF 		bl	xTaskGenericNotifyFromISR
 232              	.LVL22:
 148:Ourwares/adctask.c **** 		ptmp->notebit2,	/* 'or' bit assigned to buffer to notification value. */
 149:Ourwares/adctask.c **** 		eSetBits,      /* Set 'or' option */
 150:Ourwares/adctask.c **** 		&xHigherPriorityTaskWoken ); 
 151:Ourwares/adctask.c **** 
 152:Ourwares/adctask.c **** 	portYIELD_FROM_ISR( xHigherPriorityTaskWoken );
 233              		.loc 1 152 0
 234 001c 039B     		ldr	r3, [sp, #12]
 235 001e 3BB1     		cbz	r3, .L12
 236              		.loc 1 152 0 is_stmt 0 discriminator 1
 237 0020 4FF08052 		mov	r2, #268435456
 238 0024 054B     		ldr	r3, .L15+4
 239 0026 1A60     		str	r2, [r3]
 240              		.syntax unified
 241              	@ 152 "Ourwares/adctask.c" 1
 242 0028 BFF34F8F 		dsb
 243              	@ 0 "" 2
 244              	@ 152 "Ourwares/adctask.c" 1
 245 002c BFF36F8F 		isb
 246              	@ 0 "" 2
 247              		.thumb
 248              		.syntax unified
 249              	.L12:
 153:Ourwares/adctask.c **** 	return;
 154:Ourwares/adctask.c **** }
 250              		.loc 1 154 0 is_stmt 1
ARM GAS  /tmp/cc6e4rqP.s 			page 8


 251 0030 05B0     		add	sp, sp, #20
 252              	.LCFI6:
 253              		.cfi_def_cfa_offset 4
 254              		@ sp needed
 255 0032 5DF804FB 		ldr	pc, [sp], #4
 256              	.L16:
 257 0036 00BF     		.align	2
 258              	.L15:
 259 0038 00000000 		.word	adc1dmatskblk
 260 003c 04ED00E0 		.word	-536810236
 261              		.cfi_endproc
 262              	.LFE294:
 264              		.comm	adc1dmatskblk,64,4
 265              		.text
 266              	.Letext0:
 267              		.file 2 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_t
 268              		.file 3 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 269              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 270              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 271              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l431xx.h"
 272              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 273              		.file 8 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 274              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 275              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 276              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc.h"
 277              		.file 12 "Ourwares/adctask.h"
 278              		.file 13 "Drivers/CMSIS/Include/cmsis_gcc.h"
 279              		.file 14 "Drivers/CMSIS/Include/core_cm4.h"
 280              		.file 15 "Ourwares/ADCTask.h"
 281              		.file 16 "Ourwares/morse.h"
 282              		.file 17 "Ourtasks/adcparams.h"
 283              		.file 18 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/malloc.h"
ARM GAS  /tmp/cc6e4rqP.s 			page 9


DEFINED SYMBOLS
                            *ABS*:00000000 adctask.c
     /tmp/cc6e4rqP.s:22     .text.adctask_init:00000000 $t
     /tmp/cc6e4rqP.s:27     .text.adctask_init:00000000 adctask_init
     /tmp/cc6e4rqP.s:123    .text.adctask_init:00000070 $d
                            *COM*:00000040 adc1dmatskblk
     /tmp/cc6e4rqP.s:129    .text.HAL_ADC_ConvHalfCpltCallback:00000000 $t
     /tmp/cc6e4rqP.s:134    .text.HAL_ADC_ConvHalfCpltCallback:00000000 HAL_ADC_ConvHalfCpltCallback
     /tmp/cc6e4rqP.s:191    .text.HAL_ADC_ConvHalfCpltCallback:00000038 $d
     /tmp/cc6e4rqP.s:197    .text.HAL_ADC_ConvCpltCallback:00000000 $t
     /tmp/cc6e4rqP.s:202    .text.HAL_ADC_ConvCpltCallback:00000000 HAL_ADC_ConvCpltCallback
     /tmp/cc6e4rqP.s:259    .text.HAL_ADC_ConvCpltCallback:00000038 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
morse_trap
vPortEnterCritical
adcparams_init
calloc
vPortExitCritical
HAL_ADC_Start_DMA
ADCTaskHandle
xTaskGenericNotifyFromISR

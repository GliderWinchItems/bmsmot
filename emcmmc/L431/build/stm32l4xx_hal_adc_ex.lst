ARM GAS  /tmp/ccTvghLi.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"stm32l4xx_hal_adc_ex.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.HAL_ADCEx_Calibration_Start,"ax",%progbits
  22              		.align	2
  23              		.global	HAL_ADCEx_Calibration_Start
  24              		.thumb
  25              		.thumb_func
  27              	HAL_ADCEx_Calibration_Start:
  28              	.LFB288:
  29              		.file 1 "Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c"
   1:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
   2:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @file    stm32l4xx_hal_adc_ex.c
   4:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief   This file provides firmware functions to manage the following
   6:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *          functionalities of the Analog to Digital Converter (ADC)
   7:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *          peripheral:
   8:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *           + Peripheral Control functions
   9:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *          Other functions (generic functions) are available in file
  10:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *          "stm32l4xx_hal_adc.c".
  11:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *
  12:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   ******************************************************************************
  13:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @attention
  14:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *
  15:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * Copyright (c) 2017 STMicroelectronics.
  16:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * All rights reserved.
  17:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *
  18:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * This software is licensed under terms that can be found in the LICENSE file
  19:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * in the root directory of this software component.
  20:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  21:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *
  22:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   ******************************************************************************
  23:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   @verbatim
  24:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   [..]
  25:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   (@) Sections "ADC peripheral features" and "How to use this driver" are
  26:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       available in file of generic functions "stm32l4xx_hal_adc.c".
  27:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   [..]
  28:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   @endverbatim
  29:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   ******************************************************************************
ARM GAS  /tmp/ccTvghLi.s 			page 2


  30:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
  31:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  32:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /* Includes ------------------------------------------------------------------*/
  33:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #include "stm32l4xx_hal.h"
  34:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  35:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /** @addtogroup STM32L4xx_HAL_Driver
  36:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @{
  37:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
  38:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  39:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /** @defgroup ADCEx ADCEx
  40:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief ADC Extended HAL module driver
  41:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @{
  42:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
  43:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  44:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #ifdef HAL_ADC_MODULE_ENABLED
  45:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  46:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /* Private typedef -----------------------------------------------------------*/
  47:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /* Private define ------------------------------------------------------------*/
  48:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  49:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /** @defgroup ADCEx_Private_Constants ADC Extended Private Constants
  50:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @{
  51:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
  52:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  53:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #define ADC_JSQR_FIELDS  ((ADC_JSQR_JL | ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN |\
  54:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                            ADC_JSQR_JSQ1  | ADC_JSQR_JSQ2 |\
  55:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                            ADC_JSQR_JSQ3 | ADC_JSQR_JSQ4 ))  /*!< ADC_JSQR fields of parameters tha
  56:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  57:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /* Fixed timeout value for ADC calibration.                                   */
  58:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /* Values defined to be higher than worst cases: maximum ratio between ADC    */
  59:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /* and CPU clock frequencies.                                                 */
  60:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /* Example of profile low frequency : ADC frequency at 31.25kHz (ADC clock    */
  61:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /* source PLL SAI 8MHz, ADC clock prescaler 256), CPU frequency 80MHz.        */
  62:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /* Calibration time max = 116 / fADC (refer to datasheet)                     */
  63:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /*                      = 296 960 CPU cycles                                  */
  64:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #define ADC_CALIBRATION_TIMEOUT         (296960UL)   /*!< ADC calibration time-out value (unit: CPU
  65:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  66:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
  67:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @}
  68:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
  69:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  70:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /* Private macro -------------------------------------------------------------*/
  71:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /* Private variables ---------------------------------------------------------*/
  72:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /* Private function prototypes -----------------------------------------------*/
  73:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /* Exported functions --------------------------------------------------------*/
  74:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  75:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions ADC Extended Exported Functions
  76:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @{
  77:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
  78:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  79:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions_Group1 Extended Input and Output operation functions
  80:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief    Extended IO operation functions
  81:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *
  82:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** @verbatim
  83:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****  ===============================================================================
  84:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                       ##### IO operation functions #####
  85:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****  ===============================================================================
  86:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     [..]  This section provides functions allowing to:
ARM GAS  /tmp/ccTvghLi.s 			page 3


  87:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  88:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Perform the ADC self-calibration for single or differential ending.
  89:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Get calibration factors for single or differential ending.
  90:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Set calibration factors for single or differential ending.
  91:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  92:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Start conversion of ADC group injected.
  93:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Stop conversion of ADC group injected.
  94:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Poll for conversion complete on ADC group injected.
  95:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Get result of ADC group injected channel conversion.
  96:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Start conversion of ADC group injected and enable interruptions.
  97:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Stop conversion of ADC group injected and disable interruptions.
  98:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  99:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) When multimode feature is available, start multimode and enable DMA transfer.
 100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Stop multimode and disable ADC DMA transfer.
 101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Get result of multimode conversion.
 102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** @endverbatim
 104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @{
 105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
 106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
 108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Perform an ADC automatic self-calibration
 109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         Calibration prerequisite: ADC must be disabled (execute this
 110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         function before HAL_ADC_Start() or after HAL_ADC_Stop() ).
 111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param  hadc       ADC handle
 112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param  SingleDiff Selection of single-ended or differential input
 113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         This parameter can be one of the following values:
 114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *           @arg @ref ADC_SINGLE_ENDED       Channel in mode input single ended
 115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *           @arg @ref ADC_DIFFERENTIAL_ENDED Channel in mode input differential ended
 116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
 117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
 118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_Calibration_Start(ADC_HandleTypeDef *hadc, uint32_t SingleDiff)
 119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
  30              		.loc 1 119 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              	.LVL0:
  35 0000 30B5     		push	{r4, r5, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 12
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 5, -8
  40              		.cfi_offset 14, -4
  41 0002 83B0     		sub	sp, sp, #12
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 24
 120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0UL;
  44              		.loc 1 121 0
  45 0004 0023     		movs	r3, #0
  46 0006 0193     		str	r3, [sp, #4]
 122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
 124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(SingleDiff));
 126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
ARM GAS  /tmp/ccTvghLi.s 			page 4


 127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
 128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
  47              		.loc 1 128 0
  48 0008 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
  49 000c 012B     		cmp	r3, #1
  50 000e 49D0     		beq	.L8
  51 0010 0D46     		mov	r5, r1
  52 0012 0446     		mov	r4, r0
  53              		.loc 1 128 0 is_stmt 0 discriminator 2
  54 0014 0123     		movs	r3, #1
  55 0016 80F85030 		strb	r3, [r0, #80]
 129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Calibration prerequisite: ADC must be disabled. */
 131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Disable the ADC (if not already disabled) */
 133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_hal_status = ADC_Disable(hadc);
  56              		.loc 1 133 0 is_stmt 1 discriminator 2
  57 001a FFF7FEFF 		bl	ADC_Disable
  58              	.LVL1:
 134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check if ADC is effectively disabled */
 136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
  59              		.loc 1 136 0 discriminator 2
  60 001e 0346     		mov	r3, r0
  61 0020 0028     		cmp	r0, #0
  62 0022 36D1     		bne	.L3
 137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Set ADC state */
 139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
  63              		.loc 1 139 0
  64 0024 626D     		ldr	r2, [r4, #84]
  65 0026 22F48852 		bic	r2, r2, #4352
  66 002a 22F00202 		bic	r2, r2, #2
  67 002e 42F00202 		orr	r2, r2, #2
  68 0032 6265     		str	r2, [r4, #84]
 140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Start ADC calibration in mode single-ended or differential */
 144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     LL_ADC_StartCalibration(hadc->Instance, SingleDiff);
  69              		.loc 1 144 0
  70 0034 2068     		ldr	r0, [r4]
  71              	.LVL2:
  72              	.LBB236:
  73              	.LBB237:
  74              		.file 2 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h"
   1:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
   2:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @file    stm32l4xx_ll_adc.h
   4:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief   Header file of ADC LL module.
   6:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ******************************************************************************
   7:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @attention
   8:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
   9:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * Copyright (c) 2017 STMicroelectronics.
  10:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * All rights reserved.
  11:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
ARM GAS  /tmp/ccTvghLi.s 			page 5


  12:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * in the root directory of this software component.
  14:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
  16:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ******************************************************************************
  17:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
  18:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  19:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #ifndef STM32L4xx_LL_ADC_H
  21:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define STM32L4xx_LL_ADC_H
  22:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  23:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #ifdef __cplusplus
  24:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** extern "C" {
  25:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif
  26:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  27:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #include "stm32l4xx.h"
  29:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  30:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @addtogroup STM32L4xx_LL_Driver
  31:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
  32:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
  33:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  34:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined (ADC1) || defined (ADC2) || defined (ADC3)
  35:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  36:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL ADC
  37:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
  38:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
  39:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  40:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  43:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Constants ADC Private Constants
  45:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
  46:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
  47:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  48:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC group regular sequencer:                             */
  49:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_REG_RANK_x the relevant bits for:            */
  50:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - sequencer register offset                                                */
  51:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  52:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  53:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC group regular sequencer configuration */
  54:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  55:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SQR1_REGOFFSET                 (0x00000000UL)
  56:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SQR2_REGOFFSET                 (0x00000100UL)
  57:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SQR3_REGOFFSET                 (0x00000200UL)
  58:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SQR4_REGOFFSET                 (0x00000300UL)
  59:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  60:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_SQRX_REGOFFSET_MASK        (ADC_SQR1_REGOFFSET | ADC_SQR2_REGOFFSET \
  61:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_SQR3_REGOFFSET | ADC_SQR4_REGOFFSET)
  62:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SQRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_SQRx_REGOFFSET in ADC_REG_
  63:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_ID_SQRX_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
  64:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  65:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of ADC group regular sequencer bits information to be inserted  */
  66:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* into ADC group regular sequencer ranks literals definition.                */
  67:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_1_SQRX_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_SQR1_SQ1" po
  68:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_2_SQRX_BITOFFSET_POS  (12UL) /* Value equivalent to bitfield "ADC_SQR1_SQ2" po
ARM GAS  /tmp/ccTvghLi.s 			page 6


  69:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_3_SQRX_BITOFFSET_POS  (18UL) /* Value equivalent to bitfield "ADC_SQR1_SQ3" po
  70:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_4_SQRX_BITOFFSET_POS  (24UL) /* Value equivalent to bitfield "ADC_SQR1_SQ4" po
  71:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_5_SQRX_BITOFFSET_POS  ( 0UL) /* Value equivalent to bitfield "ADC_SQR2_SQ5" po
  72:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_6_SQRX_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_SQR2_SQ6" po
  73:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_7_SQRX_BITOFFSET_POS  (12UL) /* Value equivalent to bitfield "ADC_SQR2_SQ7" po
  74:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_8_SQRX_BITOFFSET_POS  (18UL) /* Value equivalent to bitfield "ADC_SQR2_SQ8" po
  75:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_9_SQRX_BITOFFSET_POS  (24UL) /* Value equivalent to bitfield "ADC_SQR2_SQ9" po
  76:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_10_SQRX_BITOFFSET_POS ( 0UL) /* Value equivalent to bitfield "ADC_SQR3_SQ10" p
  77:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_11_SQRX_BITOFFSET_POS ( 6UL) /* Value equivalent to bitfield "ADC_SQR3_SQ11" p
  78:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_12_SQRX_BITOFFSET_POS (12UL) /* Value equivalent to bitfield "ADC_SQR3_SQ12" p
  79:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_13_SQRX_BITOFFSET_POS (18UL) /* Value equivalent to bitfield "ADC_SQR3_SQ13" p
  80:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_14_SQRX_BITOFFSET_POS (24UL) /* Value equivalent to bitfield "ADC_SQR3_SQ14" p
  81:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_15_SQRX_BITOFFSET_POS ( 0UL) /* Value equivalent to bitfield "ADC_SQR4_SQ15" p
  82:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_16_SQRX_BITOFFSET_POS ( 6UL) /* Value equivalent to bitfield "ADC_SQR4_SQ16" p
  83:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  84:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  85:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  86:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC group injected sequencer:                            */
  87:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_RANK_x the relevant bits for:            */
  88:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - data register offset                                                     */
  89:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  90:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  91:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC group injected data register */
  92:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  93:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_JDR1_REGOFFSET                 (0x00000000UL)
  94:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_JDR2_REGOFFSET                 (0x00000100UL)
  95:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_JDR3_REGOFFSET                 (0x00000200UL)
  96:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_JDR4_REGOFFSET                 (0x00000300UL)
  97:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  98:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_JDRX_REGOFFSET_MASK        (ADC_JDR1_REGOFFSET | ADC_JDR2_REGOFFSET \
  99:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_JDR3_REGOFFSET | ADC_JDR4_REGOFFSET)
 100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_ID_JSQR_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
 101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_JDRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_JDRx_REGOFFSET in ADC_INJ_
 102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of ADC group injected sequencer bits information to be inserted */
 104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* into ADC group injected sequencer ranks literals definition.               */
 105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_1_JSQR_BITOFFSET_POS  ( 8UL) /* Value equivalent to bitfield "ADC_JSQR_JSQ1" p
 106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_2_JSQR_BITOFFSET_POS  (14UL) /* Value equivalent to bitfield "ADC_JSQR_JSQ2" p
 107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_3_JSQR_BITOFFSET_POS  (20UL) /* Value equivalent to bitfield "ADC_JSQR_JSQ3" p
 108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_4_JSQR_BITOFFSET_POS  (26UL) /* Value equivalent to bitfield "ADC_JSQR_JSQ4" p
 109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC group regular trigger:                               */
 113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_REG_TRIG_x the relevant bits for:            */
 114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - regular trigger source                                                   */
 115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - regular trigger edge                                                     */
 116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_EXT_EDGE_DEFAULT       (ADC_CFGR_EXTEN_0) /* Trigger edge set to rising edge (
 117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_SOURCE_MASK            (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTSEL) << (4U *
 122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
ARM GAS  /tmp/ccTvghLi.s 			page 7


 126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_EDGE_MASK              (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN) << (4U * 
 130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of ADC group regular trigger bits information.                  */
 135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_EXTSEL_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_CFGR_EXTSEL"
 136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_EXTEN_BITOFFSET_POS   (10UL) /* Value equivalent to bitfield "ADC_CFGR_EXTEN" 
 137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC group injected trigger:                              */
 141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_TRIG_x the relevant bits for:            */
 142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - injected trigger source                                                  */
 143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - injected trigger edge                                                    */
 144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXT_EDGE_DEFAULT      (ADC_JSQR_JEXTEN_0) /* Trigger edge set to rising edge (
 145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_SOURCE_MASK            (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTSEL)  << (4U
 150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
 151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
 152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
 153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_EDGE_MASK              (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN) << (4U *
 158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of ADC group injected trigger bits information.                 */
 163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXTSEL_BITOFFSET_POS  ( 2UL) /* Value equivalent to bitfield "ADC_JSQR_JEXTSEL
 164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXTEN_BITOFFSET_POS   ( 6UL) /* Value equivalent to bitfield "ADC_JSQR_JEXTEN"
 165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC channel:                                             */
 172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_CHANNEL_x the relevant bits for:             */
 173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - channel identifier defined by number                                     */
 174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - channel identifier defined by bitfield                                   */
 175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - channel differentiation between external channels (connected to          */
 176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*   GPIO pins) and internal channels (connected to internal paths)           */
 177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - channel sampling time defined by SMPRx register offset                   */
 178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*   and SMPx bits positions into SMPRx register                              */
 179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK         (ADC_CFGR_AWD1CH)
 180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_BITFIELD_MASK       (ADC_AWD2CR_AWD2CH)
 181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS (26UL)/* Value equivalent to bitfield "ADC_CHANNEL_ID_N
 182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_MASK                (ADC_CHANNEL_ID_NUMBER_MASK | ADC_CHANNEL_ID_BITFIELD_MA
ARM GAS  /tmp/ccTvghLi.s 			page 8


 183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CHANNEL_ID_INTERNAL_CH_MASK)
 184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Equivalent mask of ADC_CHANNEL_NUMBER_MASK aligned on register LSB (bit 0) */
 185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 (ADC_SQR2_SQ5) /* Equivalent to shift: (ADC_CHANNEL_NUMB
 186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Channel differentiation between external and internal channels */
 188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH         (0x80000000UL) /* Marker of internal channel */
 189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_2       (0x00080000UL) /* Marker of internal channel for other A
 190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_MASK    (ADC_CHANNEL_ID_INTERNAL_CH | ADC_CHANNEL_ID_INTERNAL_CH
 191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC channel sampling time configuration */
 193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
 194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SMPR1_REGOFFSET                (0x00000000UL)
 195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SMPR2_REGOFFSET                (0x02000000UL)
 196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_SMPRX_REGOFFSET_MASK   (ADC_SMPR1_REGOFFSET | ADC_SMPR2_REGOFFSET)
 197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SMPRX_REGOFFSET_POS            (25UL) /* Position of bits ADC_SMPRx_REGOFFSET in ADC_CH
 198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_MASK    (0x01F00000UL)
 200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_POS     (20UL)           /* Value equivalent to bitfield "ADC_CH
 201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of channels ID number information to be inserted into           */
 203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* channels literals definition.                                              */
 204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_0_NUMBER               (0x00000000UL)
 205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_1_NUMBER               (ADC_CFGR_AWD1CH_0)
 206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_2_NUMBER               (ADC_CFGR_AWD1CH_1)
 207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_3_NUMBER               (ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH_0)
 208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_4_NUMBER               (ADC_CFGR_AWD1CH_2)
 209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_5_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_0)
 210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_6_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_1)
 211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_7_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH
 212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_8_NUMBER               (ADC_CFGR_AWD1CH_3)
 213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_9_NUMBER               (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_0)
 214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_10_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_1)
 215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_11_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH
 216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_12_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2)
 217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_13_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH
 218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_14_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH
 219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_15_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | \
 220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH_0)
 221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_16_NUMBER              (ADC_CFGR_AWD1CH_4)
 222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_17_NUMBER              (ADC_CFGR_AWD1CH_4 | ADC_CFGR_AWD1CH_0)
 223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_18_NUMBER              (ADC_CFGR_AWD1CH_4 | ADC_CFGR_AWD1CH_1)
 224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of channels ID bitfield information to be inserted into         */
 226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* channels literals definition.                                              */
 227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_0_BITFIELD             (ADC_AWD2CR_AWD2CH_0)
 228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_1_BITFIELD             (ADC_AWD2CR_AWD2CH_1)
 229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_2_BITFIELD             (ADC_AWD2CR_AWD2CH_2)
 230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_3_BITFIELD             (ADC_AWD2CR_AWD2CH_3)
 231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_4_BITFIELD             (ADC_AWD2CR_AWD2CH_4)
 232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_5_BITFIELD             (ADC_AWD2CR_AWD2CH_5)
 233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_6_BITFIELD             (ADC_AWD2CR_AWD2CH_6)
 234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_7_BITFIELD             (ADC_AWD2CR_AWD2CH_7)
 235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_8_BITFIELD             (ADC_AWD2CR_AWD2CH_8)
 236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_9_BITFIELD             (ADC_AWD2CR_AWD2CH_9)
 237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_10_BITFIELD            (ADC_AWD2CR_AWD2CH_10)
 238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_11_BITFIELD            (ADC_AWD2CR_AWD2CH_11)
 239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_12_BITFIELD            (ADC_AWD2CR_AWD2CH_12)
ARM GAS  /tmp/ccTvghLi.s 			page 9


 240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_13_BITFIELD            (ADC_AWD2CR_AWD2CH_13)
 241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_14_BITFIELD            (ADC_AWD2CR_AWD2CH_14)
 242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_15_BITFIELD            (ADC_AWD2CR_AWD2CH_15)
 243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_16_BITFIELD            (ADC_AWD2CR_AWD2CH_16)
 244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_17_BITFIELD            (ADC_AWD2CR_AWD2CH_17)
 245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_18_BITFIELD            (ADC_AWD2CR_AWD2CH_18)
 246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of channels sampling time information to be inserted into       */
 248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* channels literals definition.                                              */
 249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_0_SMP                  (ADC_SMPR1_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_1_SMP                  (ADC_SMPR1_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_2_SMP                  (ADC_SMPR1_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_3_SMP                  (ADC_SMPR1_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_4_SMP                  (ADC_SMPR1_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_5_SMP                  (ADC_SMPR1_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_6_SMP                  (ADC_SMPR1_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_7_SMP                  (ADC_SMPR1_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_8_SMP                  (ADC_SMPR1_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_9_SMP                  (ADC_SMPR1_REGOFFSET | ((27UL) << ADC_CHANNEL_SMPx_BITOF
 259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_10_SMP                 (ADC_SMPR2_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_11_SMP                 (ADC_SMPR2_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_12_SMP                 (ADC_SMPR2_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_13_SMP                 (ADC_SMPR2_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_14_SMP                 (ADC_SMPR2_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_15_SMP                 (ADC_SMPR2_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_16_SMP                 (ADC_SMPR2_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_17_SMP                 (ADC_SMPR2_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_18_SMP                 (ADC_SMPR2_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC mode single or differential ended:                   */
 271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literals LL_ADC_SINGLE_ENDED or LL_ADC_SINGLE_DIFFERENTIAL  */
 272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* the relevant bits for:                                                     */
 273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (concatenation of multiple bits used in different registers)               */
 274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - ADC calibration: calibration start, calibration factor get or set        */
 275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - ADC channels: set each ADC channel ending mode                           */
 276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_START_MASK    (ADC_CR_ADCALDIF)
 277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_FACTOR_MASK   (ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S)
 278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_MASK        (ADC_CHANNEL_ID_BITFIELD_MASK) /* Equivalent to ADC_DIFS
 279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_SHIFT_MASK  (ADC_CALFACT_CALFACT_S_4 | ADC_CALFACT_CALFACT_S_3) /* B
 280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK   (0x00010000UL)                           /* Selection o
 281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_POS    (16UL)                                   /* Selection o
 282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_SHIFT4 (ADC_SINGLEDIFF_CALIB_F_BIT_D_POS - 4UL) /* Shift of bi
 283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC analog watchdog:                                     */
 285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literals LL_ADC_AWD_CHANNELx_xxx the relevant bits for:     */
 286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (concatenation of multiple bits used in different analog watchdogs,        */
 287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (feature of several watchdogs not available on all STM32 families)).       */
 288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - analog watchdog 1: monitored channel defined by number,                  */
 289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*   selection of ADC group (ADC groups regular and-or injected).             */
 290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - analog watchdog 2 and 3: monitored channel defined by bitfield, no       */
 291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*   selection on groups.                                                     */
 292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog channel configuration */
 294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR1_REGOFFSET              (0x00000000UL)
 295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR2_REGOFFSET              (0x00100000UL)
 296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR3_REGOFFSET              (0x00200000UL)
ARM GAS  /tmp/ccTvghLi.s 			page 10


 297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Register offset gap between AWD1 and AWD2-AWD3 configuration registers */
 299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (Set separately as ADC_AWD_CRX_REGOFFSET to spare 32 bits space */
 300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_MASK     (ADC_AWD2CR_AWD2CH_0)
 301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_VAL      (0x00000024UL)
 302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_MASK         (ADC_AWD_CR1_REGOFFSET | ADC_AWD_CR2_REGOFFSET | ADC_AWD
 304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CFGR_AWD1CH | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | 
 306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR23_CHANNEL_MASK          (ADC_AWD2CR_AWD2CH)
 307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK | ADC_AWD_CR23_CHANNEL_MASK)
 308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_POS          (20UL) /* Position of bits ADC_AWD_CRx_REGOFFSET in ADC_
 310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog threshold configuration */
 312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TR1_REGOFFSET              (ADC_AWD_CR1_REGOFFSET)
 313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TR2_REGOFFSET              (ADC_AWD_CR2_REGOFFSET)
 314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TR3_REGOFFSET              (ADC_AWD_CR3_REGOFFSET)
 315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_MASK         (ADC_AWD_TR1_REGOFFSET | ADC_AWD_TR2_REGOFFSET | ADC_AWD
 316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_POS          (ADC_AWD_CRX_REGOFFSET_POS)     /* Position of bits ADC_
 317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_MASK          (0x00010000UL)                   /* Selection of 1 bit t
 318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_POS           (16UL)                           /* Selection of 1 bit t
 319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_SHIFT4        (ADC_AWD_TRX_BIT_HIGH_POS - 4UL) /* Shift of bit ADC_AWD
 320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC offset:                                              */
 322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC offset number configuration */
 323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_OFR1_REGOFFSET                 (0x00000000UL)
 324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_OFR2_REGOFFSET                 (0x00000001UL)
 325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_OFR3_REGOFFSET                 (0x00000002UL)
 326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_OFR4_REGOFFSET                 (0x00000003UL)
 327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_OFRx_REGOFFSET_MASK            (ADC_OFR1_REGOFFSET | ADC_OFR2_REGOFFSET \
 328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_OFR3_REGOFFSET | ADC_OFR4_REGOFFSET)
 329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* ADC registers bits positions */
 332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CFGR_RES_BITOFFSET_POS         ( 3UL) /* Value equivalent to bitfield "ADC_CFGR_RES" po
 333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CFGR_AWD1SGL_BITOFFSET_POS     (22UL) /* Value equivalent to bitfield "ADC_CFGR_AWD1SGL
 334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CFGR_AWD1EN_BITOFFSET_POS      (23UL) /* Value equivalent to bitfield "ADC_CFGR_AWD1EN"
 335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CFGR_JAWD1EN_BITOFFSET_POS     (24UL) /* Value equivalent to bitfield "ADC_CFGR_JAWD1EN
 336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_TR1_HT1_BITOFFSET_POS          (16UL) /* Value equivalent to bitfield "ADC_TR1_HT1" pos
 337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* ADC registers bits groups */
 340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CR_BITS_PROPERTY_RS            (ADC_CR_ADCAL | ADC_CR_JADSTP | ADC_CR_ADSTP | ADC_CR_JA
 341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* ADC internal channels related definitions */
 344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal voltage reference VrefInt */
 345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x1FFF75AAUL)) /* Internal voltage referen
 346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define VREFINT_CAL_VREF                   ( 3000UL)                    /* Analog voltage reference
 347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Temperature sensor */
 348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x1FFF75A8UL)) /* Internal temperature sen
 349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL2_ADDR               ((uint16_t*) (0x1FFF75CAUL)) /* Internal temperature sen
 350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL1_TEMP               (( int32_t)   30L)           /* Internal temperature sen
 351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined (STM32L471xx) || defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32L485xx
 352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (110L)                       /* Internal temperature sen
 353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #else
ARM GAS  /tmp/ccTvghLi.s 			page 11


 354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (130L)                       /* Internal temperature sen
 355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* defined (STM32L471xx) || defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32
 356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL_VREFANALOG          (3000UL)                     /* Analog voltage reference
 357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Private macros ------------------------------------------------------------*/
 364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Macros ADC Private Macros
 365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Driver macro reserved for internal use: set a pointer to
 370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a register from a register basis from which an offset
 371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is applied.
 372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __REG__ Register basis from which the offset is applied.
 373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __REG_OFFFSET__ Offset to be applied (unit: number of registers).
 374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Pointer to register address
 375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __ADC_PTR_REG_OFFSET(__REG__, __REG_OFFFSET__)                         \
 377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((__IO uint32_t *)((uint32_t) ((uint32_t)(&(__REG__)) + ((__REG_OFFFSET__) << 2UL))))
 378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Exported types ------------------------------------------------------------*/
 385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(USE_FULL_LL_DRIVER)
 386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_ES_INIT ADC Exported Init structure
 387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC common parameters
 392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and multimode
 393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (all ADC instances belonging to the same ADC common instance).
 394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_CommonInit()
 395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is conditioned to ADC instances state (all ADC instances
 396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sharing the same ADC common instance):
 397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances sharing the same ADC common instance must be
 398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         disabled.
 399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** typedef struct
 401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t CommonClock;                 /*!< Set parameter common to several ADC: Clock source and 
 403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_COMMON
 404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @note On this STM32 series, if ADC group injected is u
 405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    clock ratio constraints between ADC clock and AH
 406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    must be respected. Refer to reference manual.
 407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
ARM GAS  /tmp/ccTvghLi.s 			page 12


 411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t Multimode;                   /*!< Set ADC multimode configuration to operate in independ
 412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t MultiDMATransfer;            /*!< Set ADC multimode conversion data transfer: no transfe
 417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t MultiTwoSamplingDelay;       /*!< Set ADC multimode delay between 2 sampling phases.
 422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** } LL_ADC_CommonInitTypeDef;
 428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC instance.
 431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC instance.
 432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Affects both group regular and group injected (availability
 433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of ADC group injected depends on STM32 families).
 434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is conditioned to ADC state:
 438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance must be disabled.
 439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         refer to description of each function for setting
 447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         conditioned to ADC state.
 448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** typedef struct
 450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t Resolution;                  /*!< Set ADC resolution.
 452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_RESOLU
 453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t DataAlignment;               /*!< Set ADC conversion data alignment.
 457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_DATA_A
 458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t LowPowerMode;                /*!< Set ADC low power mode.
 462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LP_MOD
 463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** } LL_ADC_InitTypeDef;
 467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
ARM GAS  /tmp/ccTvghLi.s 			page 13


 468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group regular.
 470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
 471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (functions with prefix "REG").
 474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_REG_Init()
 475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is conditioned to ADC state:
 476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance must be disabled.
 477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         refer to description of each function for setting
 485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         conditioned to ADC state.
 486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** typedef struct
 488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group regular conversion trigger source: inter
 490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_TR
 491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group regular sequencer length.
 498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group regular sequencer discontinuous mode: se
 503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    (scan length of 2 ranks or more).
 506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t ContinuousMode;              /*!< Set ADC continuous conversion mode on ADC group regula
 510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_CO
 511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              Note: It is not possible to enable both ADC group regu
 512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t DMATransfer;                 /*!< Set ADC group regular conversion data transfer: no tra
 516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_DM
 517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t Overrun;                     /*!< Set ADC group regular behavior in case of overrun:
 521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              data preserved or overwritten.
 522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_OV
 523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
ARM GAS  /tmp/ccTvghLi.s 			page 14


 525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** } LL_ADC_REG_InitTypeDef;
 527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group injected.
 530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group injected.
 531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (functions with prefix "INJ").
 534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_INJ_Init()
 535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is conditioned to ADC state:
 536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance must be disabled.
 537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         refer to description of each function for setting
 545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         conditioned to ADC state.
 546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** typedef struct
 548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group injected conversion trigger source: inte
 550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group injected sequencer length.
 558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group injected sequencer discontinuous mode: s
 563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @note This parameter has an effect only if group injec
 565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    (scan length of 2 ranks or more).
 566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t TrigAuto;                    /*!< Set ADC group injected conversion trigger: independent
 570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              Note: This parameter must be set to set to independent
 572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** } LL_ADC_INJ_InitTypeDef;
 576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* USE_FULL_LL_DRIVER */
 581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
ARM GAS  /tmp/ccTvghLi.s 			page 15


 582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Exported constants --------------------------------------------------------*/
 583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Constants ADC Exported Constants
 584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_FLAG ADC flags
 588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief    Flags defines which can be used with LL_ADC_ReadReg function
 589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY                  ADC_ISR_ADRDY      /*!< ADC flag ADC instance ready */
 592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC                    ADC_ISR_EOC        /*!< ADC flag ADC group regular end o
 593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS                    ADC_ISR_EOS        /*!< ADC flag ADC group regular end o
 594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR                    ADC_ISR_OVR        /*!< ADC flag ADC group regular overr
 595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP                  ADC_ISR_EOSMP      /*!< ADC flag ADC group regular end o
 596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC                   ADC_ISR_JEOC       /*!< ADC flag ADC group injected end 
 597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS                   ADC_ISR_JEOS       /*!< ADC flag ADC group injected end 
 598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF                  ADC_ISR_JQOVF      /*!< ADC flag ADC group injected cont
 599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1                   ADC_ISR_AWD1       /*!< ADC flag ADC analog watchdog 1 *
 600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2                   ADC_ISR_AWD2       /*!< ADC flag ADC analog watchdog 2 *
 601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3                   ADC_ISR_AWD3       /*!< ADC flag ADC analog watchdog 3 *
 602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY_MST              ADC_CSR_ADRDY_MST  /*!< ADC flag ADC multimode master in
 604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY_SLV              ADC_CSR_ADRDY_SLV  /*!< ADC flag ADC multimode slave ins
 605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC_MST                ADC_CSR_EOC_MST    /*!< ADC flag ADC multimode master gr
 606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC_SLV                ADC_CSR_EOC_SLV    /*!< ADC flag ADC multimode slave gro
 607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_MST                ADC_CSR_EOS_MST    /*!< ADC flag ADC multimode master gr
 608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_SLV                ADC_CSR_EOS_SLV    /*!< ADC flag ADC multimode slave gro
 609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR_MST                ADC_CSR_OVR_MST    /*!< ADC flag ADC multimode master gr
 610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR_SLV                ADC_CSR_OVR_SLV    /*!< ADC flag ADC multimode slave gro
 611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP_MST              ADC_CSR_EOSMP_MST  /*!< ADC flag ADC multimode master gr
 612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP_SLV              ADC_CSR_EOSMP_SLV  /*!< ADC flag ADC multimode slave gro
 613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC_MST               ADC_CSR_JEOC_MST   /*!< ADC flag ADC multimode master gr
 614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC_SLV               ADC_CSR_JEOC_SLV   /*!< ADC flag ADC multimode slave gro
 615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_MST               ADC_CSR_JEOS_MST   /*!< ADC flag ADC multimode master gr
 616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_SLV               ADC_CSR_JEOS_SLV   /*!< ADC flag ADC multimode slave gro
 617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF_MST              ADC_CSR_JQOVF_MST  /*!< ADC flag ADC multimode master gr
 618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF_SLV              ADC_CSR_JQOVF_SLV  /*!< ADC flag ADC multimode slave gro
 619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_MST               ADC_CSR_AWD1_MST   /*!< ADC flag ADC multimode master an
 620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_SLV               ADC_CSR_AWD1_SLV   /*!< ADC flag ADC multimode slave ana
 621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2_MST               ADC_CSR_AWD2_MST   /*!< ADC flag ADC multimode master an
 622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2_SLV               ADC_CSR_AWD2_SLV   /*!< ADC flag ADC multimode slave ana
 623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3_MST               ADC_CSR_AWD3_MST   /*!< ADC flag ADC multimode master an
 624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3_SLV               ADC_CSR_AWD3_SLV   /*!< ADC flag ADC multimode slave ana
 625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_IT ADC interruptions for configuration (interruption enable or disable)
 631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief    IT defines which can be used with LL_ADC_ReadReg and  LL_ADC_WriteReg functions
 632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_ADRDY                    ADC_IER_ADRDYIE    /*!< ADC interruption ADC instance re
 635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_EOC                      ADC_IER_EOCIE      /*!< ADC interruption ADC group regul
 636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_EOS                      ADC_IER_EOSIE      /*!< ADC interruption ADC group regul
 637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_OVR                      ADC_IER_OVRIE      /*!< ADC interruption ADC group regul
 638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_EOSMP                    ADC_IER_EOSMPIE    /*!< ADC interruption ADC group regul
ARM GAS  /tmp/ccTvghLi.s 			page 16


 639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_JEOC                     ADC_IER_JEOCIE     /*!< ADC interruption ADC group injec
 640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_JEOS                     ADC_IER_JEOSIE     /*!< ADC interruption ADC group injec
 641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_JQOVF                    ADC_IER_JQOVFIE    /*!< ADC interruption ADC group injec
 642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_AWD1                     ADC_IER_AWD1IE     /*!< ADC interruption ADC analog watc
 643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_AWD2                     ADC_IER_AWD2IE     /*!< ADC interruption ADC analog watc
 644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_AWD3                     ADC_IER_AWD3IE     /*!< ADC interruption ADC analog watc
 645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REGISTERS  ADC registers compliant with specific purpose
 650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* List of ADC registers intended to be used (most commonly) with             */
 653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* DMA transfer.                                                              */
 654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Refer to function @ref LL_ADC_DMA_GetRegAddr().                            */
 655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA          (0x00000000UL) /* ADC group regular conversion data re
 656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA_MULTI    (0x00000001UL) /* ADC group regular conversion data re
 658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_SOURCE  ADC common - Clock source
 664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV1        (ADC_CCR_CKMODE_0)                                    /*
 667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV2        (ADC_CCR_CKMODE_1                   )                 /*
 668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV4        (ADC_CCR_CKMODE_1 | ADC_CCR_CKMODE_0)                 /*
 669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV1            (0x00000000UL)                                        /*
 670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV2            (ADC_CCR_PRESC_0)                                     /*
 671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV4            (ADC_CCR_PRESC_1                  )                   /*
 672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV6            (ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0)                   /*
 673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV8            (ADC_CCR_PRESC_2                                    ) /*
 674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV10           (ADC_CCR_PRESC_2                   | ADC_CCR_PRESC_0) /*
 675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV12           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1                  ) /*
 676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV16           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV32           (ADC_CCR_PRESC_3)                                     /*
 678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV64           (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_0)                   /*
 679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV128          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1)                   /*
 680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV256          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_PATH_INTERNAL  ADC common - Measurement path to internal channels
 686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Note: Other measurement paths to internal channels may be available        */
 689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       (connections to other peripherals).                                  */
 690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       If they are not listed below, they do not require any specific       */
 691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       path enable. In this case, Access to measurement path is done        */
 692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       only by selecting the corresponding ADC internal channel.            */
 693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_NONE          (0x00000000UL)         /*!< ADC measurement paths all di
 694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VREFINT       (ADC_CCR_VREFEN)       /*!< ADC measurement path to inte
 695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_TEMPSENSOR    (ADC_CCR_TSEN)         /*!< ADC measurement path to inte
ARM GAS  /tmp/ccTvghLi.s 			page 17


 696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VBAT          (ADC_CCR_VBATEN)       /*!< ADC measurement path to inte
 697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_RESOLUTION  ADC instance - Resolution
 702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B              (0x00000000UL)                      /*!< ADC resolution 
 705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_10B              (                 ADC_CFGR_RES_0)   /*!< ADC resolution 
 706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR_RES_1                 )   /*!< ADC resolution 
 707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_6B               (ADC_CFGR_RES_1 | ADC_CFGR_RES_0)   /*!< ADC resolution 
 708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_DATA_ALIGN  ADC instance - Data alignment
 713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_RIGHT            (0x00000000UL)         /*!< ADC conversion data alignmen
 716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_LEFT             (ADC_CFGR_ALIGN)       /*!< ADC conversion data alignmen
 717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LP_MODE  ADC instance - Low power mode
 722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_LP_MODE_NONE                (0x00000000UL)                      /*!< No ADC low powe
 725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR_AUTDLY)                   /*!< ADC low power m
 726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_NB  ADC instance - Offset number
 731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_1                    ADC_OFR1_REGOFFSET /*!< ADC offset number 1: ADC channel
 734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_2                    ADC_OFR2_REGOFFSET /*!< ADC offset number 2: ADC channel
 735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_3                    ADC_OFR3_REGOFFSET /*!< ADC offset number 3: ADC channel
 736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_4                    ADC_OFR4_REGOFFSET /*!< ADC offset number 4: ADC channel
 737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_STATE ADC instance - Offset state
 742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_DISABLE              (0x00000000UL)         /*!< ADC offset disabled (among A
 745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_ENABLE               (ADC_OFR1_OFFSET1_EN)  /*!< ADC offset enabled (among AD
 746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_GROUPS  ADC instance - Groups
 751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccTvghLi.s 			page 18


 753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR               (0x00000001UL) /*!< ADC group regular (available on all 
 754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_GROUP_INJECTED              (0x00000002UL) /*!< ADC group injected (not available on
 755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR_INJECTED      (0x00000003UL) /*!< ADC both groups regular and injected
 756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL  ADC instance - Channel number
 761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER  | ADC_CHANNEL_0_SMP  | ADC_CHANNE
 764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER  | ADC_CHANNEL_1_SMP  | ADC_CHANNE
 765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER  | ADC_CHANNEL_2_SMP  | ADC_CHANNE
 766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER  | ADC_CHANNEL_3_SMP  | ADC_CHANNE
 767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER  | ADC_CHANNEL_4_SMP  | ADC_CHANNE
 768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER  | ADC_CHANNEL_5_SMP  | ADC_CHANNE
 769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER  | ADC_CHANNEL_6_SMP  | ADC_CHANNE
 770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER  | ADC_CHANNEL_7_SMP  | ADC_CHANNE
 771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER  | ADC_CHANNEL_8_SMP  | ADC_CHANNE
 772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER  | ADC_CHANNEL_9_SMP  | ADC_CHANNE
 773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER | ADC_CHANNEL_10_SMP | ADC_CHANNE
 774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER | ADC_CHANNEL_11_SMP | ADC_CHANNE
 775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER | ADC_CHANNEL_12_SMP | ADC_CHANNE
 776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER | ADC_CHANNEL_13_SMP | ADC_CHANNE
 777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER | ADC_CHANNEL_14_SMP | ADC_CHANNE
 778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER | ADC_CHANNEL_15_SMP | ADC_CHANNE
 779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER | ADC_CHANNEL_16_SMP | ADC_CHANNE
 780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER | ADC_CHANNEL_17_SMP | ADC_CHANNE
 781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_18                  (ADC_CHANNEL_18_NUMBER | ADC_CHANNEL_18_SMP | ADC_CHANNE
 782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_0  | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC1) && !defined(ADC2)
 786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH1             (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH2             (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined(ADC2)
 789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH1_ADC2        (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH2_ADC2        (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC3)
 792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH1_ADC3        (LL_ADC_CHANNEL_14 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH2_ADC3        (LL_ADC_CHANNEL_15 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC3 */
 795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC1 && !ADC2 */
 796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_SOURCE  ADC group regular - Trigger source
 801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE           (0x00000000UL)                                          
 804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO2     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EX
 806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH1       (ADC_REG_TRIG_EXT_EDGE_DEFAULT)                         
 807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH2       (ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH3       (ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL
ARM GAS  /tmp/ccTvghLi.s 			page 19


 810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH2       (ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_TRGO      (ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_CH4       (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EX
 814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_CH4       (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM6_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO      (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL
 817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO2     (ADC_CFGR_EXTSEL_3 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM15_TRGO     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11    (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EX
 820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_EDGE  ADC group regular - Trigger edge
 825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISING         (                   ADC_CFGR_EXTEN_0)   /*!< ADC group r
 828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_FALLING        (ADC_CFGR_EXTEN_1                   )   /*!< ADC group r
 829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISINGFALLING  (ADC_CFGR_EXTEN_1 | ADC_CFGR_EXTEN_0)   /*!< ADC group r
 830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_CONTINUOUS_MODE  ADC group regular - Continuous mode
 835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_CONV_SINGLE             (0x00000000UL)          /*!< ADC conversions are perform
 838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_CONV_CONTINUOUS         (ADC_CFGR_CONT)         /*!< ADC conversions are perform
 839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DMA_TRANSFER  ADC group regular - DMA transfer of ADC conversion data
 844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_NONE       (0x00000000UL)                        /*!< ADC conversio
 847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_LIMITED    (                  ADC_CFGR_DMAEN)    /*!< ADC conversio
 848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_UNLIMITED  (ADC_CFGR_DMACFG | ADC_CFGR_DMAEN)    /*!< ADC conversio
 849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_CFGR_DFSDMCFG) &&defined(DFSDM1_Channel0)
 854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DFSDM_TRANSFER ADC group regular - DFSDM transfer of ADC conversion dat
 855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DFSDM_TRANSFER_NONE     (0x00000000UL)          /*!< ADC conversions are not tra
 858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DFSDM_TRANSFER_ENABLE   (ADC_CFGR_DFSDMCFG)     /*!< ADC conversion data are tra
 859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_CFGR_DFSDMCFG */
 863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_SMPR1_SMPPLUS)
 865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_SAMPLINGTIME_COMMON_CONFIG ADC instance - ADC sampling time common configur
 866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
ARM GAS  /tmp/ccTvghLi.s 			page 20


 867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_DEFAULT      (0x00000000UL)      /*!< ADC sampling time let to d
 869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5 (ADC_SMPR1_SMPPLUS) /*!< ADC additional sampling ti
 870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif
 874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_OVR_DATA_BEHAVIOR  ADC group regular - Overrun behavior on conversion d
 876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_PRESERVED      (0x00000000UL)         /*!< ADC group regular behavior i
 879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_OVERWRITTEN    (ADC_CFGR_OVRMOD)      /*!< ADC group regular behavior i
 880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_LENGTH  ADC group regular - Sequencer scan length
 885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DISABLE        (0x00000000UL)                                          
 888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS  (                                             ADC_SQR1_L
 889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS  (                              ADC_SQR1_L_1             
 890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS  (                              ADC_SQR1_L_1 | ADC_SQR1_L
 891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS  (               ADC_SQR1_L_2                            
 892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS  (               ADC_SQR1_L_2                | ADC_SQR1_L
 893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS  (               ADC_SQR1_L_2 | ADC_SQR1_L_1             
 894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS  (               ADC_SQR1_L_2 | ADC_SQR1_L_1 | ADC_SQR1_L
 895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS  (ADC_SQR1_L_3                                           
 896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS (ADC_SQR1_L_3                               | ADC_SQR1_L
 897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS (ADC_SQR1_L_3                | ADC_SQR1_L_1             
 898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS (ADC_SQR1_L_3                | ADC_SQR1_L_1 | ADC_SQR1_L
 899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2                            
 900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2                | ADC_SQR1_L
 901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 | ADC_SQR1_L_1             
 902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 | ADC_SQR1_L_1 | ADC_SQR1_L
 903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_DISCONT_MODE  ADC group regular - Sequencer discontinuous mode
 908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_DISABLE     (0x00000000UL)                                          
 911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (                                                       
 912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_2RANKS      (                                          ADC_CFGR_DISC
 913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_3RANKS      (                     ADC_CFGR_DISCNUM_1                
 914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_4RANKS      (                     ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISC
 915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_5RANKS      (ADC_CFGR_DISCNUM_2                                     
 916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_6RANKS      (ADC_CFGR_DISCNUM_2                      | ADC_CFGR_DISC
 917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_7RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1                
 918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_8RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISC
 919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_RANKS  ADC group regular - Sequencer ranks
ARM GAS  /tmp/ccTvghLi.s 			page 21


 924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_1                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_1_SQRX_BITOFFSET_POS)
 927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_2                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_2_SQRX_BITOFFSET_POS)
 928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_3                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_3_SQRX_BITOFFSET_POS)
 929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_4                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_4_SQRX_BITOFFSET_POS)
 930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_5                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_5_SQRX_BITOFFSET_POS)
 931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_6                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_6_SQRX_BITOFFSET_POS)
 932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_7                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_7_SQRX_BITOFFSET_POS)
 933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_8                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_8_SQRX_BITOFFSET_POS)
 934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_9                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_9_SQRX_BITOFFSET_POS)
 935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_10                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_10_SQRX_BITOFFSET_POS
 936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_11                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_11_SQRX_BITOFFSET_POS
 937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_12                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_12_SQRX_BITOFFSET_POS
 938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_13                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_13_SQRX_BITOFFSET_POS
 939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_14                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_14_SQRX_BITOFFSET_POS
 940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_15                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_15_SQRX_BITOFFSET_POS
 941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_16                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_16_SQRX_BITOFFSET_POS
 942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_SOURCE  ADC group injected - Trigger source
 947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_SOFTWARE           (0x00000000UL)                                          
 950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO      (ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                         
 951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
 952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_CH4       (ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
 953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_TRGO      (ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
 954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_CH1       (ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
 955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_
 956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH1       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
 957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH3       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
 958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
 959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM4_TRGO      (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
 960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM6_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
 961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
 962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
 963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
 964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM15_TRGO     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
 965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_EXTI_LINE15    (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
 966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_EDGE  ADC group injected - Trigger edge
 971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISING         (                    ADC_JSQR_JEXTEN_0) /*!< ADC group i
 974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_FALLING        (ADC_JSQR_JEXTEN_1                    ) /*!< ADC group i
 975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISINGFALLING  (ADC_JSQR_JEXTEN_1 | ADC_JSQR_JEXTEN_0) /*!< ADC group i
 976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIG_AUTO  ADC group injected - Automatic trigger mode
ARM GAS  /tmp/ccTvghLi.s 			page 22


 981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_INDEPENDENT        (0x00000000UL)         /*!< ADC group injected conversio
 984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_FROM_GRP_REGULAR   (ADC_CFGR_JAUTO)       /*!< ADC group injected conversio
 985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_CONTEXT_QUEUE  ADC group injected - Context queue mode
 990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE (0x00000000UL)         /* Group injected sequence co
 993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY   (ADC_CFGR_JQM)         /* Group injected sequence co
 994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_DISABLE               (ADC_CFGR_JQDIS)       /* Group injected sequence co
 995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_SCAN_LENGTH  ADC group injected - Sequencer scan length
1000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_DISABLE        (0x00000000UL)                  /*!< ADC group injected 
1003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS  (                ADC_JSQR_JL_0) /*!< ADC group injected 
1004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS  (ADC_JSQR_JL_1                ) /*!< ADC group injected 
1005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS  (ADC_JSQR_JL_1 | ADC_JSQR_JL_0) /*!< ADC group injected 
1006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_DISCONT_MODE  ADC group injected - Sequencer discontinuous mode
1011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_DISABLE     (0x00000000UL)         /*!< ADC group injected sequencer
1014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_1RANK       (ADC_CFGR_JDISCEN)     /*!< ADC group injected sequencer
1015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_RANKS  ADC group injected - Sequencer ranks
1020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_1                  (ADC_JDR1_REGOFFSET | ADC_INJ_RANK_1_JSQR_BITOFFSET_POS)
1023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_2                  (ADC_JDR2_REGOFFSET | ADC_INJ_RANK_2_JSQR_BITOFFSET_POS)
1024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_3                  (ADC_JDR3_REGOFFSET | ADC_INJ_RANK_3_JSQR_BITOFFSET_POS)
1025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_4                  (ADC_JDR4_REGOFFSET | ADC_INJ_RANK_4_JSQR_BITOFFSET_POS)
1026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
1031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_2CYCLES_5      (0x00000000UL)                                          
1034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_6CYCLES_5      (                                        ADC_SMPR2_SMP10
1035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_12CYCLES_5     (                    ADC_SMPR2_SMP10_1                  
1036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_24CYCLES_5     (                    ADC_SMPR2_SMP10_1 | ADC_SMPR2_SMP10
1037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_47CYCLES_5     (ADC_SMPR2_SMP10_2                                      
ARM GAS  /tmp/ccTvghLi.s 			page 23


1038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_92CYCLES_5     (ADC_SMPR2_SMP10_2                     | ADC_SMPR2_SMP10
1039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_247CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1                  
1040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_640CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1 | ADC_SMPR2_SMP10
1041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SINGLE_DIFF_ENDING  Channel - Single or differential ending
1046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SINGLE_ENDED                (                  ADC_CALFACT_CALFACT_S)         /*!< A
1049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DIFFERENTIAL_ENDED          (ADC_CR_ADCALDIF | ADC_CALFACT_CALFACT_D)         /*!< A
1050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_BOTH_SINGLE_DIFF_ENDED      (LL_ADC_SINGLE_ENDED | LL_ADC_DIFFERENTIAL_ENDED) /*!< A
1051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_NUMBER Analog watchdog - Analog watchdog number
1056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD1                        (ADC_AWD_CR1_CHANNEL_MASK  | ADC_AWD_CR1_REGOFFSET) /*!<
1059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD2                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR2_REGOFFSET) /*!<
1060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD3                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR3_REGOFFSET) /*!<
1061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_CHANNELS  Analog watchdog - Monitored channels
1066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 (0x00000000UL)                                          
1069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (ADC_AWD_CR23_CHANNEL_MASK                              
1070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_INJ        (ADC_AWD_CR23_CHANNEL_MASK                 | ADC_CFGR_JA
1071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG_INJ    (ADC_AWD_CR23_CHANNEL_MASK                 | ADC_CFGR_JA
1072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK)              
1073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_INJ           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG_INJ       ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK)              
1076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_INJ           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG_INJ       ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK)              
1079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_INJ           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG_INJ       ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK)              
1082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_INJ           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG_INJ       ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK)              
1085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_INJ           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG_INJ       ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK)              
1088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_INJ           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG_INJ       ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK)              
1091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_INJ           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG_INJ       ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK)              
1094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_INJ           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
ARM GAS  /tmp/ccTvghLi.s 			page 24


1095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG_INJ       ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK)              
1097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_INJ           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG_INJ       ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK)              
1100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_INJ           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG_INJ       ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK)              
1103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_INJ          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG_INJ      ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK)              
1106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_INJ          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG_INJ      ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK)              
1109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_INJ          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG_INJ      ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK)              
1112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_INJ          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG_INJ      ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK)              
1115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_INJ          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG_INJ      ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK)              
1118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_INJ          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG_INJ      ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK)              
1121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_INJ          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG_INJ      ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK)              
1124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_INJ          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG_INJ      ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK)              
1127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_INJ          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG_INJ      ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK)   
1130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_INJ          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) | 
1131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG_INJ      ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) | 
1132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG       ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK)   
1133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_INJ       ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK) | 
1134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ   ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK) | 
1135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK)   
1136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_INJ             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) | 
1137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG_INJ         ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) | 
1138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC1) && !defined(ADC2)
1139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_REG          ((LL_ADC_CHANNEL_DAC1CH1       & ADC_CHANNEL_ID_MASK)   
1140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_INJ          ((LL_ADC_CHANNEL_DAC1CH1       & ADC_CHANNEL_ID_MASK) | 
1141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_REG_INJ      ((LL_ADC_CHANNEL_DAC1CH1       & ADC_CHANNEL_ID_MASK) | 
1142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_REG          ((LL_ADC_CHANNEL_DAC1CH2       & ADC_CHANNEL_ID_MASK)   
1143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_INJ          ((LL_ADC_CHANNEL_DAC1CH2       & ADC_CHANNEL_ID_MASK) | 
1144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_REG_INJ      ((LL_ADC_CHANNEL_DAC1CH2       & ADC_CHANNEL_ID_MASK) | 
1145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined(ADC2)
1146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC2_REG     ((LL_ADC_CHANNEL_DAC1CH1_ADC2  & ADC_CHANNEL_ID_MASK)   
1147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC2_INJ     ((LL_ADC_CHANNEL_DAC1CH1_ADC2  & ADC_CHANNEL_ID_MASK) | 
1148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC2_REG_INJ ((LL_ADC_CHANNEL_DAC1CH1_ADC2  & ADC_CHANNEL_ID_MASK) | 
1149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC2_REG     ((LL_ADC_CHANNEL_DAC1CH2_ADC2  & ADC_CHANNEL_ID_MASK)   
1150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC2_INJ     ((LL_ADC_CHANNEL_DAC1CH2_ADC2  & ADC_CHANNEL_ID_MASK) | 
1151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC2_REG_INJ ((LL_ADC_CHANNEL_DAC1CH2_ADC2  & ADC_CHANNEL_ID_MASK) | 
ARM GAS  /tmp/ccTvghLi.s 			page 25


1152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC3)
1153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC3_REG     ((LL_ADC_CHANNEL_DAC1CH1_ADC3  & ADC_CHANNEL_ID_MASK)   
1154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC3_INJ     ((LL_ADC_CHANNEL_DAC1CH1_ADC3  & ADC_CHANNEL_ID_MASK) | 
1155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC3_REG_INJ ((LL_ADC_CHANNEL_DAC1CH1_ADC3  & ADC_CHANNEL_ID_MASK) | 
1156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC3_REG     ((LL_ADC_CHANNEL_DAC1CH2_ADC3  & ADC_CHANNEL_ID_MASK)   
1157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC3_INJ     ((LL_ADC_CHANNEL_DAC1CH2_ADC3  & ADC_CHANNEL_ID_MASK) | 
1158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC3_REG_INJ ((LL_ADC_CHANNEL_DAC1CH2_ADC3  & ADC_CHANNEL_ID_MASK) | 
1159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC3 */
1160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC1 && !ADC2 */
1161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_THRESHOLDS  Analog watchdog - Thresholds
1166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (ADC_TR1_HT1              ) /*!< ADC analog watchdog thr
1169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (              ADC_TR1_LT1) /*!< ADC analog watchdog thr
1170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLDS_HIGH_LOW     (ADC_TR1_HT1 | ADC_TR1_LT1) /*!< ADC analog watchdog bot
1171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SCOPE  Oversampling - Oversampling scope
1176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DISABLE                 (0x00000000UL)                                        /*
1179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_CONTINUED   (                                    ADC_CFGR2_ROVSE) /*
1180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_RESUMED     (ADC_CFGR2_ROVSM |                   ADC_CFGR2_ROVSE) /*
1181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJECTED            (                  ADC_CFGR2_JOVSE                  ) /*
1182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJ_REG_RESUMED     (                  ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE) /*
1183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_DISCONT_MODE  Oversampling - Discontinuous mode
1188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_REG_CONT                (0x00000000UL)         /*!< ADC oversampling discontinuo
1191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_REG_DISCONT             (ADC_CFGR2_TROVS)      /*!< ADC oversampling discontinuo
1192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_RATIO  Oversampling - Ratio
1197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_2                 (0x00000000UL)                                          
1200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_4                 (                                      ADC_CFGR2_OVSR_0)
1201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_8                 (                   ADC_CFGR2_OVSR_1                   )
1202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_16                (                   ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
1203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_32                (ADC_CFGR2_OVSR_2                                      )
1204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_64                (ADC_CFGR2_OVSR_2                    | ADC_CFGR2_OVSR_0)
1205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_128               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1                   )
1206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_256               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
1207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
ARM GAS  /tmp/ccTvghLi.s 			page 26


1209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SHIFT  Oversampling - Data shift
1212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_NONE              (0x00000000UL)                                          
1215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_1           (                                                       
1216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_2           (                                      ADC_CFGR2_OVSS_1 
1217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_3           (                                      ADC_CFGR2_OVSS_1 
1218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_4           (                   ADC_CFGR2_OVSS_2                    
1219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_5           (                   ADC_CFGR2_OVSS_2                    
1220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_6           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
1221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_7           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
1222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_8           (ADC_CFGR2_OVSS_3                                       
1223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
1228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MODE  Multimode - Mode
1229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_INDEPENDENT           (0x00000000UL)                                          
1232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIMULT       (                 ADC_CCR_DUAL_2 | ADC_CCR_DUAL_1       
1233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INTERL       (                 ADC_CCR_DUAL_2 | ADC_CCR_DUAL_1 | ADC_
1234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_SIMULT       (                 ADC_CCR_DUAL_2                  | ADC_
1235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_ALTERN       (ADC_CCR_DUAL_3                                   | ADC_
1236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM  (                                                   ADC_
1237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT  (                                  ADC_CCR_DUAL_1       
1238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM  (                                  ADC_CCR_DUAL_1 | ADC_
1239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_DMA_TRANSFER  Multimode - DMA transfer
1244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_EACH_ADC        (0x00000000UL)                                     /*!
1247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B (                 ADC_CCR_MDMA_1                 ) /*!
1248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B   (                 ADC_CCR_MDMA_1 | ADC_CCR_MDMA_0) /*!
1249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B (ADC_CCR_DMACFG | ADC_CCR_MDMA_1                 ) /*!
1250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B   (ADC_CCR_DMACFG | ADC_CCR_MDMA_1 | ADC_CCR_MDMA_0) /*!
1251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_TWOSMP_DELAY  Multimode - Delay between two sampling phases
1256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE   (0x00000000UL)                                          
1259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES  (                                                      A
1260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES  (                                    ADC_CCR_DELAY_1    
1261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES  (                                    ADC_CCR_DELAY_1 | A
1262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES  (                  ADC_CCR_DELAY_2                      
1263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (                  ADC_CCR_DELAY_2                   | A
1264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (                  ADC_CCR_DELAY_2 | ADC_CCR_DELAY_1    
1265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (                  ADC_CCR_DELAY_2 | ADC_CCR_DELAY_1 | A
ARM GAS  /tmp/ccTvghLi.s 			page 27


1266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (ADC_CCR_DELAY_3                                        
1267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (ADC_CCR_DELAY_3                                     | A
1268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (ADC_CCR_DELAY_3                   | ADC_CCR_DELAY_1    
1269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (ADC_CCR_DELAY_3                   | ADC_CCR_DELAY_1 | A
1270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MASTER_SLAVE  Multimode - ADC master or slave
1275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER                (                    ADC_CDR_RDATA_MST) /*!< In multimod
1278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_SLAVE                 (ADC_CDR_RDATA_SLV                    ) /*!< In multimod
1279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER_SLAVE          (ADC_CDR_RDATA_SLV | ADC_CDR_RDATA_MST) /*!< In multimod
1280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
1285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LEGACY ADC literals legacy naming
1287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SW_START           (LL_ADC_REG_TRIG_SOFTWARE)
1290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CC1       (LL_ADC_REG_TRIG_EXT_TIM1_CH1)
1291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CC2       (LL_ADC_REG_TRIG_EXT_TIM1_CH2)
1292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CC3       (LL_ADC_REG_TRIG_EXT_TIM1_CH3)
1293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CC2       (LL_ADC_REG_TRIG_EXT_TIM2_CH2)
1294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_CC4       (LL_ADC_REG_TRIG_EXT_TIM3_CH4)
1295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_CC4       (LL_ADC_REG_TRIG_EXT_TIM4_CH4)
1296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_SW_START           (LL_ADC_INJ_TRIG_SOFTWARE)
1298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_CC4       (LL_ADC_INJ_TRIG_EXT_TIM1_CH4)
1299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_CC1       (LL_ADC_INJ_TRIG_EXT_TIM2_CH1)
1300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CC1       (LL_ADC_INJ_TRIG_EXT_TIM3_CH1)
1301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CC3       (LL_ADC_INJ_TRIG_EXT_TIM3_CH3)
1302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CC4       (LL_ADC_INJ_TRIG_EXT_TIM3_CH4)
1303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_CC4       (LL_ADC_INJ_TRIG_EXT_TIM8_CH4)
1304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_NONE        (LL_ADC_OVS_SHIFT_NONE)
1306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_1           (LL_ADC_OVS_SHIFT_RIGHT_1)
1307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_2           (LL_ADC_OVS_SHIFT_RIGHT_2)
1308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_3           (LL_ADC_OVS_SHIFT_RIGHT_3)
1309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_4           (LL_ADC_OVS_SHIFT_RIGHT_4)
1310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_5           (LL_ADC_OVS_SHIFT_RIGHT_5)
1311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_6           (LL_ADC_OVS_SHIFT_RIGHT_6)
1312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_7           (LL_ADC_OVS_SHIFT_RIGHT_7)
1313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_8           (LL_ADC_OVS_SHIFT_RIGHT_8)
1314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HW_DELAYS  Definitions of ADC hardware constraints delays
1321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Only ADC peripheral HW delays are defined in ADC LL driver driver,
1322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         not timeout values.
ARM GAS  /tmp/ccTvghLi.s 			page 28


1323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         For details on delays values, refer to descriptions in source code
1324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         above each literal definition.
1325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Note: Only ADC peripheral HW delays are defined in ADC LL driver driver,   */
1329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       not timeout values.                                                  */
1330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       Timeout values for ADC operations are dependent to device clock      */
1331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       configuration (system clock versus ADC clock),                       */
1332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       and therefore must be defined in user application.                   */
1333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       Indications for estimation of ADC timeout delays, for this           */
1334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       STM32 series:                                                        */
1335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       - ADC calibration time: maximum delay is 112/fADC.                   */
1336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tCAL")                      */
1337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       - ADC enable time: maximum delay is 1 conversion cycle.              */
1338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tSTAB")                     */
1339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       - ADC disable time: maximum delay should be a few ADC clock cycles   */
1340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       - ADC stop conversion time: maximum delay should be a few ADC clock  */
1341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*         cycles                                                             */
1342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       - ADC conversion time: duration depending on ADC clock and ADC       */
1343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*         configuration.                                                     */
1344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*         (refer to device reference manual, section "Timing")               */
1345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay for ADC stabilization time (ADC voltage regulator start-up time)     */
1347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* parameter "tADCVREG_STUP").                                                */
1349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Unit: us                                                                   */
1350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DELAY_INTERNAL_REGUL_STAB_US ( 20UL)  /*!< Delay for ADC stabilization time (ADC vol
1351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay for internal voltage reference stabilization time.                   */
1353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* parameter "tstart_vrefint").                                               */
1355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Unit: us                                                                   */
1356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DELAY_VREFINT_STAB_US           ( 12UL)  /*!< Delay for internal voltage reference s
1357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay for temperature sensor stabilization time.                           */
1359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Literal set to maximum value (refer to device datasheet,                   */
1360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* parameter "tSTART").                                                       */
1361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Unit: us                                                                   */
1362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_STAB_US        (120UL)  /*!< Delay for temperature sensor stabiliza
1363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US ( 15UL)  /*!< Delay for temperature sensor buffer st
1364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay required between ADC end of calibration and ADC enable.              */
1366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Note: On this STM32 series, a minimum number of ADC clock cycles           */
1367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       are required between ADC end of calibration and ADC enable.          */
1368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
1369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
1370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
1371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
1372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES   (  4UL)  /*!< Delay required between ADC end of cali
1373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
ARM GAS  /tmp/ccTvghLi.s 			page 29


1380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Exported macro ------------------------------------------------------------*/
1384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Macros ADC Exported Macros
1385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EM_WRITE_READ Common write and read registers Macros
1389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Write a value in ADC register
1394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __REG__ Register to be written
1396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __VALUE__ Value to be written in the register
1397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
1398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
1400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Read a value in ADC register
1403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __REG__ Register to be read
1405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Register value
1406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
1408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EM_HELPER_MACRO ADC helper macro
1413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel number in decimal format
1418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from literals LL_ADC_CHANNEL_x.
1419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Example:
1420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           __LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_CHANNEL_4)
1421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           will return decimal number "4".
1422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The input can be a value from functions where a channel
1423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number is returned, either defined with number
1424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or with bitfield (only one bit must be set).
1425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
ARM GAS  /tmp/ccTvghLi.s 			page 30


1437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
1449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
1451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
1452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
1455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
1461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
1462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0 and Max_Data=18
1464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                        \
1466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0UL) ?                               \
1467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (                                                                                       \
1468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS \
1469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                                       \
1470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                                       \
1471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (                                                                                       \
1472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        (uint32_t)POSITION_VAL((__CHANNEL__))                                               \
1473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                                       \
1474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
1475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel in literal format LL_ADC_CHANNEL_x
1478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from number in decimal format.
1479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Example:
1480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           __LL_ADC_DECIMAL_NB_TO_CHANNEL(4)
1481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           will return a data equivalent to "LL_ADC_CHANNEL_4".
1482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __DECIMAL_NB__ Value between Min_Data=0 and Max_Data=18
1483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
ARM GAS  /tmp/ccTvghLi.s 			page 31


1494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
1507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
1509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
1510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
1513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
1519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
1520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
1522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
1523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                                             
1526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__DECIMAL_NB__) <= 9UL) ?                                                                     
1527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (                                                                                               
1528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                             |     
1529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                             |     
1530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        (ADC_SMPR1_REGOFFSET | (((3UL * (__DECIMAL_NB__))) << ADC_CHANNEL_SMPx_BITOFFSET_POS))      
1531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                                               
1532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                                               
1533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (                                                                                               
1534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                                   
1535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                                   
1536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        (ADC_SMPR2_REGOFFSET | (((3UL * ((__DECIMAL_NB__) - 10UL))) << ADC_CHANNEL_SMPx_BITOFFSET_PO
1537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                                               
1538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
1539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to determine whether the selected channel
1542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         corresponds to literal definitions of driver.
1543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The different literal definitions of ADC channels are:
1544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC internal channel:
1545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...
1546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC external channel (channel connected to a GPIO pin):
1547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...
1548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from literal
1549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
ARM GAS  /tmp/ccTvghLi.s 			page 32


1551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...),
1552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         must not be a value from functions where a channel number is
1553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         returned from ADC registers,
1554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         because internal and external channels share the same channel
1555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         parameters definitions of driver.
1557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
1581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
1583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
1584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
1587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
1593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
1594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value "0" if the channel corresponds to a parameter definition of a ADC external channe
1596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Value "1" if the channel corresponds to a parameter definition of a ADC internal channe
1597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL(__CHANNEL__)                              \
1599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_INTERNAL_CH_MASK) != 0UL)
1600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to convert a channel defined from parameter
1603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to its equivalent parameter definition of a ADC external channel
1606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...).
1607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The channel parameter can be, additionally to a value
ARM GAS  /tmp/ccTvghLi.s 			page 33


1608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         defined from parameter definition of a ADC internal channel
1609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...),
1610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a value defined from parameter definition of
1611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or a value from functions where a channel number is returned
1613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from ADC registers.
1614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
1638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
1640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
1641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
1644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
1650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
1651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
ARM GAS  /tmp/ccTvghLi.s 			page 34


1665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL(__CHANNEL__)                     \
1674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((__CHANNEL__) & ~ADC_CHANNEL_ID_INTERNAL_CH_MASK)
1675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to determine whether the internal channel
1678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         selected is available on the ADC instance selected.
1679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from parameter
1680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         must not be a value defined from parameter definition of
1683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or a value from functions where a channel number is
1685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         returned from ADC registers,
1686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         because internal and external channels share the same channel
1687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         parameters definitions of driver.
1689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_INSTANCE__ ADC instance
1690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
1695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
1697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
1698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
1701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.
1707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value "0" if the internal channel selected is not available on the ADC instance selecte
1708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Value "1" if the internal channel selected is available on the ADC instance selected.
1709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined (ADC1) && defined (ADC2) && defined (ADC3)
1711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__ADC_INSTANCE__) == ADC1) ?                                              \
1713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (                                                                           \
1714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                            \
1715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                            \
1716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)                                     \
1717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                           \
1718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                           \
1719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ((__ADC_INSTANCE__) == ADC2) ?                                              \
1720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     (                                                                          \
1721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)      ||                         \
ARM GAS  /tmp/ccTvghLi.s 			page 35


1722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1_ADC2) ||                         \
1723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2_ADC2)                            \
1724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     )                                                                          \
1725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     :                                                                          \
1726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__ADC_INSTANCE__) == ADC3) ?                                             \
1727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      (                                                                         \
1728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)      ||                        \
1729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR)   ||                        \
1730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)         ||                        \
1731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1_ADC3) ||                        \
1732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2_ADC3)                           \
1733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      )                                                                         \
1734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      :                                                                         \
1735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      (0UL)                                                                     \
1736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
1737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined (ADC1) && defined (ADC2)
1738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__ADC_INSTANCE__) == ADC1) ?                                              \
1740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (                                                                           \
1741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                            \
1742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                            \
1743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)                                     \
1744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                           \
1745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                           \
1746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ((__ADC_INSTANCE__) == ADC2) ?                                              \
1747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     (                                                                          \
1748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)      ||                         \
1749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1_ADC2) ||                         \
1750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2_ADC2)                            \
1751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     )                                                                          \
1752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     :                                                                          \
1753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     (0UL)                                                                      \
1754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
1755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined (ADC1)
1756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (                                                                            \
1758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                            \
1759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                            \
1760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)       ||                            \
1761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1)    ||                            \
1762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2)                                  \
1763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
1764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* defined (ADC1) && defined (ADC2) && defined (ADC3) */
1765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
1768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
1769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from sequencer channel and groups definition.
1770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
1771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example:
1772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
1773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
1774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
1775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
ARM GAS  /tmp/ccTvghLi.s 			page 36


1779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
1799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
1801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
1802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
1805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
1811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
1812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
1814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
1815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
1817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
1818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_INJECTED
1819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR_INJECTED
1820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
1822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
1823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
1824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
1825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
1826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
1827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
1828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
1829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
1830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
1831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
1832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
1833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
1834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
1835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
ARM GAS  /tmp/ccTvghLi.s 			page 37


1836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
1837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
1838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
1839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
1840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
1841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
1842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
1843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
1844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
1845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
1846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
1847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
1848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
1849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
1850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
1851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
1852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
1853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
1854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
1855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
1856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
1857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
1858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
1859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
1860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
1861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
1862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
1863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
1864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
1865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
1866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
1867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
1868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
1869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
1870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
1871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
1872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
1873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
1874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
1875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
1876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
1877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
1878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
1879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
1880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
1881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
1882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)(1)
1883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)(1)
1884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ         (1)
1885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (0)(4)
1886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_INJ       (0)(4)
1887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ      (4)
1888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)(4)
1889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(4)
1890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (4)
1891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_REG          (0)(2)(5)
1892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_INJ          (0)(2)(5)
ARM GAS  /tmp/ccTvghLi.s 			page 38


1893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_REG_INJ         (2)(5)
1894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_REG          (0)(2)(5)
1895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_INJ          (0)(2)(5)
1896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_REG_INJ         (2)(5)
1897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG     (0)(2)(6)
1898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_INJ     (0)(2)(6)
1899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG_INJ    (2)(6)
1900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG     (0)(2)(6)
1901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_INJ     (0)(2)(6)
1902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG_INJ    (2)(6)
1903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_REG     (0)(3)(6)
1904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_INJ     (0)(3)(6)
1905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_REG_INJ    (3)(6)
1906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_REG     (0)(3)(6)
1907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_INJ     (0)(3)(6)
1908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_REG_INJ    (3)(6)
1909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
1910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (0) On STM32L4, parameter available only on analog watchdog number: AWD1.\n
1911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.
1915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.
1917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
1919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__GROUP__) == LL_ADC_GROUP_REGULAR)                                                           
1920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)                  
1921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                                               
1922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ((__GROUP__) == LL_ADC_GROUP_INJECTED)                                                          
1923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)                 
1924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                                               
1925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL) 
1926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
1927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to set the value of ADC analog watchdog threshold high
1930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         different of 12 bits.
1932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_ConfigAnalogWDThresholds()
1933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or @ref LL_ADC_SetAnalogWDThresholds().
1934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to set the value of
1935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDThresholds
1937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *            (< ADCx param >,
1938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(LL_ADC_RESOLUTION_8B, <threshold_value_8
1939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *            );
1940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD__ Value between Min_Data=0x000 and Max_Data=0xFFF
1946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD__) \
1949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((__AWD_THRESHOLD__) << ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
ARM GAS  /tmp/ccTvghLi.s 			page 39


1950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get the value of ADC analog watchdog threshold high
1953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         different of 12 bits.
1955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to get the value of
1957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           < threshold_value_6_bits > = __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION
1959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *            (LL_ADC_RESOLUTION_8B,
1960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_GetAnalogWDThresholds(<ADCx param>, LL_ADC_AWD_THRESHOLD_HIGH)
1961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *            );
1962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_12_BITS__ Value between Min_Data=0x000 and Max_Data=0xFFF
1968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD_12_BITS__) \
1971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((__AWD_THRESHOLD_12_BITS__) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
1972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get the ADC analog watchdog threshold high
1975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or low from raw value containing both thresholds concatenated.
1976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example, to get analog watchdog threshold high from the register raw value:
1978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(LL_ADC_AWD_THRESHOLD_HIGH, <raw_value_with_both
1979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_TYPE__ This parameter can be one of the following values:
1980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
1981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
1982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __AWD_THRESHOLDS__ Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
1983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(__AWD_THRESHOLD_TYPE__, __AWD_THRESHOLDS__)       \
1986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__AWD_THRESHOLDS__) >> (((__AWD_THRESHOLD_TYPE__) & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_
1987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to set the ADC calibration value with both single ended
1990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and differential modes calibration factors concatenated.
1991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetCalibrationFactor().
1992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example, to set calibration factors single ended to 0x55
1993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and differential ended to 0x2A:
1994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_ADC_SetCalibrationFactor(
1995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC1,
1996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(0x55, 0x2A))
1997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CALIB_FACTOR_SINGLE_ENDED__ Value between Min_Data=0x00 and Max_Data=0x7F
1998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CALIB_FACTOR_DIFFERENTIAL__ Value between Min_Data=0x00 and Max_Data=0x7F
1999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
2000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(__CALIB_FACTOR_SINGLE_ENDED__, __CALIB_FACTOR_DIFFERENTIA
2002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__CALIB_FACTOR_DIFFERENTIAL__) << ADC_CALFACT_CALFACT_D_Pos) | (__CALIB_FACTOR_SINGLE_ENDED__)
2003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get the ADC multimode conversion data of ADC master
ARM GAS  /tmp/ccTvghLi.s 			page 40


2007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or ADC slave from raw value with both ADC conversion data concatenated.
2008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This macro is intended to be used when multimode transfer by DMA
2009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled: refer to function @ref LL_ADC_SetMultiDMATransfer().
2010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         In this case the transferred data need to processed with this macro
2011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to separate the conversion data of ADC master and ADC slave.
2012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_MULTI_MASTER_SLAVE__ This parameter can be one of the following values:
2013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
2014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
2015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_MULTI_CONV_DATA__ Value between Min_Data=0x000 and Max_Data=0xFFF
2016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE(__ADC_MULTI_MASTER_SLAVE__, __ADC_MULTI_CONV_DATA__) 
2019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__ADC_MULTI_CONV_DATA__) >> ((ADC_CDR_RDATA_SLV_Pos) & ~(__ADC_MULTI_MASTER_SLAVE__))) & ADC_C
2020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
2021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to select, from a ADC instance, to which ADC instance
2025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         it has a dependence in multimode (ADC master of the corresponding
2026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC common instance).
2027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of device with multimode available and a mix of
2028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instances compliant and not compliant with multimode feature,
2029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instances not compliant with multimode feature are
2030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         considered as master instances (do not depend to
2031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         any other ADC instance).
2032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
2033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval __ADCx__ ADC instance master of the corresponding ADC common instance
2034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC2)
2036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_MULTI_INSTANCE_MASTER(__ADCx__) \
2037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((((__ADCx__) == ADC2))?                                                   \
2038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (ADC1)                                                                    \
2039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                         \
2040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (__ADCx__)                                                                \
2041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
2042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #else
2043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_MULTI_INSTANCE_MASTER(__ADCx__) \
2044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (__ADCx__)
2045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC2 */
2046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
2047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to select the ADC common instance
2050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to which is belonging the selected ADC instance.
2051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   ADC common register instance can be used for:
2052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Set parameters common to several ADC instances
2053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Multimode (for devices with several ADC instances)
2054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
2056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval ADC common register instance
2057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC1) && defined(ADC2) && defined(ADC3)
2059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (ADC123_COMMON)
2061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined(ADC1) && defined(ADC2)
2062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (ADC12_COMMON)
ARM GAS  /tmp/ccTvghLi.s 			page 41


2064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #else
2065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (ADC1_COMMON)
2067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* defined(ADC1) && defined(ADC2) && defined(ADC3) */
2068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to check if all ADC instances sharing the same
2071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC common instance are disabled.
2072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This check is required by functions with setting conditioned to
2073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
2074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On devices with only 1 ADC common instance, parameter of this macro
2077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is useless and can be ignored (parameter kept for compatibility
2078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         with devices featuring several ADC common instances).
2079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADCXY_COMMON__ ADC common instance
2080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value "0" if all ADC instances sharing the same ADC common instance
2082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are disabled.
2083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Value "1" if at least one ADC instance sharing the same ADC common instance
2084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled.
2085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC1) && defined(ADC2) && defined(ADC3)
2087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1) |                                                    \
2089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    LL_ADC_IsEnabled(ADC2) |                                                    \
2090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    LL_ADC_IsEnabled(ADC3)  )
2091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined(ADC1) && defined(ADC2)
2092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1) |                                                    \
2094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    LL_ADC_IsEnabled(ADC2)  )
2095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #else
2096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1))
2098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* defined(ADC1) && defined(ADC2) && defined(ADC3) */
2099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
2102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
2103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
2104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
2105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (refer to reference manual).
2106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval ADC conversion data full-scale digital value (unit: digital value of ADC conversion dat
2112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
2114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (0xFFFUL >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))
2115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to convert the ADC conversion data from
2118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a resolution to another resolution.
2119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __DATA__ ADC conversion data to be converted
2120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_CURRENT__ Resolution of the data to be converted
ARM GAS  /tmp/ccTvghLi.s 			page 42


2121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
2127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval ADC conversion data to the requested resolution
2133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__,\
2135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                          __ADC_RESOLUTION_CURRENT__,\
2136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                          __ADC_RESOLUTION_TARGET__)          \
2137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** (((__DATA__)                                                                 \
2138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))   \
2139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****  >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL))      \
2140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** )
2141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
2144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value).
2145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
2149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (resolution 12 bits)
2150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                       (unit: digital value).
2151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
2157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
2159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                       __ADC_DATA__,\
2160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                       __ADC_RESOLUTION__)                    \
2161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** ((__ADC_DATA__) * (__VREFANALOG_VOLTAGE__)                                   \
2162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****  / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                                \
2163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** )
2164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Legacy define */
2166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_VOLTAGE()  __LL_ADC_CALC_DATA_TO_VOLTAGE()
2167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to calculate analog reference voltage (Vref+)
2170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (unit: mVolt) from ADC conversion data of internal voltage
2171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         reference VrefInt.
2172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Computation is using VrefInt calibration value
2173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         stored in system memory for each device during production.
2174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This voltage depends on user board environment: voltage level
2175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         connected to pin Vref+.
2176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         On devices with small package, the pin Vref+ is not present
2177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and internally bonded to pin Vdda.
ARM GAS  /tmp/ccTvghLi.s 			page 43


2178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of internal voltage reference
2179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         VrefInt corresponds to a resolution of 12 bits,
2180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal voltage reference VrefInt.
2182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
2184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __VREFINT_ADC_DATA__ ADC conversion data (resolution 12 bits)
2185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of internal voltage reference VrefInt (unit: digital value).
2186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Analog reference voltage (unit: mV)
2192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_VREFANALOG_VOLTAGE(__VREFINT_ADC_DATA__,\
2194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                          __ADC_RESOLUTION__)                 \
2195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** (((uint32_t)(*VREFINT_CAL_ADDR) * VREFINT_CAL_VREF)                          \
2196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****  / __LL_ADC_CONVERT_DATA_RESOLUTION((__VREFINT_ADC_DATA__),                  \
2197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                     (__ADC_RESOLUTION__),                    \
2198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                     LL_ADC_RESOLUTION_12B)                   \
2199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** )
2200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
2204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Computation is using temperature sensor calibration values
2205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         stored in system memory for each device during production.
2206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Calculation formula:
2207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Temperature = ((TS_ADC_DATA - TS_CAL1)
2208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                           * (TS_CAL2_TEMP - TS_CAL1_TEMP))
2209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                         / (TS_CAL2 - TS_CAL1) + TS_CAL1_TEMP
2210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with TS_ADC_DATA = temperature sensor raw data measured by ADC
2211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                Avg_Slope = (TS_CAL2 - TS_CAL1)
2212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                            / (TS_CAL2_TEMP - TS_CAL1_TEMP)
2213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                TS_CAL1   = equivalent TS_ADC_DATA at temperature
2214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                            TEMP_DEGC_CAL1 (calibrated in factory)
2215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                TS_CAL2   = equivalent TS_ADC_DATA at temperature
2216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                            TEMP_DEGC_CAL2 (calibrated in factory)
2217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve that calibration
2218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  parameters are correct (address and data).
2219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  To calculate temperature using temperature sensor
2220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  datasheet typical values (generic values less, therefore
2221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  less accurate than calibrated values),
2222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  use helper macro @ref __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS().
2223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of temperature sensor
2229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         corresponds to a resolution of 12 bits,
2230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         temperature sensor.
2232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
2234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__  Analog reference voltage (unit: mV)
ARM GAS  /tmp/ccTvghLi.s 			page 44


2235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__ ADC conversion data of internal
2236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                 temperature sensor (unit: digital value).
2237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__      ADC resolution at which internal temperature
2238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                 sensor voltage has been measured.
2239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE(__VREFANALOG_VOLTAGE__,\
2247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                   __TEMPSENSOR_ADC_DATA__,\
2248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                   __ADC_RESOLUTION__)                            \
2249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** (((( ((int32_t)((__LL_ADC_CONVERT_DATA_RESOLUTION((__TEMPSENSOR_ADC_DATA__),     \
2250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                   (__ADC_RESOLUTION__),          \
2251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                   LL_ADC_RESOLUTION_12B)         \
2252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                  * (__VREFANALOG_VOLTAGE__))                                     \
2253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                 / TEMPSENSOR_CAL_VREFANALOG)                                     \
2254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       - (int32_t) *TEMPSENSOR_CAL1_ADDR)                                         \
2255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ) * (int32_t)(TEMPSENSOR_CAL2_TEMP - TEMPSENSOR_CAL1_TEMP)                    \
2256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ) / (int32_t)((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) \
2257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****  ) + TEMPSENSOR_CAL1_TEMP                                                        \
2258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** )
2259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
2263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Computation is using temperature sensor typical values
2264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (refer to device datasheet).
2265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Calculation formula:
2266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Temperature = (TS_TYP_CALx_VOLT(uV) - TS_ADC_DATA * Conversion_uV)
2267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                         / Avg_Slope + CALx_TEMP
2268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with TS_ADC_DATA      = temperature sensor raw data measured by ADC
2269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                   (unit: digital value)
2270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                Avg_Slope        = temperature sensor slope
2271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                   (unit: uV/Degree Celsius)
2272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                TS_TYP_CALx_VOLT = temperature sensor digital value at
2273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                   temperature CALx_TEMP (unit: mV)
2274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve the temperature sensor
2275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  of the current device has characteristics in line with
2276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  datasheet typical values.
2277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  If temperature sensor calibration values are available on
2278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  on this device (presence of macro __LL_ADC_CALC_TEMPERATURE()),
2279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  temperature calculation will be more accurate using
2280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  helper macro @ref __LL_ADC_CALC_TEMPERATURE().
2281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   ADC measurement data must correspond to a resolution of 12 bits
2287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (full scale digital value 4095). If not the case, the data must be
2288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         preliminarily rescaled to an equivalent resolution of 12 bits.
2289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_AVGSLOPE__   Device datasheet data: Temperature sensor slope typical v
2290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                       On STM32L4, refer to device datasheet parameter "Avg_Slop
2291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_CALX_V__     Device datasheet data: Temperature sensor voltage typical
ARM GAS  /tmp/ccTvghLi.s 			page 45


2292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                       On STM32L4, refer to device datasheet parameter "V30" (co
2293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_CALX_TEMP__      Device datasheet data: Temperature at which temperature s
2294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__        Analog voltage reference (Vref+) voltage (unit: mV)
2295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__       ADC conversion data of internal temperature sensor (unit:
2296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__            ADC resolution at which internal temperature sensor volta
2297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(__TEMPSENSOR_TYP_AVGSLOPE__,\
2305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              __TEMPSENSOR_TYP_CALX_V__,\
2306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              __TEMPSENSOR_CALX_TEMP__,\
2307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              __VREFANALOG_VOLTAGE__,\
2308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              __TEMPSENSOR_ADC_DATA__,\
2309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              __ADC_RESOLUTION__)            \
2310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** (((((int32_t)((((__TEMPSENSOR_ADC_DATA__) * (__VREFANALOG_VOLTAGE__))       \
2311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))                \
2312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****               * 1000UL)                                                     \
2313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     -                                                                       \
2314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     (int32_t)(((__TEMPSENSOR_TYP_CALX_V__))                                 \
2315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****               * 1000UL)                                                     \
2316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                        \
2317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ) / (int32_t)(__TEMPSENSOR_TYP_AVGSLOPE__)                                \
2318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****  ) + (int32_t)(__TEMPSENSOR_CALX_TEMP__)                                    \
2319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** )
2320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
2323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
2327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Exported functions --------------------------------------------------------*/
2331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Functions ADC Exported Functions
2332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
2333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_DMA_Management ADC DMA management
2336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
2337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Note: LL ADC functions to set DMA transfer are located into sections of    */
2339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       configuration of ADC instance, groups and multimode (if available):  */
2340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       @ref LL_ADC_REG_SetDMATransfer(), ...                                */
2341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Function to help to configure DMA transfer from ADC: retrieve the
2344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC register address from ADC instance and a list of ADC registers
2345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         intended to be used (most commonly) with DMA transfer.
2346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   These ADC registers are data registers:
2347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         when ADC conversion data is available in ADC data registers,
2348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC generates a DMA transfer request.
ARM GAS  /tmp/ccTvghLi.s 			page 46


2349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
2350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         function "LL_DMA_ConfigAddresses()".
2351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example:
2352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_DMA_ConfigAddresses(DMA1,
2353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                  LL_DMA_CHANNEL_1,
2354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                  LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
2355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                  (uint32_t)&< array or variable >,
2356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                  LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
2357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with several ADC: in multimode, some devices
2358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use a different data register outside of ADC instance scope
2359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (common data register). This macro manages this register difference,
2360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         only ADC instance has to be set as parameter.
2361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_DMA_GetRegAddr\n
2362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CDR      RDATA_MST      LL_ADC_DMA_GetRegAddr\n
2363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CDR      RDATA_SLV      LL_ADC_DMA_GetRegAddr
2364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Register This parameter can be one of the following values:
2366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA
2367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA_MULTI (1)
2368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
2369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) Available on devices with several ADC instances.
2370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval ADC register address
2371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
2374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t data_reg_addr;
2376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   if (Register == LL_ADC_DMA_REG_REGULAR_DATA)
2378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   {
2379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     /* Retrieve address of register DR */
2380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     data_reg_addr = (uint32_t) &(ADCx->DR);
2381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   }
2382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   else /* (Register == LL_ADC_DMA_REG_REGULAR_DATA_MULTI) */
2383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   {
2384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     /* Retrieve address of register CDR */
2385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     data_reg_addr = (uint32_t) &((__LL_ADC_COMMON_INSTANCE(ADCx))->CDR);
2386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   }
2387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return data_reg_addr;
2389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #else
2391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
2392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
2394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (void)(Register);
2395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Retrieve address of register DR */
2397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t) &(ADCx->DR);
2398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
2400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
2403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Common Configuration of ADC hierarchical scope: common to
ARM GAS  /tmp/ccTvghLi.s 			page 47


2406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
2407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: Clock source and prescaler.
2411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, if ADC group injected is used, some
2412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         clock ratio constraints between ADC clock and AHB clock
2413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         must be respected.
2414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to reference manual.
2415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
2417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_SetCommonClock\n
2422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_SetCommonClock
2423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  CommonClock This parameter can be one of the following values:
2426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1
2427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
2430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
2431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
2432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
2433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
2434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
2435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
2436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
2437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
2438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
2439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
2440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
2441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
2444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC, CommonClock);
2446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: Clock source and prescaler.
2450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_GetCommonClock\n
2451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_GetCommonClock
2452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1
2456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
2459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
2460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
2461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
2462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
ARM GAS  /tmp/ccTvghLi.s 			page 48


2463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
2464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
2465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
2466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
2467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
2468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
2469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
2470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON)
2472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC));
2474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Configure all paths (overwrite current configuration).
2480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
2481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         The values not selected are removed from configuration.
2484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         temperature sensor stabilization time.
2488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
2489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to literals @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US, 
2491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US.
2492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         For ADC conversion of internal channels,
2494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a sampling time minimum value is required.
2495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
2496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalCh\n
2497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalCh\n
2498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalCh
2499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Path
2509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN, PathInternal);
2511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Add paths to the current configuration.
2517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
2518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
ARM GAS  /tmp/ccTvghLi.s 			page 49


2520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         temperature sensor stabilization time.
2524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
2525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to literals @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US, 
2527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US.
2528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         For ADC conversion of internal channels,
2530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a sampling time minimum value is required.
2531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
2532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChAdd\n
2533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChAdd\n
2534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalChAdd
2535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChAdd(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
2545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCxy_COMMON->CCR, PathInternal);
2547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Remove paths to the current configuration.
2553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
2554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChRem\n
2557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChRem\n
2558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalChRem
2559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChRem(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
2569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCxy_COMMON->CCR, PathInternal);
2571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: measurement path to internal
2575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
2576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
ARM GAS  /tmp/ccTvghLi.s 			page 50


2577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_GetCommonPathInternalCh\n
2580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_GetCommonPathInternalCh\n
2581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_GetCommonPathInternalCh
2582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
2585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON)
2591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN));
2593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
2597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Instance Configuration of ADC hierarchical scope: ADC ins
2600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
2601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC calibration factor in the mode single-ended
2605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function is intended to set calibration parameters
2607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without having to perform a new calibration using
2608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
2609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with differential mode available:
2610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Calibration of offset is specific to each of
2611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         single-ended and differential modes
2612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (calibration factor must be specified for each of these
2613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
2614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         requires their calibration).
2615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of setting calibration factors of both modes single ended
2616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and differential (parameter LL_ADC_BOTH_SINGLE_DIFF_ENDED):
2617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         both calibration factors must be concatenated.
2618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         To perform this processing, use helper macro
2619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_CALIB_FACTOR_SINGLE_DIFF().
2620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
2622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
2623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on group regular.
2624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_SetCalibrationFactor\n
2625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_SetCalibrationFactor
2626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
2628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
2629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
2630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_BOTH_SINGLE_DIFF_ENDED
2631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x7F
2632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccTvghLi.s 			page 51


2634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t SingleDiff, uint32_t C
2635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT,
2637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
2638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              CalibrationFactor << (((SingleDiff & ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK) >> ADC_SINGLED
2639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC calibration factor in the mode single-ended
2643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
2645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
2646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with differential mode available:
2647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Calibration of offset is specific to each of
2648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         single-ended and differential modes
2649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_GetCalibrationFactor\n
2650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_GetCalibrationFactor
2651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
2653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
2654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
2655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7F
2656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t SingleDiff)
2658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Retrieve bits with position in register depending on parameter           */
2660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* "SingleDiff".                                                            */
2661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameter used with mask "ADC_SINGLEDIFF_CALIB_FACTOR_MASK" because      */
2662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
2663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT,
2664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              (SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK)) >> ((SingleDiff & ADC
2665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                                   ADC_SINGLEDIFF_CA
2666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC resolution.
2670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
2674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
2676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_SetResolution
2677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Resolution This parameter can be one of the following values:
2679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetResolution(ADC_TypeDef *ADCx, uint32_t Resolution)
2686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution);
2688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccTvghLi.s 			page 52


2691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC resolution.
2692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_GetResolution
2695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetResolution(ADC_TypeDef *ADCx)
2703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES));
2705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC conversion data alignment.
2709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
2710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
2713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
2715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     ALIGN          LL_ADC_SetDataAlignment
2716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  DataAlignment This parameter can be one of the following values:
2718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetDataAlignment(ADC_TypeDef *ADCx, uint32_t DataAlignment)
2723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_ALIGN, DataAlignment);
2725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC conversion data alignment.
2729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
2730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     ALIGN          LL_ADC_GetDataAlignment
2732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetDataAlignment(ADC_TypeDef *ADCx)
2738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_ALIGN));
2740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC low power mode.
2744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC low power modes:
2745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           in order to reduce power consumption.
ARM GAS  /tmp/ccTvghLi.s 			page 53


2748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
2751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           has been retrieved by user software.
2752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           other conversion.
2754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           applications.
2758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           How to use this low power mode:
2759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
2760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
2761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
2762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
2763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
2764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
2765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC conversion start.
2770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
2772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of delay during which ADC was idle.
2779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC channel.
2782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
2784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
2786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_SetLowPowerMode
2787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  LowPowerMode This parameter can be one of the following values:
2789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetLowPowerMode(ADC_TypeDef *ADCx, uint32_t LowPowerMode)
2794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_AUTDLY, LowPowerMode);
2796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC low power mode:
2800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC low power modes:
2801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           in order to reduce power consumption.
2804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
ARM GAS  /tmp/ccTvghLi.s 			page 54


2805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
2807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           has been retrieved by user software.
2808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           other conversion.
2810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           applications.
2814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           How to use this low power mode:
2815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
2816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
2817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
2818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
2819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
2820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
2821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC conversion start.
2826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
2828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of delay during which ADC was idle.
2835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC channel.
2838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_GetLowPowerMode
2839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetLowPowerMode(ADC_TypeDef *ADCx)
2845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_AUTDLY));
2847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC selected offset number 1, 2, 3 or 4.
2851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function set the 2 items of offset configuration:
2852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC channel to which the offset programmed will be applied
2853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (independently of channel mapped on ADC group regular
2854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           or group injected)
2855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Offset level (offset to be subtracted from the raw
2856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           converted data).
2857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
2858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
2859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are set to 0.
2860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function enables the offset, by default. It can be forced
2861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to disable state using function LL_ADC_SetOffsetState().
ARM GAS  /tmp/ccTvghLi.s 			page 55


2862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If a channel is mapped on several offsets numbers, only the offset
2863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         with the lowest value is considered for the subtraction.
2864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
2866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
2868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, some fast channels are available: fast analog inputs
2869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
2870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_SetOffset\n
2871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR1     OFFSET1        LL_ADC_SetOffset\n
2872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR1     OFFSET1_EN     LL_ADC_SetOffset\n
2873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_SetOffset\n
2874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_SetOffset\n
2875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffset\n
2876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_SetOffset\n
2877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_SetOffset\n
2878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffset\n
2879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_SetOffset\n
2880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_SetOffset\n
2881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffset
2882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
2884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
2885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
2886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
2887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
2888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
2889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
2891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
2892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
2893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
2894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
2895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
2910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
2911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
2912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
2913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
2914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
2915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
2916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
2917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
2918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
ARM GAS  /tmp/ccTvghLi.s 			page 56


2919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
2920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
2921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
2922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
2923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
2924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
2925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
2926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  OffsetLevel Value between Min_Data=0x000 and Max_Data=0xFFF
2927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffset(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t Channel, uint32
2930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
2932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
2934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
2935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | (Channel & ADC_CHANNEL_ID_NUMBER_MASK) | OffsetLevel);
2936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
2940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Channel to which the offset programmed will be applied
2941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (independently of channel mapped on ADC group regular
2942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or group injected)
2943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
2944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
2945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
2946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
2947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
2948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
2950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           as parameter for another function.
2951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
2952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           process the returned value with the helper macro
2953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, some fast channels are available: fast analog inputs
2955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
2956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_GetOffsetChannel\n
2957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_GetOffsetChannel\n
2958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_GetOffsetChannel\n
2959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_GetOffsetChannel
2960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
2962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
2963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
2964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
2965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
2966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
2969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
2970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
2971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
2972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
2973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
ARM GAS  /tmp/ccTvghLi.s 			page 57


2976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
2988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
2989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
2990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
2991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
2992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
2993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
2994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
2995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
2996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
2997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
2998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
2999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
3000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
3001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
3002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
3003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
3004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
3005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
3006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetChannel(ADC_TypeDef *ADCx, uint32_t Offsety)
3009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_CH);
3013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Offset level (offset to be subtracted from the raw
3018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         converted data).
3019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
3020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
3021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are set to 0.
3022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1        LL_ADC_GetOffsetLevel\n
3023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_GetOffsetLevel\n
3024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_GetOffsetLevel\n
3025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_GetOffsetLevel
3026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
ARM GAS  /tmp/ccTvghLi.s 			page 58


3033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetLevel(ADC_TypeDef *ADCx, uint32_t Offsety)
3035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1);
3039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set for the ADC selected offset number 1, 2, 3 or 4:
3043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         force offset state disable or enable
3044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without modifying offset channel or offset value.
3045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function should be needed only in case of offset to be
3046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         enabled-disabled dynamically, and should not be needed in other cases:
3047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         function LL_ADC_SetOffset() automatically enables the offset.
3048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
3052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_SetOffsetState\n
3053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffsetState\n
3054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffsetState\n
3055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffsetState
3056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  OffsetState This parameter can be one of the following values:
3063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetStat
3068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
3072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
3073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              OffsetState);
3074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         offset state disabled or enabled.
3079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_GetOffsetState\n
3080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_GetOffsetState\n
3081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_GetOffsetState\n
3082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_GetOffsetState
3083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
ARM GAS  /tmp/ccTvghLi.s 			page 59


3090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety)
3094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_EN);
3098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_SMPR1_SMPPLUS)
3101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC sampling time common configuration impacting
3103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         settings of sampling time channel wise.
3104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
3108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SMPR1    SMPPLUS        LL_ADC_SetSamplingTimeCommonConfig
3109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SamplingTimeCommonConfig This parameter can be one of the following values:
3111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_DEFAULT
3112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5
3113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetSamplingTimeCommonConfig(ADC_TypeDef *ADCx, uint32_t SamplingTimeCom
3116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR1, ADC_SMPR1_SMPPLUS, SamplingTimeCommonConfig);
3118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC sampling time common configuration impacting
3122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         settings of sampling time channel wise.
3123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SMPR1    SMPPLUS        LL_ADC_GetSamplingTimeCommonConfig
3124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_DEFAULT
3127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5
3128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetSamplingTimeCommonConfig(ADC_TypeDef *ADCx)
3130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SMPR1, ADC_SMPR1_SMPPLUS));
3132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_SMPR1_SMPPLUS */
3134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
3137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Regular Configuration of ADC hierarchical scope: gr
3140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
3141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger source:
3145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         external interrupt line).
ARM GAS  /tmp/ccTvghLi.s 			page 60


3147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
3148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         also set trigger polarity to rising edge
3149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
3150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
3151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
3152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetTriggerEdge().
3153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
3159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_SetTriggerSource\n
3160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_SetTriggerSource
3161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
3163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
3164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
3165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1
3167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2
3168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3
3169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2
3171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
3172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH4
3173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_TRGO
3174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4
3175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
3176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO
3177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO2
3178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO
3179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
3180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
3183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN | ADC_CFGR_EXTSEL, TriggerSource);
3185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source:
3189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         external interrupt line).
3191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To determine whether group regular trigger source is
3192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or external, without detail
3193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
3194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (equivalent to
3195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         "if(LL_ADC_REG_GetTriggerSource(ADC1) == LL_ADC_REG_TRIG_SOFTWARE)")
3196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_IsTriggerSourceSWStart.
3197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_GetTriggerSource\n
3200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_GetTriggerSource
3201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
ARM GAS  /tmp/ccTvghLi.s 			page 61


3204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
3205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1
3207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2
3208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3
3209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2
3211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
3212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH4
3213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_TRGO
3214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4
3215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
3216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO
3217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO2
3218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO
3219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
3220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerSource(ADC_TypeDef *ADCx)
3222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t TriggerSource = READ_BIT(ADCx->CFGR, ADC_CFGR_EXTSEL | ADC_CFGR_EXTEN);
3224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
3226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* corresponding to ADC_CFGR_EXTEN {0; 1; 2; 3}.                            */
3227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t ShiftExten = ((TriggerSource & ADC_CFGR_EXTEN) >> (ADC_REG_TRIG_EXTEN_BITOFFSET_POS - 2U
3228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_CFGR_EXTEN and ADC_CFGR_EXTSEL         */
3230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
3231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((TriggerSource
3232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****            & (ADC_REG_TRIG_SOURCE_MASK >> ShiftExten) & ADC_CFGR_EXTSEL)
3233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****           | ((ADC_REG_TRIG_EDGE_MASK >> ShiftExten) & ADC_CFGR_EXTEN)
3234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****          );
3235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source internal (SW start)
3239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or external.
3240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of group regular trigger source set to external trigger,
3241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
3242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_GetTriggerSource().
3243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_IsTriggerSourceSWStart
3244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
3246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
3247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
3249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN)) ? 1
3251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger polarity.
3255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
3256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
3260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_SetTriggerEdge
ARM GAS  /tmp/ccTvghLi.s 			page 62


3261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
3263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
3264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
3265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
3266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
3269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN, ExternalTriggerEdge);
3271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger polarity.
3275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
3276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_GetTriggerEdge
3277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
3280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
3281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
3282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerEdge(ADC_TypeDef *ADCx)
3284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN));
3286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer length and scan direction.
3290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
3291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
3292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
3293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are configurable.
3295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This function performs configuration of:
3296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
3297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
3299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
3301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
3302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
3303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are defined by channel number.
3305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This function performs configuration of:
3306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
3307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
3308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
3309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
3312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             highest channel number).
3313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
3315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
3316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
3317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
ARM GAS  /tmp/ccTvghLi.s 			page 63


3318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
3321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_SetSequencerLength
3322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
3324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
3325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
3326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
3327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
3328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
3329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
3330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
3331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
3332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
3333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
3334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
3335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
3336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
3337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
3338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
3339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
3340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
3343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->SQR1, ADC_SQR1_L, SequencerNbRanks);
3345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer length and scan direction.
3349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
3350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
3351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
3352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are configurable.
3354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This function retrieves:
3355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
3356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
3358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
3360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
3361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
3362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are defined by channel number.
3364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This function retrieves:
3365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
3366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
3367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
3368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
3371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             highest channel number).
3372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
3374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
ARM GAS  /tmp/ccTvghLi.s 			page 64


3375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
3376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_GetSequencerLength
3377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
3380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
3381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
3382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
3383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
3384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
3385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
3386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
3387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
3388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
3389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
3390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
3391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
3392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
3393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
3394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
3395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerLength(ADC_TypeDef *ADCx)
3397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SQR1, ADC_SQR1_L));
3399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer discontinuous mode:
3403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
3404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number of ranks.
3405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
3406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
3407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC auto-injected mode
3408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and ADC group regular sequencer discontinuous mode.
3409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
3413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_SetSequencerDiscont\n
3414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_SetSequencerDiscont
3415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
3417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
3418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
3419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
3420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
3421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
3422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
3423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
3424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
3425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
3426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
3429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM, SeqDiscont);
3431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
ARM GAS  /tmp/ccTvghLi.s 			page 65


3432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer discontinuous mode:
3435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
3436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number of ranks.
3437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_GetSequencerDiscont\n
3438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_GetSequencerDiscont
3439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
3442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
3443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
3444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
3445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
3446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
3447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
3448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
3449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
3450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerDiscont(ADC_TypeDef *ADCx)
3452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM));
3454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on the selected
3458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         scan sequence rank.
3459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function performs configuration of:
3460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
3461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           whatever channel can be placed into whatever rank.
3462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
3463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
3464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         affectation to a channel are configurable.
3465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
3466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         enabled separately.
3471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
3476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_SetSequencerRanks\n
3477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_SetSequencerRanks\n
3478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_SetSequencerRanks\n
3479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_SetSequencerRanks\n
3480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_SetSequencerRanks\n
3481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_SetSequencerRanks\n
3482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_SetSequencerRanks\n
3483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_SetSequencerRanks\n
3484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_SetSequencerRanks\n
3485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_SetSequencerRanks\n
3486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_SetSequencerRanks\n
3487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_SetSequencerRanks\n
3488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_SetSequencerRanks\n
ARM GAS  /tmp/ccTvghLi.s 			page 66


3489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_SetSequencerRanks\n
3490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_SetSequencerRanks\n
3491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_SetSequencerRanks
3492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
3494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
3495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
3496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
3497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
3498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
3499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
3500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
3501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
3502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
3503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
3504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
3505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
3506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
3507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
3508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
3509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
3510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
3513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
3514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
3515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
3516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
3517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
3531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
3532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
3533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
3534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
3535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
3536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
3537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
3538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
3539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
3540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
3541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
3542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
3543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
3544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
3545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
ARM GAS  /tmp/ccTvghLi.s 			page 67


3546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
3547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
3548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
3551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
3553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* in register and register position depending on parameter "Rank".         */
3554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
3555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_MASK) >> A
3557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
3559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
3560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Ra
3561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on the selected
3565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         scan sequence rank.
3566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
3567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
3568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         affectation to a channel are configurable.
3569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
3570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
3573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
3574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
3575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
3576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
3577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
3579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           as parameter for another function.
3580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
3581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           process the returned value with the helper macro
3582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_GetSequencerRanks\n
3584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_GetSequencerRanks\n
3585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_GetSequencerRanks\n
3586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_GetSequencerRanks\n
3587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_GetSequencerRanks\n
3588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_GetSequencerRanks\n
3589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_GetSequencerRanks\n
3590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_GetSequencerRanks\n
3591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_GetSequencerRanks\n
3592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_GetSequencerRanks\n
3593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_GetSequencerRanks\n
3594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_GetSequencerRanks\n
3595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_GetSequencerRanks\n
3596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_GetSequencerRanks\n
3597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_GetSequencerRanks\n
3598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_GetSequencerRanks
3599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
3601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
3602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
ARM GAS  /tmp/ccTvghLi.s 			page 68


3603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
3604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
3605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
3606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
3607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
3608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
3609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
3610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
3611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
3612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
3613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
3614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
3615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
3616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
3617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
3620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
3621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
3622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
3623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
3624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
3638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
3639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
3640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
3641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
3642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
3643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
3644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
3645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
3646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
3647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
3648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
3649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
3650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
3651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
3652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
3653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
3654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
3655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
3656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
3657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
ARM GAS  /tmp/ccTvghLi.s 			page 69


3660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_MASK
3662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)((READ_BIT(*preg,
3664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                               ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MA
3665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                      >> (Rank & ADC_REG_RANK_ID_SQRX_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
3666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    );
3667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC continuous conversion mode on ADC group regular.
3671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
3672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - single mode: one conversion per trigger
3673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
3674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           conversions launched successively automatically.
3675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
3676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
3677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
3681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_SetContinuousMode
3682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Continuous This parameter can be one of the following values:
3684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
3685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
3686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetContinuousMode(ADC_TypeDef *ADCx, uint32_t Continuous)
3689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_CONT, Continuous);
3691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC continuous conversion mode on ADC group regular.
3695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
3696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - single mode: one conversion per trigger
3697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
3698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           conversions launched successively automatically.
3699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_GetContinuousMode
3700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
3703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
3704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetContinuousMode(ADC_TypeDef *ADCx)
3706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_CONT));
3708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer: no transfer or
3712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
3713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
3714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode:
3715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
3716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
ARM GAS  /tmp/ccTvghLi.s 			page 70


3717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions) is reached.
3718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
3719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
3720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
3721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions).
3722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
3723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
3724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode non-circular:
3725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
3726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
3727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *        (overrun flag and interruption if enabled).
3728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with several ADC instances: ADC multimode DMA
3729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         settings are available using function @ref LL_ADC_SetMultiDMATransfer().
3730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
3731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
3732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
3736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_SetDMATransfer\n
3737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_SetDMATransfer
3738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  DMATransfer This parameter can be one of the following values:
3740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
3741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
3742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
3743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDMATransfer(ADC_TypeDef *ADCx, uint32_t DMATransfer)
3746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DMAEN | ADC_CFGR_DMACFG, DMATransfer);
3748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer: no transfer or
3752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
3753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
3754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode:
3755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
3756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
3757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions) is reached.
3758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
3759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
3760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
3761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions).
3762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
3763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
3764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode non-circular:
3765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
3766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
3767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
3768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with several ADC instances: ADC multimode DMA
3769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         settings are available using function @ref LL_ADC_GetMultiDMATransfer().
3770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
3771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
3772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_GetDMATransfer\n
3773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_GetDMATransfer
ARM GAS  /tmp/ccTvghLi.s 			page 71


3774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
3777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
3778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
3779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDMATransfer(ADC_TypeDef *ADCx)
3781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DMAEN | ADC_CFGR_DMACFG));
3783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_CFGR_DFSDMCFG) &&defined(DFSDM1_Channel0)
3786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer to DFSDM.
3788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   DFSDM transfer cannot be used if DMA transfer is enabled.
3789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To configure DFSDM source address (peripheral address),
3790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use the same function as for DMA transfer:
3791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         function @ref LL_ADC_DMA_GetRegAddr().
3792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
3796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DFSDMCFG       LL_ADC_REG_GetDFSDMTransfer
3797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  DFSDMTransfer This parameter can be one of the following values:
3799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DFSDM_TRANSFER_NONE
3800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DFSDM_TRANSFER_ENABLE
3801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDFSDMTransfer(ADC_TypeDef *ADCx, uint32_t DFSDMTransfer)
3804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DFSDMCFG, DFSDMTransfer);
3806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer to DFSDM.
3810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DFSDMCFG       LL_ADC_REG_GetDFSDMTransfer
3811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DFSDM_TRANSFER_NONE
3814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DFSDM_TRANSFER_ENABLE
3815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDFSDMTransfer(ADC_TypeDef *ADCx)
3817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DFSDMCFG));
3819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_CFGR_DFSDMCFG */
3821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular behavior in case of overrun:
3824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         data preserved or overwritten.
3825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Compatibility with devices without feature overrun:
3826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         other devices without this feature have a behavior
3827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         equivalent to data overwritten.
3828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         The default setting of overrun is data preserved.
3829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Therefore, for compatibility with all devices, parameter
3830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         overrun should be set to data overwritten.
ARM GAS  /tmp/ccTvghLi.s 			page 72


3831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
3835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_SetOverrun
3836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Overrun This parameter can be one of the following values:
3838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
3839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
3840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetOverrun(ADC_TypeDef *ADCx, uint32_t Overrun)
3843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_OVRMOD, Overrun);
3845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular behavior in case of overrun:
3849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         data preserved or overwritten.
3850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_GetOverrun
3851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
3854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
3855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetOverrun(ADC_TypeDef *ADCx)
3857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_OVRMOD));
3859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
3863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Injected Configuration of ADC hierarchical scope: g
3866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
3867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger source:
3871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         external interrupt line).
3873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
3874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         also set trigger polarity to rising edge
3875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
3876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
3877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
3878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         function @ref LL_ADC_INJ_SetTriggerEdge().
3879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
3884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
3885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_SetTriggerSource\n
3886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_SetTriggerSource
3887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /tmp/ccTvghLi.s 			page 73


3888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
3889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
3890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
3891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
3892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
3893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
3894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
3895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
3896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
3897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
3898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
3899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
3900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
3901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
3902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
3903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
3904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
3905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
3906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
3909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN, TriggerSource);
3911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source:
3915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         external interrupt line).
3917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To determine whether group injected trigger source is
3918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or external, without detail
3919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
3920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (equivalent to
3921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         "if(LL_ADC_INJ_GetTriggerSource(ADC1) == LL_ADC_INJ_TRIG_SOFTWARE)")
3922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_IsTriggerSourceSWStart.
3923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_GetTriggerSource\n
3926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_GetTriggerSource
3927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
3930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
3931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
3932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
3933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
3934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
3935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
3936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
3937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
3938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
3939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
3940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
3941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
3942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
3943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
3944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
ARM GAS  /tmp/ccTvghLi.s 			page 74


3945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
3946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerSource(ADC_TypeDef *ADCx)
3948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t TriggerSource = READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN);
3950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
3952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* corresponding to ADC_JSQR_JEXTEN {0; 1; 2; 3}.                           */
3953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t ShiftJexten = ((TriggerSource & ADC_JSQR_JEXTEN) >> (ADC_INJ_TRIG_EXTEN_BITOFFSET_POS - 
3954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_JSQR_JEXTEN and ADC_JSQR_JEXTSEL       */
3956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
3957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((TriggerSource
3958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****            & (ADC_INJ_TRIG_SOURCE_MASK >> ShiftJexten) & ADC_JSQR_JEXTSEL)
3959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****           | ((ADC_INJ_TRIG_EDGE_MASK >> ShiftJexten) & ADC_JSQR_JEXTEN)
3960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****          );
3961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source internal (SW start)
3965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****             or external
3966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of group injected trigger source set to external trigger,
3967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
3968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_GetTriggerSource.
3969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_IsTriggerSourceSWStart
3970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
3972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
3973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
3975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN) == (LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN)) ?
3977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger polarity.
3981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
3982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
3985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
3986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_SetTriggerEdge
3987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
3989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
3990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
3991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
3992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
3995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTEN, ExternalTriggerEdge);
3997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger polarity.
4001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
ARM GAS  /tmp/ccTvghLi.s 			page 75


4002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_GetTriggerEdge
4003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
4007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerEdge(ADC_TypeDef *ADCx)
4010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN));
4012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer length and scan direction.
4016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function performs configuration of:
4017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
4019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_SetSequencerLength
4027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
4029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
4036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JL, SequencerNbRanks);
4038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer length and scan direction.
4042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function retrieves:
4043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
4045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_GetSequencerLength
4049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerLength(ADC_TypeDef *ADCx)
4057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JL));
ARM GAS  /tmp/ccTvghLi.s 			page 76


4059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer discontinuous mode:
4063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number of ranks.
4065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
4066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
4067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_SetSequencerDiscont
4068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
4070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
4075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JDISCEN, SeqDiscont);
4077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer discontinuous mode:
4081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number of ranks.
4083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_GetSequencerDiscont
4084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerDiscont(ADC_TypeDef *ADCx)
4090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JDISCEN));
4092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected sequence: channel on the selected
4096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence rank.
4097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         enabled separately.
4102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, some fast channels are available: fast analog inputs
4104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
4105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_SetSequencerRanks\n
4110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_SetSequencerRanks\n
4111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_SetSequencerRanks\n
4112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_SetSequencerRanks
4113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
ARM GAS  /tmp/ccTvghLi.s 			page 77


4116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
4160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
4162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* in register depending on parameter "Rank".                               */
4163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
4164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
4166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Rank & ADC_INJ
4167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Ra
4168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected sequence: channel on the selected
4172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence rank.
ARM GAS  /tmp/ccTvghLi.s 			page 78


4173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
4176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
4177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
4178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
4179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
4180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
4182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           as parameter for another function.
4183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
4184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           process the returned value with the helper macro
4185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_GetSequencerRanks\n
4187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_GetSequencerRanks\n
4188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_GetSequencerRanks\n
4189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_GetSequencerRanks
4190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
4193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
ARM GAS  /tmp/ccTvghLi.s 			page 79


4230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
4235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
4236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
4237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
4239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->JSQR,
4241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                               (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) <
4242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                      >> (Rank & ADC_INJ_RANK_ID_JSQR_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
4243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    );
4244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger:
4248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         independent or from ADC group regular.
4249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This mode can be used to extend number of data registers
4250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         updated after one ADC conversion trigger and with data
4251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         permanently kept (not erased by successive conversions of scan of
4252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC sequencer ranks), up to 5 data registers:
4253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         1 data register on ADC group regular, 4 data registers
4254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on ADC group injected.
4255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC group injected injected trigger source is set to an
4256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         external trigger, this feature must be must be set to
4257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         independent trigger.
4258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC group injected automatic trigger is compliant only with
4259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         group injected trigger source set to SW start, without any
4260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         further action on  ADC group injected conversion start or stop:
4261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         in this case, ADC group injected is controlled only
4262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from ADC group regular.
4263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
4264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
4265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
4269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_SetTrigAuto
4270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  TrigAuto This parameter can be one of the following values:
4272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
4273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
4274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTrigAuto(ADC_TypeDef *ADCx, uint32_t TrigAuto)
4277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JAUTO, TrigAuto);
4279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger:
4283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         independent or from ADC group regular.
4284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_GetTrigAuto
4285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
ARM GAS  /tmp/ccTvghLi.s 			page 80


4287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
4288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
4289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTrigAuto(ADC_TypeDef *ADCx)
4291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JAUTO));
4293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected contexts queue mode.
4297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
4298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - group injected trigger
4299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - sequencer length
4300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - sequencer ranks
4301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If contexts queue is disabled:
4302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - only 1 sequence can be configured
4303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           and is active perpetually.
4304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If contexts queue is enabled:
4305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - up to 2 contexts can be queued
4306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           and are checked in and out as a FIFO stack (first-in, first-out).
4307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - If a new context is set when queues is full, error is triggered
4308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           by interruption "Injected Queue Overflow".
4309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Two behaviors are possible when all contexts have been processed:
4310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the contexts queue can maintain the last context active perpetually
4311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           or can be empty and injected group triggers are disabled.
4312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Triggers can be only external (not internal SW start)
4313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Caution: The sequence must be fully configured in one time
4314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (one write of register JSQR makes a check-in of a new context
4315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           into the queue).
4316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Therefore functions to set separately injected trigger and
4317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           sequencer channels cannot be used, register JSQR must be set
4318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           using function @ref LL_ADC_INJ_ConfigQueueContext().
4319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This parameter can be modified only when no conversion is on going
4320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
4321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   A modification of the context mode (bit JQDIS) causes the contexts
4322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         queue to be flushed and the register JSQR is cleared.
4323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
4327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_SetQueueMode\n
4328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_SetQueueMode
4329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  QueueMode This parameter can be one of the following values:
4331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
4332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
4333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
4334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetQueueMode(ADC_TypeDef *ADCx, uint32_t QueueMode)
4337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS, QueueMode);
4339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected context queue mode.
4343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_GetQueueMode\n
ARM GAS  /tmp/ccTvghLi.s 			page 81


4344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_GetQueueMode
4345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
4348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
4349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
4350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetQueueMode(ADC_TypeDef *ADCx)
4352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS));
4354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set one context on ADC group injected that will be checked in
4358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         contexts queue.
4359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
4360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - group injected trigger
4361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - sequencer length
4362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - sequencer ranks
4363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This function is intended to be used when contexts queue is enabled,
4364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         because the sequence must be fully configured in one time
4365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (functions to set separately injected trigger and sequencer channels
4366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         cannot be used):
4367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to function @ref LL_ADC_INJ_SetQueueMode().
4368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In the contexts queue, only the active context can be read.
4369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         The parameters of this function can be read using functions:
4370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerSource()
4371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerEdge()
4372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetSequencerRanks()
4373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         enabled separately.
4376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, some fast channels are available: fast analog inputs
4378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
4379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_ConfigQueueContext\n
4384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_ConfigQueueContext\n
4385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JL             LL_ADC_INJ_ConfigQueueContext\n
4386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ1           LL_ADC_INJ_ConfigQueueContext\n
4387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_ConfigQueueContext\n
4388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_ConfigQueueContext\n
4389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_ConfigQueueContext
4390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
4392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
4393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
4394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
4395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
4397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
4398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
4399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
4400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
ARM GAS  /tmp/ccTvghLi.s 			page 82


4401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
4402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
4403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
4404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
4405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
4406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
4407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
4408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
4409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
4410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
4412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Note: This parameter is discarded in case of SW start:
4415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *               parameter "TriggerSource" set to "LL_ADC_INJ_TRIG_SOFTWARE".
4416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
4417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank1_Channel This parameter can be one of the following values:
4422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
ARM GAS  /tmp/ccTvghLi.s 			page 83


4458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank2_Channel This parameter can be one of the following values:
4460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank3_Channel This parameter can be one of the following values:
4498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
ARM GAS  /tmp/ccTvghLi.s 			page 84


4515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank4_Channel This parameter can be one of the following values:
4536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
ARM GAS  /tmp/ccTvghLi.s 			page 85


4572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_ConfigQueueContext(ADC_TypeDef *ADCx,
4576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t TriggerSource,
4577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t ExternalTriggerEdge,
4578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t SequencerNbRanks,
4579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t Rank1_Channel,
4580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t Rank2_Channel,
4581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t Rank3_Channel,
4582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t Rank4_Channel)
4583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "Rankx_Channel" with bits position    */
4585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* in register depending on literal "LL_ADC_INJ_RANK_x".                    */
4586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "Rankx_Channel" and "LL_ADC_INJ_RANK_x" are used with masks   */
4587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* because containing other bits reserved for other purpose.                */
4588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* If parameter "TriggerSource" is set to SW start, then parameter          */
4589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* "ExternalTriggerEdge" is discarded.                                      */
4590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t is_trigger_not_sw = (uint32_t)((TriggerSource != LL_ADC_INJ_TRIG_SOFTWARE) ? 1UL : 0UL);
4591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
4592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JEXTSEL |
4593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JEXTEN  |
4594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JSQ4    |
4595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JSQ3    |
4596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JSQ2    |
4597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JSQ1    |
4598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JL,
4599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (TriggerSource & ADC_JSQR_JEXTSEL)          |
4600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (ExternalTriggerEdge * (is_trigger_not_sw)) |
4601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (((Rank4_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (((Rank3_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (((Rank2_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (((Rank1_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              SequencerNbRanks
4606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****             );
4607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
4611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Channels Configuration of ADC hierarchical scope: channels
4614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
4615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set sampling time of the selected ADC channel
4619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Unit: ADC clock cycles.
4620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
4621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
4622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
4623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         converted:
4624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
4625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
4626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         setting).
4627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
4628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TS_temp, ...).
ARM GAS  /tmp/ccTvghLi.s 			page 86


4629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
4630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
4631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
4632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
4633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
4634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
4635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
4636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
4637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is required.
4638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
4639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
4643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_SetChannelSamplingTime\n
4644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_SetChannelSamplingTime\n
4645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_SetChannelSamplingTime\n
4646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_SetChannelSamplingTime\n
4647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_SetChannelSamplingTime\n
4648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_SetChannelSamplingTime\n
4649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_SetChannelSamplingTime\n
4650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_SetChannelSamplingTime\n
4651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_SetChannelSamplingTime\n
4652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_SetChannelSamplingTime\n
4653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_SetChannelSamplingTime\n
4654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_SetChannelSamplingTime\n
4655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_SetChannelSamplingTime\n
4656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_SetChannelSamplingTime\n
4657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_SetChannelSamplingTime\n
4658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_SetChannelSamplingTime\n
4659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_SetChannelSamplingTime\n
4660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_SetChannelSamplingTime\n
4661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_SetChannelSamplingTime
4662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
ARM GAS  /tmp/ccTvghLi.s 			page 87


4686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
4702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5   (1)
4703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_6CYCLES_5
4704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
4705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_24CYCLES_5
4706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_47CYCLES_5
4707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_92CYCLES_5
4708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_247CYCLES_5
4709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_640CYCLES_5
4710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On some devices, ADC sampling time 2.5 ADC clock cycles
4712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             can be replaced by 3.5 ADC clock cycles.
4713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Refer to function @ref LL_ADC_SetSamplingTimeCommonConfig().
4714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sa
4717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "SamplingTime" with bits position     */
4719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* in register and register position depending on parameter "Channel".      */
4720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
4721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_M
4723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
4725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
4726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              SamplingTime   << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
4727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get sampling time of the selected ADC channel
4731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Unit: ADC clock cycles.
4732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
4733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
4734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
4735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
4736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
4737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
4738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
4739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
4740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_GetChannelSamplingTime\n
4741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_GetChannelSamplingTime\n
4742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_GetChannelSamplingTime\n
ARM GAS  /tmp/ccTvghLi.s 			page 88


4743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_GetChannelSamplingTime\n
4744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_GetChannelSamplingTime\n
4745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_GetChannelSamplingTime\n
4746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_GetChannelSamplingTime\n
4747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_GetChannelSamplingTime\n
4748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_GetChannelSamplingTime\n
4749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_GetChannelSamplingTime\n
4750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_GetChannelSamplingTime\n
4751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_GetChannelSamplingTime\n
4752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_GetChannelSamplingTime\n
4753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_GetChannelSamplingTime\n
4754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_GetChannelSamplingTime\n
4755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_GetChannelSamplingTime\n
4756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_GetChannelSamplingTime\n
4757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_GetChannelSamplingTime\n
4758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_GetChannelSamplingTime
4759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5   (1)
ARM GAS  /tmp/ccTvghLi.s 			page 89


4800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_6CYCLES_5
4801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
4802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_24CYCLES_5
4803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_47CYCLES_5
4804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_92CYCLES_5
4805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_247CYCLES_5
4806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_640CYCLES_5
4807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On some devices, ADC sampling time 2.5 ADC clock cycles
4809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             can be replaced by 3.5 ADC clock cycles.
4810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Refer to function @ref LL_ADC_SetSamplingTimeCommonConfig().
4811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel)
4813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOF
4815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
4817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_
4818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                     >> ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BITOFFSET_P
4819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    );
4820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set mode single-ended or differential input of the selected
4824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC channel.
4825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Channel ending is on channel scope: independently of channel mapped
4826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on ADC group regular or injected.
4827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         In differential mode: Differential measurement is carried out
4828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         between the selected channel 'i' (positive input) and
4829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         channel 'i+1' (negative input). Only channel 'i' has to be
4830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         configured, channel 'i+1' is configured automatically.
4831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
4832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         available in differential mode.
4833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
4834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         not available in differential mode.
4835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
4836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
4837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, channels 16, 17, 18 of ADC1, ADC2, ADC3 (if available)
4838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are internally fixed to single-ended inputs configuration.
4839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For ADC channels configured in differential mode, both inputs
4840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         should be biased at (Vref+)/2 +/-200mV.
4841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (Vref+ is the analog voltage reference)
4842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
4845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
4846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
4847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_SetChannelSingleDiff
4848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
4851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
4852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
4853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
4854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
4855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
ARM GAS  /tmp/ccTvghLi.s 			page 90


4857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be a combination of the following values:
4866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
4867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
4868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sing
4871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Bits of channels in single or differential mode are set only for         */
4873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* differential mode (for single mode, mask of bits allowed to be set is    */
4874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* shifted out of range of bits of channels in single or differential mode. */
4875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->DIFSEL,
4876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
4877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (Channel & ADC_SINGLEDIFF_CHANNEL_MASK) & (ADC_DIFSEL_DIFSEL >> (SingleDiff & ADC_SING
4878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get mode single-ended or differential input of the selected
4882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC channel.
4883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
4884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
4885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Therefore, to ensure a channel is configured in single-ended mode,
4886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the configuration of channel itself and the channel 'i-1' must be
4887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         read back (to ensure that the selected channel channel has not been
4888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         configured in differential mode by the previous channel).
4889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
4890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         available in differential mode.
4891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
4892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         not available in differential mode.
4893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
4894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
4895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, channels 16, 17, 18 of ADC1, ADC2, ADC3 (if available)
4896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are internally fixed to single-ended inputs configuration.
4897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected. In this case, the value
4898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         returned is null if all channels are in single ended-mode.
4899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
4900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_GetChannelSingleDiff
4901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
4903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
4904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
4905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
4906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
4907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
4908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
ARM GAS  /tmp/ccTvghLi.s 			page 91


4914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: channel in single-ended mode, else: channel in differential mode
4919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel)
4921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DIFSEL, (Channel & ADC_SINGLEDIFF_CHANNEL_MASK)));
4923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
4927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_AnalogWatchdog Configuration of ADC transversal scope: an
4930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
4931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog monitored channels:
4935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a single channel, multiple channels or all channels,
4936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on ADC groups regular and-or injected.
4937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Once monitored channels are selected, analog watchdog
4938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled.
4939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of need to define a single channel to monitor
4940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         with analog watchdog from sequencer channel definition,
4941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use helper macro @ref __LL_ADC_ANALOGWD_CHANNEL_GROUP().
4942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
4943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         instance:
4944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
4945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
4946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
4947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
4948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC resolution configured).
4949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
4950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
4951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
4952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
4953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             be selected. For example:
4954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
4955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
4956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             groups regular and injected).
4957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
4958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
4959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
4960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
4961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
4962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             the 2 LSB are ignored.
4963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
4967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_SetAnalogWDMonitChannels\n
4968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_SetAnalogWDMonitChannels\n
4969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_SetAnalogWDMonitChannels\n
4970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_SetAnalogWDMonitChannels\n
ARM GAS  /tmp/ccTvghLi.s 			page 92


4971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_SetAnalogWDMonitChannels\n
4972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_SetAnalogWDMonitChannels
4973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
4975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
4976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
4977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
4978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDChannelGroup This parameter can be one of the following values:
4979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
4980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
4981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
4982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
4983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
4984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
4985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
4986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
4987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
4988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
4989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
4990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
4991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
4992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
4993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
4994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
4995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
4996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
4997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
4998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
4999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
5000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
5001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
5003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
5004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
5006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
5007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
5009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
5010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
5012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
5013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
5015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
5016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
5018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
5019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
5020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
5021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
5022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
5023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
5024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
5025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
5026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
5027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
ARM GAS  /tmp/ccTvghLi.s 			page 93


5028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
5029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
5030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
5031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
5032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
5033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
5034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
5035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
5036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
5037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
5038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
5039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
5040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)(1)
5041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)(1)
5042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ         (1)
5043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (0)(4)
5044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_INJ       (0)(4)
5045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ      (4)
5046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)(4)
5047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(4)
5048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (4)
5049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_REG          (0)(2)(5)
5050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_INJ          (0)(2)(5)
5051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_REG_INJ         (2)(5)
5052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_REG          (0)(2)(5)
5053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_INJ          (0)(2)(5)
5054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_REG_INJ         (2)(5)
5055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG     (0)(2)(6)
5056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_INJ     (0)(2)(6)
5057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG_INJ    (2)(6)
5058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG     (0)(2)(6)
5059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_INJ     (0)(2)(6)
5060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG_INJ    (2)(6)
5061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_REG     (0)(3)(6)
5062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_INJ     (0)(3)(6)
5063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_REG_INJ    (3)(6)
5064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_REG     (0)(3)(6)
5065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_INJ     (0)(3)(6)
5066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_REG_INJ    (3)(6)
5067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (0) On STM32L4, parameter available only on analog watchdog number: AWD1.\n
5069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
5070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
5071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
5072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.
5073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
5074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.
5075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
5078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDChannelGroup" with bits position  */
5080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* in register and register position depending on parameter "AWDy".         */
5081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "AWDChannelGroup" and "AWDy" are used with masks because      */
5082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR, ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> AD
5084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC_AWD_C
ARM GAS  /tmp/ccTvghLi.s 			page 94


5085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
5087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
5088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              AWDChannelGroup & AWDy);
5089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC analog watchdog monitored channel.
5093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
5094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
5095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
5096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
5097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
5098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
5100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           as parameter for another function.
5101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
5102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           process the returned value with the helper macro
5103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Applicable only when the analog watchdog is set to monitor
5105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           one channel.
5106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         instance:
5108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC resolution configured).
5113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             be selected. For example:
5118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             groups regular and injected).
5121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             the 2 LSB are ignored.
5127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
5131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_GetAnalogWDMonitChannels\n
5132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_GetAnalogWDMonitChannels\n
5133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_GetAnalogWDMonitChannels\n
5134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_GetAnalogWDMonitChannels\n
5135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_GetAnalogWDMonitChannels\n
5136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_GetAnalogWDMonitChannels
5137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)
5141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)
ARM GAS  /tmp/ccTvghLi.s 			page 95


5142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On this AWD number, monitored channel can be retrieved
5144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             if only 1 channel is programmed (or none or all channels).
5145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             This function cannot retrieve monitored channel if
5146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             multiple channels are programmed simultaneously
5147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             by bitfield.
5148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
5150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
5151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
5152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
5153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
5154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
5155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
5156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
5157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
5158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
5159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
5160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
5161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
5162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
5163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
5164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
5165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
5166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
5167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
5168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
5169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
5170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
5171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
5173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
5174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
5176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
5177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
5179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
5180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
5182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
5183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
5185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
5186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
5188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
5189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
5190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
5191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
5192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
5193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
5194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
5195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
5196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
5197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
5198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
ARM GAS  /tmp/ccTvghLi.s 			page 96


5199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
5200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
5201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
5202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
5203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
5204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
5205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
5206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
5207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
5208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
5209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
5210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (0) On STM32L4, parameter available only on analog watchdog number: AWD1.
5212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy)
5214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR, ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK)
5216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC
5217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t AnalogWDMonitChannels = (READ_BIT(*preg, AWDy) & ADC_AWD_CR_ALL_CHANNEL_MASK);
5219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* If "AnalogWDMonitChannels" == 0, then the selected AWD is disabled       */
5221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* (parameter value LL_ADC_AWD_DISABLE).                                    */
5222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Else, the selected AWD is enabled and is monitoring a group of channels  */
5223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* or a single channel.                                                     */
5224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   if (AnalogWDMonitChannels != 0UL)
5225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   {
5226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     if (AWDy == LL_ADC_AWD1)
5227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     {
5228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       if ((AnalogWDMonitChannels & ADC_CFGR_AWD1SGL) == 0UL)
5229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       {
5230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         AnalogWDMonitChannels = ((AnalogWDMonitChannels
5232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                   | (ADC_AWD_CR23_CHANNEL_MASK)
5233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                  )
5234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                  & (~(ADC_CFGR_AWD1CH))
5235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                 );
5236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       }
5237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       else
5238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       {
5239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         /* AWD monitoring a single channel */
5240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         AnalogWDMonitChannels = (AnalogWDMonitChannels
5241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                  | (ADC_AWD2CR_AWD2CH_0 << (AnalogWDMonitChannels >> ADC_CFGR_AWD1C
5242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                 );
5243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       }
5244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     }
5245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     else
5246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     {
5247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       if ((AnalogWDMonitChannels & ADC_AWD_CR23_CHANNEL_MASK) == ADC_AWD_CR23_CHANNEL_MASK)
5248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       {
5249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         AnalogWDMonitChannels = (ADC_AWD_CR23_CHANNEL_MASK
5251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                  | ((ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN))
5252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                 );
5253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       }
5254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       else
5255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       {
ARM GAS  /tmp/ccTvghLi.s 			page 97


5256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         /* AWD monitoring a single channel */
5257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         AnalogWDMonitChannels = (AnalogWDMonitChannels
5259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                  | (ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)
5260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                  | (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDMonitChannels) << ADC_CF
5261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                 );
5262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       }
5263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     }
5264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   }
5265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return AnalogWDMonitChannels;
5267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog thresholds value of both thresholds
5271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         high and low.
5272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If value of only one threshold high or low must be set,
5273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_SetAnalogWDThresholds().
5274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
5275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
5276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
5277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         instance:
5279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC resolution configured).
5284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             be selected. For example:
5289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             groups regular and injected).
5292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             the 2 LSB are ignored.
5298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
5299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
5300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
5301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
5302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
5306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_ConfigAnalogWDThresholds\n
5307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_ConfigAnalogWDThresholds\n
5308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_ConfigAnalogWDThresholds\n
5309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_ConfigAnalogWDThresholds\n
5310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_ConfigAnalogWDThresholds\n
5311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_ConfigAnalogWDThresholds
5312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /tmp/ccTvghLi.s 			page 98


5313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdHighValue Value between Min_Data=0x000 and Max_Data=0xFFF
5318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdLowValue Value between Min_Data=0x000 and Max_Data=0xFFF
5319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
5322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                      uint32_t AWDThresholdLowValue)
5323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdxxxValue" with bits      */
5325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* position in register and register position depending on parameter        */
5326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* "AWDy".                                                                  */
5327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdxxxValue" are used with masks because */
5328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1, ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC
5330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
5332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
5333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (AWDThresholdHighValue << ADC_TR1_HT1_BITOFFSET_POS) | AWDThresholdLowValue);
5334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog threshold value of threshold
5338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         high or low.
5339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If values of both thresholds high or low must be set,
5340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_ConfigAnalogWDThresholds().
5341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
5342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
5343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
5344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         instance:
5346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC resolution configured).
5351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             be selected. For example:
5356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             groups regular and injected).
5359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             the 2 LSB are ignored.
5365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
5366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
5367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
5368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
5369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
ARM GAS  /tmp/ccTvghLi.s 			page 99


5370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either ADC groups regular or injected.
5373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_SetAnalogWDThresholds\n
5374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_SetAnalogWDThresholds\n
5375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_SetAnalogWDThresholds\n
5376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_SetAnalogWDThresholds\n
5377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_SetAnalogWDThresholds\n
5378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_SetAnalogWDThresholds
5379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
5385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
5386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
5387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdValue Value between Min_Data=0x000 and Max_Data=0xFFF
5388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWDThr
5391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                   uint32_t AWDThresholdValue)
5392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
5394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* position in register and register position depending on parameters       */
5395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
5396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
5397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1,
5399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC_AWD_TRX_RE
5400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
5402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              AWDThresholdsHighLow,
5403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              AWDThresholdValue << ((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TR
5404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC analog watchdog threshold value of threshold high,
5408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         threshold low or raw data with ADC thresholds high and low
5409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         concatenated.
5410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If raw data with ADC thresholds high and low is retrieved,
5411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the data of each threshold high or low can be isolated
5412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         using helper macro:
5413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW().
5414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
5415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
5416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION().
5417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_GetAnalogWDThresholds\n
5418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_GetAnalogWDThresholds\n
5419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_GetAnalogWDThresholds\n
5420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_GetAnalogWDThresholds\n
5421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_GetAnalogWDThresholds\n
5422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_GetAnalogWDThresholds
5423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
ARM GAS  /tmp/ccTvghLi.s 			page 100


5427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
5429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
5430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
5431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLDS_HIGH_LOW
5432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
5433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AW
5435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1,
5437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC_AWD_
5438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
5440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              (AWDThresholdsHighLow | ADC_TR1_LT1))
5441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                     >> (((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_BIT_HIGH
5442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                         & ~(AWDThresholdsHighLow & ADC_TR1_LT1)));
5443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
5447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_oversampling Configuration of ADC transversal scope: over
5450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
5451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC oversampling scope: ADC groups regular and-or injected
5455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 families).
5456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
5457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
5458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
5459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the oversampling on ADC group regular is either
5460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
5461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (oversampler buffer reset).
5462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
5466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_SetOverSamplingScope\n
5467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_SetOverSamplingScope\n
5468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_SetOverSamplingScope
5469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  OvsScope This parameter can be one of the following values:
5471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
5472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
5473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED
5474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED
5475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED
5476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingScope(ADC_TypeDef *ADCx, uint32_t OvsScope)
5479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM, OvsScope);
5481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccTvghLi.s 			page 101


5484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC oversampling scope: ADC groups regular and-or injected
5485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 families).
5486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
5487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
5488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
5489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the oversampling on ADC group regular is either
5490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
5491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (oversampler buffer reset).
5492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_GetOverSamplingScope\n
5493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_GetOverSamplingScope\n
5494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_GetOverSamplingScope
5495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
5498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
5499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED
5500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED
5501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED
5502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingScope(ADC_TypeDef *ADCx)
5504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM));
5506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC oversampling discontinuous mode (triggered mode)
5510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on the selected ADC group.
5511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
5512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
5513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are done from 1 trigger)
5514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
5515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           needs a trigger)
5516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
5520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, oversampling discontinuous mode
5521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (triggered mode) can be used only when oversampling is
5522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         set on group regular only and in resumed mode.
5523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_SetOverSamplingDiscont
5524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  OverSamplingDiscont This parameter can be one of the following values:
5526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
5527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
5528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingDiscont(ADC_TypeDef *ADCx, uint32_t OverSamplingDiscont)
5531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_TROVS, OverSamplingDiscont);
5533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC oversampling discontinuous mode (triggered mode)
5537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on the selected ADC group.
5538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
5539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
5540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are done from 1 trigger)
ARM GAS  /tmp/ccTvghLi.s 			page 102


5541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
5542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           needs a trigger)
5543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_GetOverSamplingDiscont
5544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
5547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
5548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingDiscont(ADC_TypeDef *ADCx)
5550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_TROVS));
5552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC oversampling
5556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (impacting both ADC groups regular and injected)
5557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function set the 2 items of oversampling configuration:
5558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ratio
5559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - shift
5560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
5564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_ConfigOverSamplingRatioShift\n
5565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR2    OVSR           LL_ADC_ConfigOverSamplingRatioShift
5566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Ratio This parameter can be one of the following values:
5568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
5569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
5570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
5571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
5572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
5573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
5574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
5575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
5576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Shift This parameter can be one of the following values:
5577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
5578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
5579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
5580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
5581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
5582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
5583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
5584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
5585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
5586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigOverSamplingRatioShift(ADC_TypeDef *ADCx, uint32_t Ratio, uint32_
5589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_OVSS | ADC_CFGR2_OVSR), (Shift | Ratio));
5591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC oversampling ratio
5595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
5596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSR           LL_ADC_GetOverSamplingRatio
5597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /tmp/ccTvghLi.s 			page 103


5598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Ratio This parameter can be one of the following values:
5599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
5600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
5601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
5602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
5603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
5604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
5605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
5606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
5607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingRatio(ADC_TypeDef *ADCx)
5609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSR));
5611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC oversampling shift
5615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
5616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_GetOverSamplingShift
5617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Shift This parameter can be one of the following values:
5619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
5620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
5621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
5622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
5623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
5624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
5625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
5626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
5627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
5628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingShift(ADC_TypeDef *ADCx)
5630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSS));
5632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
5636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Multimode Configuration of ADC hierarchical scope: multim
5639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
5640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
5643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC multimode configuration to operate in independent mode
5645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
5646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
5647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         either master or slave depending on hardware.
5648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to reference manual.
5649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
5652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
5653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance or by using helper macro
5654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
ARM GAS  /tmp/ccTvghLi.s 			page 104


5655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      DUAL           LL_ADC_SetMultimode
5656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
5658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Multimode This parameter can be one of the following values:
5659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT
5660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT
5661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL
5662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT
5663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN
5664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM
5665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
5666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
5667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultimode(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Multimode)
5670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DUAL, Multimode);
5672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC multimode configuration to operate in independent mode
5676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
5677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
5678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         either master or slave depending on hardware.
5679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to reference manual.
5680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      DUAL           LL_ADC_GetMultimode
5681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
5683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT
5685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT
5686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL
5687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT
5688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN
5689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM
5690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
5691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
5692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultimode(ADC_Common_TypeDef *ADCxy_COMMON)
5694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DUAL));
5696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC multimode conversion data transfer: no transfer
5700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or transfer by DMA.
5701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC multimode transfer by DMA is not selected:
5702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         each ADC uses its own DMA channel, with its individual
5703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         DMA transfer settings.
5704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected:
5705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         One DMA channel is used for both ADC (DMA of ADC master)
5706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Specifies the DMA requests mode:
5707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
5708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
5709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions) is reached.
5710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
5711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
ARM GAS  /tmp/ccTvghLi.s 			page 105


5712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
5713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions).
5714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
5715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
5716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode non-circular:
5717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
5718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
5719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
5720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   How to retrieve multimode conversion data:
5721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Whatever multimode transfer by DMA setting: using function
5722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref LL_ADC_REG_ReadMultiConversionData32().
5723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected: conversion data
5724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is a raw data with ADC master and slave concatenated.
5725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         A macro is available to get the conversion data of
5726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
5727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
5728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled
5731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or enabled without conversion on going on group regular.
5732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      MDMA           LL_ADC_SetMultiDMATransfer\n
5733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      DMACFG         LL_ADC_SetMultiDMATransfer
5734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
5736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  MultiDMATransfer This parameter can be one of the following values:
5737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_EACH_ADC
5738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B
5739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B
5740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B
5741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B
5742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultiDMATransfer(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t MultiDMA
5745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG, MultiDMATransfer);
5747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC multimode conversion data transfer: no transfer
5751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or transfer by DMA.
5752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC multimode transfer by DMA is not selected:
5753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         each ADC uses its own DMA channel, with its individual
5754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         DMA transfer settings.
5755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected:
5756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         One DMA channel is used for both ADC (DMA of ADC master)
5757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Specifies the DMA requests mode:
5758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
5759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
5760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions) is reached.
5761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
5762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
5763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
5764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions).
5765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
5766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
5767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode non-circular:
5768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
ARM GAS  /tmp/ccTvghLi.s 			page 106


5769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
5770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
5771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   How to retrieve multimode conversion data:
5772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Whatever multimode transfer by DMA setting: using function
5773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref LL_ADC_REG_ReadMultiConversionData32().
5774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected: conversion data
5775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is a raw data with ADC master and slave concatenated.
5776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         A macro is available to get the conversion data of
5777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
5778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
5779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      MDMA           LL_ADC_GetMultiDMATransfer\n
5780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      DMACFG         LL_ADC_GetMultiDMATransfer
5781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
5783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_EACH_ADC
5785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B
5786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B
5787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B
5788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B
5789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultiDMATransfer(ADC_Common_TypeDef *ADCxy_COMMON)
5791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG));
5793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC multimode delay between 2 sampling phases.
5797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The sampling delay range depends on ADC resolution:
5798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC resolution 12 bits can have maximum delay of 12 cycles.
5799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC resolution 10 bits can have maximum delay of 10 cycles.
5800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC resolution  8 bits can have maximum delay of  8 cycles.
5801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC resolution  6 bits can have maximum delay of  6 cycles.
5802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
5805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
5806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
5807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
5808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      DELAY          LL_ADC_SetMultiTwoSamplingDelay
5809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
5811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  MultiTwoSamplingDelay This parameter can be one of the following values:
5812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE
5813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES
5814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES
5815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES
5816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES
5817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (1)
5818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (1)
5819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (2)
5820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (2)
5821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (2)
5822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (3)
5823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (3)
5824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) Parameter available only if ADC resolution is 12, 10 or 8 bits.\n
ARM GAS  /tmp/ccTvghLi.s 			page 107


5826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) Parameter available only if ADC resolution is 12 or 10 bits.\n
5827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) Parameter available only if ADC resolution is 12 bits.
5828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultiTwoSamplingDelay(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Mul
5831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DELAY, MultiTwoSamplingDelay);
5833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC multimode delay between 2 sampling phases.
5837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      DELAY          LL_ADC_GetMultiTwoSamplingDelay
5838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
5840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE
5842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES
5843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES
5844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES
5845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES
5846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (1)
5847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (1)
5848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (2)
5849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (2)
5850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (2)
5851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (3)
5852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (3)
5853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) Parameter available only if ADC resolution is 12, 10 or 8 bits.\n
5855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) Parameter available only if ADC resolution is 12 or 10 bits.\n
5856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) Parameter available only if ADC resolution is 12 bits.
5857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultiTwoSamplingDelay(ADC_Common_TypeDef *ADCxy_COMMON)
5859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DELAY));
5861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
5863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
5866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Leg_Functions Configuration of ADC alternate functions name
5868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
5869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Old functions name kept for legacy purpose, to be replaced by the          */
5871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* current functions name.                                                    */
5872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTrigSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
5873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   LL_ADC_REG_SetTriggerSource(ADCx, TriggerSource);
5875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTrigSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
5877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   LL_ADC_INJ_SetTriggerSource(ADCx, TriggerSource);
5879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
ARM GAS  /tmp/ccTvghLi.s 			page 108


5883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Instance Operation on ADC hierarchical scope: ADC instance
5886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
5887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Put ADC instance in deep power down state.
5891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
5892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
5893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
5894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
5895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
5898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_EnableDeepPowerDown
5899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableDeepPowerDown(ADC_TypeDef *ADCx)
5903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
5905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
5906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
5907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
5908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
5909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_DEEPPWD);
5910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable ADC deep power down mode.
5914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
5915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
5916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
5917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
5918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
5921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_DisableDeepPowerDown
5922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableDeepPowerDown(ADC_TypeDef *ADCx)
5926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
5928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
5929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
5930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_DEEPPWD | ADC_CR_BITS_PROPERTY_RS));
5931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get the selected ADC instance deep power down state.
5935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_IsDeepPowerDownEnabled
5936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: deep power down is disabled, 1: deep power down is enabled.
5938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDeepPowerDownEnabled(ADC_TypeDef *ADCx)
ARM GAS  /tmp/ccTvghLi.s 			page 109


5940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_DEEPPWD) == (ADC_CR_DEEPPWD)) ? 1UL : 0UL);
5942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable ADC instance internal voltage regulator.
5946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, after ADC internal voltage regulator enable,
5947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a delay for ADC internal voltage regulator stabilization
5948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is required before performing a ADC calibration or ADC enable.
5949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet, parameter tADCVREG_STUP.
5950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_INTERNAL_REGUL_STAB_US.
5951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
5954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
5955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
5959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
5961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
5962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
5963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
5964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
5965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADVREGEN);
5966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable ADC internal voltage regulator.
5970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
5973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_DisableInternalRegulator
5974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableInternalRegulator(ADC_TypeDef *ADCx)
5978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_ADVREGEN | ADC_CR_BITS_PROPERTY_RS));
5980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get the selected ADC instance internal voltage regulator state.
5984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
5985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
5987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(ADC_TypeDef *ADCx)
5989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
5991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable the selected ADC instance.
5995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, after ADC enable, a delay for
5996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC internal analog stabilization is required before performing a
ARM GAS  /tmp/ccTvghLi.s 			page 110


5997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion start.
5998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet, parameter tSTAB.
5999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled and ADC internal voltage regulator enabled.
6005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_Enable
6006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
6010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADEN);
6017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable the selected ADC instance.
6021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be not disabled. Must be enabled without conversion on going
6024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
6025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_Disable
6026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Disable(ADC_TypeDef *ADCx)
6030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADDIS);
6037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get the selected ADC instance enable state.
6041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_IsEnabled
6045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: ADC is disabled, 1: ADC is enabled.
6047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabled(ADC_TypeDef *ADCx)
6049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
6051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccTvghLi.s 			page 111


6054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get the selected ADC instance disable state.
6055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_IsDisableOngoing
6056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: no ADC disable command on going.
6058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDisableOngoing(ADC_TypeDef *ADCx)
6060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS)) ? 1UL : 0UL);
6062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Start ADC calibration in the mode single-ended
6066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
6067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, a minimum number of ADC clock cycles
6068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are required between ADC end of calibration and ADC enable.
6069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES.
6070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with differential mode available:
6071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Calibration of offset is specific to each of
6072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         single-ended and differential modes
6073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (calibration run must be performed for each of these
6074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
6075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         requires their calibration).
6076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
6079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_StartCalibration\n
6080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CR       ADCALDIF       LL_ADC_StartCalibration
6081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
6083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
6084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
6085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_StartCalibration(ADC_TypeDef *ADCx, uint32_t SingleDiff)
6088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
  75              		.loc 2 6092 0
  76 0036 8268     		ldr	r2, [r0, #8]
  77 0038 22F04042 		bic	r2, r2, #-1073741824
  78 003c 22F03F02 		bic	r2, r2, #63
  79 0040 05F08041 		and	r1, r5, #1073741824
  80 0044 0A43     		orrs	r2, r2, r1
  81 0046 42F00042 		orr	r2, r2, #-2147483648
  82 004a 8260     		str	r2, [r0, #8]
  83 004c 11E0     		b	.L4
  84              	.L6:
  85              	.LBE237:
  86              	.LBE236:
 145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Wait for calibration completion */
 147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     while (LL_ADC_IsCalibrationOnGoing(hadc->Instance) != 0UL)
 148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       wait_loop_index++;
  87              		.loc 1 149 0
ARM GAS  /tmp/ccTvghLi.s 			page 112


  88 004e 019A     		ldr	r2, [sp, #4]
  89 0050 0132     		adds	r2, r2, #1
  90 0052 0192     		str	r2, [sp, #4]
 150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (wait_loop_index >= ADC_CALIBRATION_TIMEOUT)
  91              		.loc 1 150 0
  92 0054 019A     		ldr	r2, [sp, #4]
  93 0056 B2F5912F 		cmp	r2, #296960
  94 005a 0AD3     		bcc	.L4
 151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
 153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
  95              		.loc 1 153 0
  96 005c 636D     		ldr	r3, [r4, #84]
  97 005e 23F01203 		bic	r3, r3, #18
  98 0062 43F01003 		orr	r3, r3, #16
  99 0066 6365     		str	r3, [r4, #84]
 154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_BUSY_INTERNAL,
 155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_ERROR_INTERNAL);
 156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Process unlocked */
 158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
 100              		.loc 1 158 0
 101 0068 0023     		movs	r3, #0
 102 006a 84F85030 		strb	r3, [r4, #80]
 159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         return HAL_ERROR;
 103              		.loc 1 160 0
 104 006e 0120     		movs	r0, #1
 105              	.LVL3:
 106 0070 19E0     		b	.L2
 107              	.LVL4:
 108              	.L4:
 147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 109              		.loc 1 147 0
 110 0072 2268     		ldr	r2, [r4]
 111              	.LVL5:
 112              	.LBB238:
 113              	.LBB239:
6093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADCALDIF | ADC_CR_BITS_PROPERTY_RS,
6094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADCAL | (SingleDiff & ADC_SINGLEDIFF_CALIB_START_MASK));
6095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC calibration state.
6099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_IsCalibrationOnGoing
6100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: calibration complete, 1: calibration in progress.
6102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsCalibrationOnGoing(ADC_TypeDef *ADCx)
6104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADCAL) == (ADC_CR_ADCAL)) ? 1UL : 0UL);
 114              		.loc 2 6105 0
 115 0074 9268     		ldr	r2, [r2, #8]
 116              	.LVL6:
 117 0076 002A     		cmp	r2, #0
 118 0078 01DA     		bge	.L9
 119 007a 0122     		movs	r2, #1
ARM GAS  /tmp/ccTvghLi.s 			page 113


 120 007c 00E0     		b	.L5
 121              	.L9:
 122 007e 0022     		movs	r2, #0
 123              	.L5:
 124              	.LVL7:
 125              	.LBE239:
 126              	.LBE238:
 147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 127              		.loc 1 147 0
 128 0080 002A     		cmp	r2, #0
 129 0082 E4D1     		bne	.L6
 161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Set ADC state */
 165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 130              		.loc 1 165 0
 131 0084 626D     		ldr	r2, [r4, #84]
 132 0086 22F00302 		bic	r2, r2, #3
 133 008a 42F00102 		orr	r2, r2, #1
 134 008e 6265     		str	r2, [r4, #84]
 135 0090 03E0     		b	.L7
 136              	.LVL8:
 137              	.L3:
 166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY);
 168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
 170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 138              		.loc 1 171 0
 139 0092 626D     		ldr	r2, [r4, #84]
 140 0094 42F01002 		orr	r2, r2, #16
 141 0098 6265     		str	r2, [r4, #84]
 142              	.LVL9:
 143              	.L7:
 172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Note: No need to update variable "tmp_hal_status" here: already set    */
 174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /*       to state "HAL_ERROR" by function disabling the ADC.              */
 175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
 178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 144              		.loc 1 178 0
 145 009a 0022     		movs	r2, #0
 146 009c 84F85020 		strb	r2, [r4, #80]
 179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
 181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
 147              		.loc 1 181 0
 148 00a0 1846     		mov	r0, r3
 149 00a2 00E0     		b	.L2
 150              	.LVL10:
 151              	.L8:
 128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 152              		.loc 1 128 0
 153 00a4 0220     		movs	r0, #2
ARM GAS  /tmp/ccTvghLi.s 			page 114


 154              	.LVL11:
 155              	.L2:
 182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 156              		.loc 1 182 0
 157 00a6 03B0     		add	sp, sp, #12
 158              	.LCFI2:
 159              		.cfi_def_cfa_offset 12
 160              		@ sp needed
 161 00a8 30BD     		pop	{r4, r5, pc}
 162              		.cfi_endproc
 163              	.LFE288:
 165 00aa 00BF     		.section	.text.HAL_ADCEx_Calibration_GetValue,"ax",%progbits
 166              		.align	2
 167              		.global	HAL_ADCEx_Calibration_GetValue
 168              		.thumb
 169              		.thumb_func
 171              	HAL_ADCEx_Calibration_GetValue:
 172              	.LFB289:
 183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
 185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Get the calibration factor.
 186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle.
 187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param SingleDiff This parameter can be only:
 188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *           @arg @ref ADC_SINGLE_ENDED       Channel in mode input single ended
 189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *           @arg @ref ADC_DIFFERENTIAL_ENDED Channel in mode input differential ended
 190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval Calibration value.
 191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
 192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_Calibration_GetValue(ADC_HandleTypeDef *hadc, uint32_t SingleDiff)
 193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 173              		.loc 1 193 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              		@ link register save eliminated.
 178              	.LVL12:
 194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
 195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(SingleDiff));
 197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return the selected ADC calibration value */
 199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return LL_ADC_GetCalibrationFactor(hadc->Instance, SingleDiff);
 179              		.loc 1 199 0
 180 0000 0368     		ldr	r3, [r0]
 181              	.LVL13:
 182              	.LBB240:
 183              	.LBB241:
2663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              (SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK)) >> ((SingleDiff & ADC
 184              		.loc 2 2663 0
 185 0002 D3F8B400 		ldr	r0, [r3, #180]
 186              	.LVL14:
 187 0006 0840     		ands	r0, r0, r1
 188 0008 00F07F10 		and	r0, r0, #8323199
2664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                                   ADC_SINGLEDIFF_CA
 189              		.loc 2 2664 0
 190 000c 090B     		lsrs	r1, r1, #12
 191              	.LVL15:
 192 000e 01F01001 		and	r1, r1, #16
ARM GAS  /tmp/ccTvghLi.s 			page 115


 193              	.LVL16:
 194              	.LBE241:
 195              	.LBE240:
 200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 196              		.loc 1 200 0
 197 0012 C840     		lsrs	r0, r0, r1
 198 0014 7047     		bx	lr
 199              		.cfi_endproc
 200              	.LFE289:
 202 0016 00BF     		.section	.text.HAL_ADCEx_Calibration_SetValue,"ax",%progbits
 203              		.align	2
 204              		.global	HAL_ADCEx_Calibration_SetValue
 205              		.thumb
 206              		.thumb_func
 208              	HAL_ADCEx_Calibration_SetValue:
 209              	.LFB290:
 201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
 203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Set the calibration factor to overwrite automatic conversion result.
 204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         ADC must be enabled and no conversion is ongoing.
 205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
 206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param SingleDiff This parameter can be only:
 207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *           @arg @ref ADC_SINGLE_ENDED       Channel in mode input single ended
 208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *           @arg @ref ADC_DIFFERENTIAL_ENDED Channel in mode input differential ended
 209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param CalibrationFactor Calibration factor (coded on 7 bits maximum)
 210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL state
 211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
 212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_Calibration_SetValue(ADC_HandleTypeDef *hadc, uint32_t SingleDiff,
 213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                  uint32_t CalibrationFactor)
 214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 210              		.loc 1 214 0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 0
 213              		@ frame_needed = 0, uses_anonymous_args = 0
 214              		@ link register save eliminated.
 215              	.LVL17:
 215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
 220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(SingleDiff));
 222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_CALFACT(CalibrationFactor));
 223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
 225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 216              		.loc 1 225 0
 217 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 218 0004 012B     		cmp	r3, #1
 219 0006 35D0     		beq	.L18
 214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 220              		.loc 1 214 0 discriminator 2
 221 0008 70B4     		push	{r4, r5, r6}
 222              	.LCFI3:
 223              		.cfi_def_cfa_offset 12
 224              		.cfi_offset 4, -12
ARM GAS  /tmp/ccTvghLi.s 			page 116


 225              		.cfi_offset 5, -8
 226              		.cfi_offset 6, -4
 227              		.loc 1 225 0 discriminator 2
 228 000a 0123     		movs	r3, #1
 229 000c 80F85030 		strb	r3, [r0, #80]
 226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Verification of hardware constraints before modifying the calibration    */
 228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* factors register: ADC must be enabled, no conversion on going.           */
 229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 230              		.loc 1 229 0 discriminator 2
 231 0010 0568     		ldr	r5, [r0]
 232              	.LVL18:
 233              	.LBB242:
 234              	.LBB243:
6106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
6110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Regular Operation on ADC hierarchical scope: group regu
6113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
6114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Start ADC group regular conversion.
6118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
6119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
6120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
6121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           starts immediately.
6122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
6123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
6124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           following the ADC start conversion command.
6125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
6128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
6129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without ADC disable command on going.
6130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_StartConversion
6131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartConversion(ADC_TypeDef *ADCx)
6135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADSTART);
6142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Stop ADC group regular conversion.
6146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group regular,
ARM GAS  /tmp/ccTvghLi.s 			page 117


6149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without ADC disable command on going.
6150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_StopConversion
6151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopConversion(ADC_TypeDef *ADCx)
6155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADSTP);
6162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion state.
6166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
6167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group regular.
6169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(ADC_TypeDef *ADCx)
6171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 235              		.loc 2 6172 0 discriminator 2
 236 0012 AB68     		ldr	r3, [r5, #8]
 237 0014 13F00403 		ands	r3, r3, #4
 238 0018 00D0     		beq	.L14
 239              		.loc 2 6172 0 is_stmt 0
 240 001a 0123     		movs	r3, #1
 241              	.L14:
 242              	.LVL19:
 243              	.LBE243:
 244              	.LBE242:
 245              	.LBB244:
 246              	.LBB245:
6173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular command of conversion stop state
6177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_IsStopConversionOngoing
6178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group regular.
6180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsStopConversionOngoing(ADC_TypeDef *ADCx)
6182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTP) == (ADC_CR_ADSTP)) ? 1UL : 0UL);
6184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
6189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         all oversampling increased data width (for devices
6190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         with feature oversampling).
6191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData32
6192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
ARM GAS  /tmp/ccTvghLi.s 			page 118


6194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadConversionData32(ADC_TypeDef *ADCx)
6196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 12 bits.
6203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData12
6207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
6209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData12(ADC_TypeDef *ADCx)
6211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 10 bits.
6218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData10
6222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
6224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData10(ADC_TypeDef *ADCx)
6226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 8 bits.
6233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData8
6237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
6239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData8(ADC_TypeDef *ADCx)
6241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 6 bits.
6248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
ARM GAS  /tmp/ccTvghLi.s 			page 119


6251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData6
6252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
6254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData6(ADC_TypeDef *ADCx)
6256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
6261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC multimode conversion data of ADC master, ADC slave
6263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or raw data with ADC master and slave concatenated.
6264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If raw data with ADC master and slave concatenated is retrieved,
6265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a macro is available to get the conversion data of
6266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
6267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
6268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (however this macro is mainly intended for multimode
6269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         transfer by DMA, because this function can do the same
6270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         by getting multimode conversion data of ADC master or ADC slave
6271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         separately).
6272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CDR      RDATA_MST      LL_ADC_REG_ReadMultiConversionData32\n
6273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CDR      RDATA_SLV      LL_ADC_REG_ReadMultiConversionData32
6274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ConversionData This parameter can be one of the following values:
6277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
6278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
6279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER_SLAVE
6280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
6281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadMultiConversionData32(ADC_Common_TypeDef *ADCxy_COMMON, uin
6283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CDR,
6285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              ConversionData)
6286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                     >> (POSITION_VAL(ConversionData) & 0x1FUL)
6287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    );
6288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
6290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
6293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Injected Operation on ADC hierarchical scope: group inj
6296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
6297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Start ADC group injected conversion.
6301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
6302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
6303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
6304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           starts immediately.
6305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
6306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
6307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           following the ADC start conversion command.
ARM GAS  /tmp/ccTvghLi.s 			page 120


6308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group injected,
6311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without conversion stop command on going on group injected,
6312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without ADC disable command on going.
6313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_StartConversion
6314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StartConversion(ADC_TypeDef *ADCx)
6318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_JADSTART);
6325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Stop ADC group injected conversion.
6329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group injected,
6332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without ADC disable command on going.
6333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       JADSTP         LL_ADC_INJ_StopConversion
6334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StopConversion(ADC_TypeDef *ADCx)
6338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_JADSTP);
6345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion state.
6349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_IsConversionOngoing
6350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group injected.
6352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsConversionOngoing(ADC_TypeDef *ADCx)
6354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_JADSTART) == (ADC_CR_JADSTART)) ? 1UL : 0UL);
 247              		.loc 2 6355 0 is_stmt 1
 248 001c AC68     		ldr	r4, [r5, #8]
 249 001e 14F00804 		ands	r4, r4, #8
 250 0022 00D0     		beq	.L15
 251 0024 0124     		movs	r4, #1
 252              	.L15:
 253              	.LVL20:
 254              	.LBE245:
 255              	.LBE244:
ARM GAS  /tmp/ccTvghLi.s 			page 121


 256              	.LBB246:
 257              	.LBB247:
6050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 258              		.loc 2 6050 0
 259 0026 AE68     		ldr	r6, [r5, #8]
 260              	.LVL21:
 261              	.LBE247:
 262              	.LBE246:
 230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if ((LL_ADC_IsEnabled(hadc->Instance) != 0UL)
 263              		.loc 1 232 0
 264 0028 16F0010F 		tst	r6, #1
 265 002c 14D0     		beq	.L16
 233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_regular == 0UL)
 266              		.loc 1 233 0
 267 002e 9BB9     		cbnz	r3, .L16
 234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 268              		.loc 1 234 0
 269 0030 94B9     		cbnz	r4, .L16
 270              	.LVL22:
 271              	.LBB248:
 272              	.LBB249:
2636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
 273              		.loc 2 2636 0
 274 0032 D5F8B430 		ldr	r3, [r5, #180]
 275 0036 01F07F14 		and	r4, r1, #8323199
 276 003a 23EA0404 		bic	r4, r3, r4
 277 003e 01F07F03 		and	r3, r1, #127
 278 0042 DB43     		mvns	r3, r3
 279 0044 03EA1131 		and	r1, r3, r1, lsr #12
 280              	.LVL23:
 281 0048 01F01001 		and	r1, r1, #16
 282 004c 8A40     		lsls	r2, r2, r1
 283              	.LVL24:
 284 004e 2243     		orrs	r2, r2, r4
 285 0050 C5F8B420 		str	r2, [r5, #180]
 286              	.LBE249:
 287              	.LBE248:
 215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 288              		.loc 1 215 0
 289 0054 0023     		movs	r3, #0
 290 0056 08E0     		b	.L17
 291              	.LVL25:
 292              	.L16:
 235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****      )
 236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Set the selected ADC calibration value */
 238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     LL_ADC_SetCalibrationFactor(hadc->Instance, SingleDiff, CalibrationFactor);
 239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
 241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Update ADC state machine */
 243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 293              		.loc 1 243 0
 294 0058 436D     		ldr	r3, [r0, #84]
 295 005a 43F02003 		orr	r3, r3, #32
ARM GAS  /tmp/ccTvghLi.s 			page 122


 296 005e 4365     		str	r3, [r0, #84]
 244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Update ADC error code */
 245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 297              		.loc 1 245 0
 298 0060 836D     		ldr	r3, [r0, #88]
 299 0062 43F00103 		orr	r3, r3, #1
 300 0066 8365     		str	r3, [r0, #88]
 301              	.LVL26:
 246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
 248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 302              		.loc 1 248 0
 303 0068 0123     		movs	r3, #1
 304              	.LVL27:
 305              	.L17:
 249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
 252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 306              		.loc 1 252 0
 307 006a 0022     		movs	r2, #0
 308 006c 80F85020 		strb	r2, [r0, #80]
 253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
 255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
 309              		.loc 1 255 0
 310 0070 1846     		mov	r0, r3
 311              	.LVL28:
 312 0072 01E0     		b	.L13
 313              	.LVL29:
 314              	.L18:
 315              	.LCFI4:
 316              		.cfi_def_cfa_offset 0
 317              		.cfi_restore 4
 318              		.cfi_restore 5
 319              		.cfi_restore 6
 225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 320              		.loc 1 225 0
 321 0074 0220     		movs	r0, #2
 322              	.LVL30:
 323 0076 7047     		bx	lr
 324              	.LVL31:
 325              	.L13:
 326              	.LCFI5:
 327              		.cfi_def_cfa_offset 12
 328              		.cfi_offset 4, -12
 329              		.cfi_offset 5, -8
 330              		.cfi_offset 6, -4
 256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 331              		.loc 1 256 0
 332 0078 70BC     		pop	{r4, r5, r6}
 333              	.LCFI6:
 334              		.cfi_restore 6
 335              		.cfi_restore 5
 336              		.cfi_restore 4
 337              		.cfi_def_cfa_offset 0
 338 007a 7047     		bx	lr
ARM GAS  /tmp/ccTvghLi.s 			page 123


 339              		.cfi_endproc
 340              	.LFE290:
 342              		.section	.text.HAL_ADCEx_InjectedStart,"ax",%progbits
 343              		.align	2
 344              		.global	HAL_ADCEx_InjectedStart
 345              		.thumb
 346              		.thumb_func
 348              	HAL_ADCEx_InjectedStart:
 349              	.LFB291:
 257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
 259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Enable ADC, start conversion of injected group.
 260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Interruptions enabled in this function: None.
 261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Case of multimode enabled when multimode feature is available:
 262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADCEx_InjectedStart() API must be called for ADC slave first,
 263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         then for ADC master.
 264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         For ADC slave, ADC is enabled only (conversion is not started).
 265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         For ADC master, ADC is enabled and multimode conversion is started.
 266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle.
 267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
 268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
 269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStart(ADC_HandleTypeDef *hadc)
 270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 350              		.loc 1 270 0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 0
 353              		@ frame_needed = 0, uses_anonymous_args = 0
 354              	.LVL32:
 271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_config_injected_queue;
 273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #endif
 276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
 278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) != 0UL)
 355              		.loc 1 280 0
 356 0000 0268     		ldr	r2, [r0]
 357              	.LVL33:
 358              	.LBB250:
 359              	.LBB251:
 360              		.loc 2 6355 0
 361 0002 9368     		ldr	r3, [r2, #8]
 362 0004 13F00803 		ands	r3, r3, #8
 363 0008 00D0     		beq	.L22
 364 000a 0123     		movs	r3, #1
 365              	.L22:
 366              	.LVL34:
 367              	.LBE251:
 368              	.LBE250:
 369              		.loc 1 280 0
 370 000c 002B     		cmp	r3, #0
 371 000e 46D1     		bne	.L28
 281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     return HAL_BUSY;
ARM GAS  /tmp/ccTvghLi.s 			page 124


 283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
 285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* In case of software trigger detection enabled, JQDIS must be set
 287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (which can be done only if ADSTART and JADSTART are both cleared).
 288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****        If JQDIS is not set at that point, returns an error
 289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****        - since software trigger detection is disabled. User needs to
 290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****        resort to HAL_ADCEx_DisableInjectedQueue() API to set JQDIS.
 291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****        - or (if JQDIS is intentionally reset) since JEXTEN = 0 which means
 292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****          the queue is empty */
 293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_config_injected_queue = READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 372              		.loc 1 293 0
 373 0010 D368     		ldr	r3, [r2, #12]
 374 0012 03F00043 		and	r3, r3, #-2147483648
 375              	.LVL35:
 294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if ((READ_BIT(hadc->Instance->JSQR, ADC_JSQR_JEXTEN) == 0UL)
 376              		.loc 1 295 0
 377 0016 D26C     		ldr	r2, [r2, #76]
 378 0018 12F0C00F 		tst	r2, #192
 379 001c 06D1     		bne	.L24
 296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         && (tmp_config_injected_queue == 0UL)
 380              		.loc 1 296 0
 381 001e 2BB9     		cbnz	r3, .L24
 297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****        )
 298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 382              		.loc 1 299 0
 383 0020 436D     		ldr	r3, [r0, #84]
 384              	.LVL36:
 385 0022 43F02003 		orr	r3, r3, #32
 386 0026 4365     		str	r3, [r0, #84]
 300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       return HAL_ERROR;
 387              		.loc 1 300 0
 388 0028 0120     		movs	r0, #1
 389              	.LVL37:
 390 002a 7047     		bx	lr
 391              	.LVL38:
 392              	.L24:
 301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Process locked */
 304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     __HAL_LOCK(hadc);
 393              		.loc 1 304 0
 394 002c 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 395              	.LVL39:
 396 0030 012B     		cmp	r3, #1
 397 0032 36D0     		beq	.L29
 270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 398              		.loc 1 270 0 discriminator 2
 399 0034 10B5     		push	{r4, lr}
 400              	.LCFI7:
 401              		.cfi_def_cfa_offset 8
 402              		.cfi_offset 4, -8
 403              		.cfi_offset 14, -4
 404 0036 0446     		mov	r4, r0
 405              		.loc 1 304 0 discriminator 2
ARM GAS  /tmp/ccTvghLi.s 			page 125


 406 0038 0123     		movs	r3, #1
 407 003a 80F85030 		strb	r3, [r0, #80]
 305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Enable the ADC peripheral */
 307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(hadc);
 408              		.loc 1 307 0 discriminator 2
 409 003e FFF7FEFF 		bl	ADC_Enable
 410              	.LVL40:
 308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Start conversion if ADC is effectively enabled */
 310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 411              		.loc 1 310 0 discriminator 2
 412 0042 0346     		mov	r3, r0
 413 0044 38BB     		cbnz	r0, .L25
 311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Check if a regular conversion is ongoing */
 313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if ((hadc->State & HAL_ADC_STATE_REG_BUSY) != 0UL)
 414              		.loc 1 313 0
 415 0046 626D     		ldr	r2, [r4, #84]
 416 0048 12F4807F 		tst	r2, #256
 417 004c 04D0     		beq	.L26
 314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Reset ADC error code field related to injected conversions only */
 316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
 418              		.loc 1 316 0
 419 004e A26D     		ldr	r2, [r4, #88]
 420 0050 22F00802 		bic	r2, r2, #8
 421 0054 A265     		str	r2, [r4, #88]
 422 0056 01E0     		b	.L27
 423              	.L26:
 317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       else
 319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Set ADC error code to none */
 321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         ADC_CLEAR_ERRORCODE(hadc);
 424              		.loc 1 321 0
 425 0058 0022     		movs	r2, #0
 426 005a A265     		str	r2, [r4, #88]
 427              	.L27:
 322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set ADC state                                                        */
 325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* - Clear state bitfield related to injected group conversion results  */
 326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* - Set state bitfield related to injected operation                   */
 327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 428              		.loc 1 327 0
 429 005c 626D     		ldr	r2, [r4, #84]
 430 005e 22F44052 		bic	r2, r2, #12288
 431 0062 22F00102 		bic	r2, r2, #1
 432 0066 42F48052 		orr	r2, r2, #4096
 433 006a 6265     		str	r2, [r4, #84]
 328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
 329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                         HAL_ADC_STATE_INJ_BUSY);
 330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
 333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         - if ADC instance is master or if multimode feature is not available
ARM GAS  /tmp/ccTvghLi.s 			page 126


 334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         - if multimode setting is disabled (ADC instance slave in independent mode) */
 335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****          )
 338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #endif
 342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Clear ADC group injected group conversion flag */
 344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
 345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JEOC | ADC_FLAG_JEOS));
 434              		.loc 1 345 0
 435 006c 2268     		ldr	r2, [r4]
 436 006e 6021     		movs	r1, #96
 437 0070 1160     		str	r1, [r2]
 346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Process unlocked */
 348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Unlock before starting ADC conversions: in case of potential         */
 349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
 350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 438              		.loc 1 350 0
 439 0072 0022     		movs	r2, #0
 440 0074 84F85020 		strb	r2, [r4, #80]
 351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Enable conversion of injected group, if automatic injected conversion  */
 353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* is disabled.                                                           */
 354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.    */
 355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* If external trigger has been selected, conversion will start at next   */
 356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* trigger event.                                                         */
 357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Case of multimode enabled (when multimode feature is available):       */
 358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* if ADC is slave,                                                       */
 359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*    - ADC is enabled only (conversion is not started),                  */
 360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*    - if multimode only concerns regular conversion, ADC is enabled     */
 361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*     and conversion is started.                                         */
 362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* If ADC is master or independent,                                       */
 363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*    - ADC is enabled and conversion is started.                         */
 364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_SIMULT)
 368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_INTERL)
 369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****          )
 370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* ADC instance is not a multimode slave instance with multimode injected conversions enabl
 372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         if (LL_ADC_INJ_GetTrigAuto(hadc->Instance) == LL_ADC_INJ_TRIG_INDEPENDENT)
 373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         {
 374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           LL_ADC_INJ_StartConversion(hadc->Instance);
 375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         }
 376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       else
 378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* ADC instance is not a multimode slave instance with multimode injected conversions enabl
 380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #else
 383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (LL_ADC_INJ_GetTrigAuto(hadc->Instance) == LL_ADC_INJ_TRIG_INDEPENDENT)
ARM GAS  /tmp/ccTvghLi.s 			page 127


 441              		.loc 1 383 0
 442 0078 2168     		ldr	r1, [r4]
 443              	.LVL41:
 444              	.LBB252:
 445              	.LBB253:
4292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 446              		.loc 2 4292 0
 447 007a CA68     		ldr	r2, [r1, #12]
 448              	.LVL42:
 449              	.LBE253:
 450              	.LBE252:
 451              		.loc 1 383 0
 452 007c 12F0007F 		tst	r2, #33554432
 453 0080 11D1     		bne	.L30
 454              	.LVL43:
 455              	.LBB254:
 456              	.LBB255:
6322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 457              		.loc 2 6322 0
 458 0082 8A68     		ldr	r2, [r1, #8]
 459 0084 22F00042 		bic	r2, r2, #-2147483648
 460 0088 22F03F02 		bic	r2, r2, #63
 461 008c 42F00802 		orr	r2, r2, #8
 462 0090 8A60     		str	r2, [r1, #8]
 463              	.LBE255:
 464              	.LBE254:
 384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Start ADC group injected conversion */
 386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         LL_ADC_INJ_StartConversion(hadc->Instance);
 387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #endif
 389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
 392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Process unlocked */
 394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Return function status */
 398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     return tmp_hal_status;
 465              		.loc 1 398 0
 466 0092 1846     		mov	r0, r3
 467              	.LVL44:
 468 0094 10BD     		pop	{r4, pc}
 469              	.LVL45:
 470              	.L25:
 394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 471              		.loc 1 394 0
 472 0096 0022     		movs	r2, #0
 473 0098 84F85020 		strb	r2, [r4, #80]
 474 009c 10BD     		pop	{r4, pc}
 475              	.LVL46:
 476              	.L28:
 477              	.LCFI8:
 478              		.cfi_def_cfa_offset 0
 479              		.cfi_restore 4
ARM GAS  /tmp/ccTvghLi.s 			page 128


 480              		.cfi_restore 14
 282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 481              		.loc 1 282 0
 482 009e 0220     		movs	r0, #2
 483              	.LVL47:
 399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 484              		.loc 1 400 0
 485 00a0 7047     		bx	lr
 486              	.LVL48:
 487              	.L29:
 304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 488              		.loc 1 304 0
 489 00a2 0220     		movs	r0, #2
 490              	.LVL49:
 491 00a4 7047     		bx	lr
 492              	.LVL50:
 493              	.L30:
 494              	.LCFI9:
 495              		.cfi_def_cfa_offset 8
 496              		.cfi_offset 4, -8
 497              		.cfi_offset 14, -4
 398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 498              		.loc 1 398 0
 499 00a6 1846     		mov	r0, r3
 500              	.LVL51:
 501              		.loc 1 400 0
 502 00a8 10BD     		pop	{r4, pc}
 503              		.cfi_endproc
 504              	.LFE291:
 506 00aa 00BF     		.section	.text.HAL_ADCEx_InjectedStop,"ax",%progbits
 507              		.align	2
 508              		.global	HAL_ADCEx_InjectedStop
 509              		.thumb
 510              		.thumb_func
 512              	HAL_ADCEx_InjectedStop:
 513              	.LFB292:
 401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
 403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Stop conversion of injected channels. Disable ADC peripheral if
 404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         no regular conversion is on going.
 405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   If ADC must be disabled and if conversion is on going on
 406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         regular group, function HAL_ADC_Stop must be used to stop both
 407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         injected and regular groups, and disable the ADC.
 408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   If injected group mode auto-injection is enabled,
 409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         function HAL_ADC_Stop must be used.
 410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   In case of multimode enabled (when multimode feature is available),
 411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADCEx_InjectedStop() must be called for ADC master first, then for ADC slave.
 412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         For ADC master, conversion is stopped and ADC is disabled.
 413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         For ADC slave, ADC is disabled only (conversion stop of ADC master
 414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         has already stopped conversion of ADC slave).
 415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle.
 416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
 417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
 418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStop(ADC_HandleTypeDef *hadc)
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 514              		.loc 1 419 0
ARM GAS  /tmp/ccTvghLi.s 			page 129


 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 0
 517              		@ frame_needed = 0, uses_anonymous_args = 0
 518              	.LVL52:
 420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
 423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
 426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 519              		.loc 1 426 0
 520 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 521 0004 012B     		cmp	r3, #1
 522 0006 27D0     		beq	.L38
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 523              		.loc 1 419 0 discriminator 2
 524 0008 10B5     		push	{r4, lr}
 525              	.LCFI10:
 526              		.cfi_def_cfa_offset 8
 527              		.cfi_offset 4, -8
 528              		.cfi_offset 14, -4
 529 000a 0446     		mov	r4, r0
 530              		.loc 1 426 0 discriminator 2
 531 000c 0123     		movs	r3, #1
 532 000e 80F85030 		strb	r3, [r0, #80]
 427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* 1. Stop potential conversion on going on injected group only. */
 429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_INJECTED_GROUP);
 533              		.loc 1 429 0 discriminator 2
 534 0012 0221     		movs	r1, #2
 535 0014 FFF7FEFF 		bl	ADC_ConversionStop
 536              	.LVL53:
 430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Disable ADC peripheral if injected conversions are effectively stopped   */
 432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* and if no conversion on regular group is on-going                       */
 433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 537              		.loc 1 433 0 discriminator 2
 538 0018 0346     		mov	r3, r0
 539 001a C0B9     		cbnz	r0, .L35
 434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 540              		.loc 1 435 0
 541 001c 2268     		ldr	r2, [r4]
 542              	.LVL54:
 543              	.LBB256:
 544              	.LBB257:
6172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 545              		.loc 2 6172 0
 546 001e 9268     		ldr	r2, [r2, #8]
 547              	.LVL55:
 548 0020 12F00402 		ands	r2, r2, #4
 549 0024 00D0     		beq	.L36
 550 0026 0122     		movs	r2, #1
 551              	.L36:
 552              	.LVL56:
 553              	.LBE257:
ARM GAS  /tmp/ccTvghLi.s 			page 130


 554              	.LBE256:
 555              		.loc 1 435 0
 556 0028 6AB9     		cbnz	r2, .L37
 436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* 2. Disable the ADC peripheral */
 438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Disable(hadc);
 557              		.loc 1 438 0
 558 002a 2046     		mov	r0, r4
 559              	.LVL57:
 560 002c FFF7FEFF 		bl	ADC_Disable
 561              	.LVL58:
 439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Check if ADC is effectively disabled */
 441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
 562              		.loc 1 441 0
 563 0030 0346     		mov	r3, r0
 564 0032 60B9     		cbnz	r0, .L35
 442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Set ADC state */
 444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
 565              		.loc 1 444 0
 566 0034 626D     		ldr	r2, [r4, #84]
 567 0036 22F48852 		bic	r2, r2, #4352
 568 003a 22F00102 		bic	r2, r2, #1
 569 003e 42F00102 		orr	r2, r2, #1
 570 0042 6265     		str	r2, [r4, #84]
 571 0044 03E0     		b	.L35
 572              	.L37:
 445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
 447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Conversion on injected group is stopped, but ADC not disabled since    */
 450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* conversion on regular group is still running.                          */
 451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
 452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set ADC state */
 454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 573              		.loc 1 454 0
 574 0046 626D     		ldr	r2, [r4, #84]
 575 0048 22F48052 		bic	r2, r2, #4096
 576 004c 6265     		str	r2, [r4, #84]
 577              	.L35:
 578              	.LVL59:
 455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
 459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 579              		.loc 1 459 0
 580 004e 0022     		movs	r2, #0
 581 0050 84F85020 		strb	r2, [r4, #80]
 460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
 462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
 582              		.loc 1 462 0
 583 0054 1846     		mov	r0, r3
ARM GAS  /tmp/ccTvghLi.s 			page 131


 584 0056 10BD     		pop	{r4, pc}
 585              	.LVL60:
 586              	.L38:
 587              	.LCFI11:
 588              		.cfi_def_cfa_offset 0
 589              		.cfi_restore 4
 590              		.cfi_restore 14
 426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 591              		.loc 1 426 0
 592 0058 0220     		movs	r0, #2
 593              	.LVL61:
 594 005a 7047     		bx	lr
 595              		.cfi_endproc
 596              	.LFE292:
 598              		.section	.text.HAL_ADCEx_InjectedPollForConversion,"ax",%progbits
 599              		.align	2
 600              		.global	HAL_ADCEx_InjectedPollForConversion
 601              		.thumb
 602              		.thumb_func
 604              	HAL_ADCEx_InjectedPollForConversion:
 605              	.LFB293:
 463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
 466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Wait for injected group conversion to be completed.
 467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
 468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param Timeout Timeout value in millisecond.
 469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Depending on hadc->Init.EOCSelection, JEOS or JEOC is
 470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         checked and cleared depending on AUTDLY bit status.
 471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
 472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
 473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedPollForConversion(ADC_HandleTypeDef *hadc, uint32_t Timeout)
 474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 606              		.loc 1 474 0
 607              		.cfi_startproc
 608              		@ args = 0, pretend = 0, frame = 0
 609              		@ frame_needed = 0, uses_anonymous_args = 0
 610              	.LVL62:
 611 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 612              	.LCFI12:
 613              		.cfi_def_cfa_offset 24
 614              		.cfi_offset 3, -24
 615              		.cfi_offset 4, -20
 616              		.cfi_offset 5, -16
 617              		.cfi_offset 6, -12
 618              		.cfi_offset 7, -8
 619              		.cfi_offset 14, -4
 620 0002 0446     		mov	r4, r0
 621 0004 0E46     		mov	r6, r1
 475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tickstart;
 476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_Flag_End;
 477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_inj_is_trigger_source_sw_start;
 478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_reg_is_trigger_source_sw_start;
 479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_cfgr;
 480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   const ADC_TypeDef *tmpADC_Master;
 482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
ARM GAS  /tmp/ccTvghLi.s 			page 132


 483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #endif
 484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
 486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* If end of sequence selected */
 489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
 622              		.loc 1 489 0
 623 0006 4369     		ldr	r3, [r0, #20]
 624 0008 082B     		cmp	r3, #8
 625 000a 01D1     		bne	.L53
 490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_Flag_End = ADC_FLAG_JEOS;
 626              		.loc 1 491 0
 627 000c 4025     		movs	r5, #64
 628 000e 00E0     		b	.L42
 629              	.L53:
 492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else /* end of conversion selected */
 494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_Flag_End = ADC_FLAG_JEOC;
 630              		.loc 1 495 0
 631 0010 2025     		movs	r5, #32
 632              	.L42:
 633              	.LVL63:
 496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Get timeout */
 499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tickstart = HAL_GetTick();
 634              		.loc 1 499 0
 635 0012 FFF7FEFF 		bl	HAL_GetTick
 636              	.LVL64:
 637 0016 0746     		mov	r7, r0
 638              	.LVL65:
 500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Wait until End of Conversion or Sequence flag is raised */
 502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   while ((hadc->Instance->ISR & tmp_Flag_End) == 0UL)
 639              		.loc 1 502 0
 640 0018 15E0     		b	.L44
 641              	.LVL66:
 642              	.L47:
 503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Check if timeout is disabled (set to infinite wait) */
 505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (Timeout != HAL_MAX_DELAY)
 643              		.loc 1 505 0
 644 001a B6F1FF3F 		cmp	r6, #-1
 645 001e 12D0     		beq	.L44
 506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
 646              		.loc 1 507 0
 647 0020 FFF7FEFF 		bl	HAL_GetTick
 648              	.LVL67:
 649 0024 C01B     		subs	r0, r0, r7
 650 0026 8642     		cmp	r6, r0
 651 0028 00D3     		bcc	.L45
 652              		.loc 1 507 0 is_stmt 0 discriminator 1
 653 002a 66B9     		cbnz	r6, .L44
ARM GAS  /tmp/ccTvghLi.s 			page 133


 654              	.L45:
 508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* New check to avoid false timeout detection in case of preemption */
 510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         if ((hadc->Instance->ISR & tmp_Flag_End) == 0UL)
 655              		.loc 1 510 0 is_stmt 1
 656 002c 2368     		ldr	r3, [r4]
 657 002e 1B68     		ldr	r3, [r3]
 658 0030 1D42     		tst	r5, r3
 659 0032 08D1     		bne	.L44
 511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         {
 512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           /* Update ADC state machine to timeout */
 513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 660              		.loc 1 513 0
 661 0034 636D     		ldr	r3, [r4, #84]
 662 0036 43F00403 		orr	r3, r3, #4
 663 003a 6365     		str	r3, [r4, #84]
 514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           /* Process unlocked */
 516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
 664              		.loc 1 516 0
 665 003c 0023     		movs	r3, #0
 666 003e 84F85030 		strb	r3, [r4, #80]
 517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           return HAL_TIMEOUT;
 667              		.loc 1 518 0
 668 0042 0320     		movs	r0, #3
 669 0044 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 670              	.LVL68:
 671              	.L44:
 502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 672              		.loc 1 502 0
 673 0046 2368     		ldr	r3, [r4]
 674 0048 1A68     		ldr	r2, [r3]
 675 004a 1542     		tst	r5, r2
 676 004c E5D0     		beq	.L47
 677              	.LVL69:
 678              	.LBB258:
 679              	.LBB259:
3976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 680              		.loc 2 3976 0
 681 004e DA6C     		ldr	r2, [r3, #76]
 682 0050 12F0C00F 		tst	r2, #192
 683 0054 01D1     		bne	.L54
 684 0056 0120     		movs	r0, #1
 685 0058 00E0     		b	.L48
 686              	.L54:
 687 005a 0020     		movs	r0, #0
 688              	.L48:
 689              	.LVL70:
 690              	.LBE259:
 691              	.LBE258:
 692              	.LBB260:
 693              	.LBB261:
3250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 694              		.loc 2 3250 0
 695 005c DA68     		ldr	r2, [r3, #12]
 696 005e 12F4406F 		tst	r2, #3072
ARM GAS  /tmp/ccTvghLi.s 			page 134


 697 0062 01D1     		bne	.L55
 698 0064 0126     		movs	r6, #1
 699              	.LVL71:
 700 0066 00E0     		b	.L49
 701              	.LVL72:
 702              	.L55:
 703 0068 0026     		movs	r6, #0
 704              	.LVL73:
 705              	.L49:
 706              	.LBE261:
 707              	.LBE260:
 519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         }
 520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Retrieve ADC configuration */
 525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_adc_inj_is_trigger_source_sw_start = LL_ADC_INJ_IsTriggerSourceSWStart(hadc->Instance);
 526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_adc_reg_is_trigger_source_sw_start = LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance);
 527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Get relevant register CFGR in ADC instance of ADC master or slave  */
 528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* in function of multimode state (for devices with multimode         */
 529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* available).                                                        */
 530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_SIMULT)
 534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_INTERL)
 535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****      )
 536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_cfgr = READ_REG(hadc->Instance->CFGR);
 538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
 540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
 542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
 543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #else
 545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_cfgr = READ_REG(hadc->Instance->CFGR);
 708              		.loc 1 545 0
 709 006a D968     		ldr	r1, [r3, #12]
 710              	.LVL74:
 546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #endif
 547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Update ADC state machine */
 549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
 711              		.loc 1 549 0
 712 006c 626D     		ldr	r2, [r4, #84]
 713 006e 42F40052 		orr	r2, r2, #8192
 714 0072 6265     		str	r2, [r4, #84]
 550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Determine whether any further conversion upcoming on group injected      */
 552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* by external trigger or by automatic injected conversion                  */
 553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* from group regular.                                                      */
 554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if ((tmp_adc_inj_is_trigger_source_sw_start != 0UL)            ||
 715              		.loc 1 554 0
 716 0074 30B9     		cbnz	r0, .L50
 717              		.loc 1 554 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccTvghLi.s 			page 135


 718 0076 11F0007F 		tst	r1, #33554432
 719 007a 16D1     		bne	.L51
 555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       ((READ_BIT(tmp_cfgr, ADC_CFGR_JAUTO) == 0UL)      &&
 720              		.loc 1 555 0 is_stmt 1
 721 007c AEB1     		cbz	r6, .L51
 556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****        ((tmp_adc_reg_is_trigger_source_sw_start != 0UL)  &&
 722              		.loc 1 556 0
 723 007e 11F4005F 		tst	r1, #8192
 724 0082 12D1     		bne	.L51
 725              	.L50:
 557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == 0UL))))
 558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Check whether end of sequence is reached */
 560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS))
 726              		.loc 1 560 0
 727 0084 1A68     		ldr	r2, [r3]
 728 0086 12F0400F 		tst	r2, #64
 729 008a 0ED0     		beq	.L51
 561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Particular case if injected contexts queue is enabled:             */
 563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* when the last context has been fully processed, JSQR is reset      */
 564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* by the hardware. Even if no injected conversion is planned to come */
 565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* (queue empty, triggers are ignored), it can start again            */
 566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* immediately after setting a new context (JADSTART is still set).   */
 567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Therefore, state of HAL ADC injected group is kept to busy.        */
 568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (READ_BIT(tmp_cfgr, ADC_CFGR_JQM) == 0UL)
 730              		.loc 1 568 0
 731 008c 11F4001F 		tst	r1, #2097152
 732 0090 0BD1     		bne	.L51
 569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Set ADC state */
 571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 733              		.loc 1 571 0
 734 0092 626D     		ldr	r2, [r4, #84]
 735 0094 22F48052 		bic	r2, r2, #4096
 736 0098 6265     		str	r2, [r4, #84]
 572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         if ((hadc->State & HAL_ADC_STATE_REG_BUSY) == 0UL)
 737              		.loc 1 573 0
 738 009a 626D     		ldr	r2, [r4, #84]
 739 009c 12F4807F 		tst	r2, #256
 740 00a0 03D1     		bne	.L51
 574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         {
 575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 741              		.loc 1 575 0
 742 00a2 626D     		ldr	r2, [r4, #84]
 743 00a4 42F00102 		orr	r2, r2, #1
 744 00a8 6265     		str	r2, [r4, #84]
 745              	.L51:
 576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         }
 577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Clear polled flag */
 582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (tmp_Flag_End == ADC_FLAG_JEOS)
 746              		.loc 1 582 0
ARM GAS  /tmp/ccTvghLi.s 			page 136


 747 00aa 402D     		cmp	r5, #64
 748 00ac 06D1     		bne	.L52
 583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Clear end of sequence JEOS flag of injected group if low power feature */
 585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* "LowPowerAutoWait " is disabled, to not interfere with this feature.   */
 586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* For injected groups, no new conversion will start before JEOS is       */
 587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* cleared.                                                               */
 588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (READ_BIT(tmp_cfgr, ADC_CFGR_AUTDLY) == 0UL)
 749              		.loc 1 588 0
 750 00ae 11F4804F 		tst	r1, #16384
 751 00b2 07D1     		bne	.L56
 589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JEOC | ADC_FLAG_JEOS));
 752              		.loc 1 590 0
 753 00b4 6022     		movs	r2, #96
 754 00b6 1A60     		str	r2, [r3]
 591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
 594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC);
 596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return API HAL status */
 599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return HAL_OK;
 755              		.loc 1 599 0
 756 00b8 0020     		movs	r0, #0
 757 00ba F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 758              	.LVL75:
 759              	.L52:
 595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 760              		.loc 1 595 0
 761 00bc 2022     		movs	r2, #32
 762 00be 1A60     		str	r2, [r3]
 763              		.loc 1 599 0
 764 00c0 0020     		movs	r0, #0
 765 00c2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 766              	.LVL76:
 767              	.L56:
 768 00c4 0020     		movs	r0, #0
 600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 769              		.loc 1 600 0
 770 00c6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 771              		.cfi_endproc
 772              	.LFE293:
 774              		.section	.text.HAL_ADCEx_InjectedStart_IT,"ax",%progbits
 775              		.align	2
 776              		.global	HAL_ADCEx_InjectedStart_IT
 777              		.thumb
 778              		.thumb_func
 780              	HAL_ADCEx_InjectedStart_IT:
 781              	.LFB294:
 601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
 603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Enable ADC, start conversion of injected group with interruption.
 604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Interruptions enabled in this function according to initialization
 605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         setting : JEOC (end of conversion) or JEOS (end of sequence)
ARM GAS  /tmp/ccTvghLi.s 			page 137


 606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (when multimode feature is enabled):
 607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADCEx_InjectedStart_IT() API must be called for ADC slave first,
 608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         then for ADC master.
 609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         For ADC slave, ADC is enabled only (conversion is not started).
 610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         For ADC master, ADC is enabled and multimode conversion is started.
 611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle.
 612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status.
 613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
 614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStart_IT(ADC_HandleTypeDef *hadc)
 615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 782              		.loc 1 615 0
 783              		.cfi_startproc
 784              		@ args = 0, pretend = 0, frame = 0
 785              		@ frame_needed = 0, uses_anonymous_args = 0
 786              	.LVL77:
 616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_config_injected_queue;
 618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #endif
 621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
 623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) != 0UL)
 787              		.loc 1 625 0
 788 0000 0268     		ldr	r2, [r0]
 789              	.LVL78:
 790              	.LBB262:
 791              	.LBB263:
 792              		.loc 2 6355 0
 793 0002 9368     		ldr	r3, [r2, #8]
 794 0004 13F00803 		ands	r3, r3, #8
 795 0008 00D0     		beq	.L59
 796 000a 0123     		movs	r3, #1
 797              	.L59:
 798              	.LVL79:
 799              	.LBE263:
 800              	.LBE262:
 801              		.loc 1 625 0
 802 000c 002B     		cmp	r3, #0
 803 000e 68D1     		bne	.L69
 626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     return HAL_BUSY;
 628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
 630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* In case of software trigger detection enabled, JQDIS must be set
 632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (which can be done only if ADSTART and JADSTART are both cleared).
 633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****        If JQDIS is not set at that point, returns an error
 634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****        - since software trigger detection is disabled. User needs to
 635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****        resort to HAL_ADCEx_DisableInjectedQueue() API to set JQDIS.
 636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****        - or (if JQDIS is intentionally reset) since JEXTEN = 0 which means
 637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****          the queue is empty */
 638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_config_injected_queue = READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 804              		.loc 1 638 0
 805 0010 D368     		ldr	r3, [r2, #12]
ARM GAS  /tmp/ccTvghLi.s 			page 138


 806 0012 03F00043 		and	r3, r3, #-2147483648
 807              	.LVL80:
 639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if ((READ_BIT(hadc->Instance->JSQR, ADC_JSQR_JEXTEN) == 0UL)
 808              		.loc 1 640 0
 809 0016 D26C     		ldr	r2, [r2, #76]
 810 0018 12F0C00F 		tst	r2, #192
 811 001c 06D1     		bne	.L61
 641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         && (tmp_config_injected_queue == 0UL)
 812              		.loc 1 641 0
 813 001e 2BB9     		cbnz	r3, .L61
 642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****        )
 643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 814              		.loc 1 644 0
 815 0020 436D     		ldr	r3, [r0, #84]
 816              	.LVL81:
 817 0022 43F02003 		orr	r3, r3, #32
 818 0026 4365     		str	r3, [r0, #84]
 645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       return HAL_ERROR;
 819              		.loc 1 645 0
 820 0028 0120     		movs	r0, #1
 821              	.LVL82:
 822 002a 7047     		bx	lr
 823              	.LVL83:
 824              	.L61:
 646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Process locked */
 649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     __HAL_LOCK(hadc);
 825              		.loc 1 649 0
 826 002c 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 827              	.LVL84:
 828 0030 012B     		cmp	r3, #1
 829 0032 58D0     		beq	.L70
 615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 830              		.loc 1 615 0 discriminator 2
 831 0034 10B5     		push	{r4, lr}
 832              	.LCFI13:
 833              		.cfi_def_cfa_offset 8
 834              		.cfi_offset 4, -8
 835              		.cfi_offset 14, -4
 836 0036 0446     		mov	r4, r0
 837              		.loc 1 649 0 discriminator 2
 838 0038 0123     		movs	r3, #1
 839 003a 80F85030 		strb	r3, [r0, #80]
 650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Enable the ADC peripheral */
 652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(hadc);
 840              		.loc 1 652 0 discriminator 2
 841 003e FFF7FEFF 		bl	ADC_Enable
 842              	.LVL85:
 653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Start conversion if ADC is effectively enabled */
 655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 843              		.loc 1 655 0 discriminator 2
 844 0042 0346     		mov	r3, r0
ARM GAS  /tmp/ccTvghLi.s 			page 139


 845 0044 0028     		cmp	r0, #0
 846 0046 48D1     		bne	.L62
 656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Check if a regular conversion is ongoing */
 658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if ((hadc->State & HAL_ADC_STATE_REG_BUSY) != 0UL)
 847              		.loc 1 658 0
 848 0048 626D     		ldr	r2, [r4, #84]
 849 004a 12F4807F 		tst	r2, #256
 850 004e 04D0     		beq	.L63
 659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Reset ADC error code field related to injected conversions only */
 661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
 851              		.loc 1 661 0
 852 0050 A26D     		ldr	r2, [r4, #88]
 853 0052 22F00802 		bic	r2, r2, #8
 854 0056 A265     		str	r2, [r4, #88]
 855 0058 01E0     		b	.L64
 856              	.L63:
 662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       else
 664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Set ADC error code to none */
 666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         ADC_CLEAR_ERRORCODE(hadc);
 857              		.loc 1 666 0
 858 005a 0022     		movs	r2, #0
 859 005c A265     		str	r2, [r4, #88]
 860              	.L64:
 667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set ADC state                                                        */
 670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* - Clear state bitfield related to injected group conversion results  */
 671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* - Set state bitfield related to injected operation                   */
 672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 861              		.loc 1 672 0
 862 005e 626D     		ldr	r2, [r4, #84]
 863 0060 22F44052 		bic	r2, r2, #12288
 864 0064 22F00102 		bic	r2, r2, #1
 865 0068 42F48052 		orr	r2, r2, #4096
 866 006c 6265     		str	r2, [r4, #84]
 673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
 674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                         HAL_ADC_STATE_INJ_BUSY);
 675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
 678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         - if ADC instance is master or if multimode feature is not available
 679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         - if multimode setting is disabled (ADC instance slave in independent mode) */
 680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****          )
 683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #endif
 687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Clear ADC group injected group conversion flag */
 689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
 690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JEOC | ADC_FLAG_JEOS));
ARM GAS  /tmp/ccTvghLi.s 			page 140


 867              		.loc 1 690 0
 868 006e 2268     		ldr	r2, [r4]
 869 0070 6021     		movs	r1, #96
 870 0072 1160     		str	r1, [r2]
 691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Process unlocked */
 693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Unlock before starting ADC conversions: in case of potential         */
 694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
 695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 871              		.loc 1 695 0
 872 0074 0022     		movs	r2, #0
 873 0076 84F85020 		strb	r2, [r4, #80]
 696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Enable ADC Injected context queue overflow interrupt if this feature   */
 698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* is enabled.                                                            */
 699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if ((hadc->Instance->CFGR & ADC_CFGR_JQM) != 0UL)
 874              		.loc 1 699 0
 875 007a 2268     		ldr	r2, [r4]
 876 007c D168     		ldr	r1, [r2, #12]
 877 007e 11F4001F 		tst	r1, #2097152
 878 0082 03D0     		beq	.L65
 700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_FLAG_JQOVF);
 879              		.loc 1 701 0
 880 0084 5168     		ldr	r1, [r2, #4]
 881 0086 41F48061 		orr	r1, r1, #1024
 882 008a 5160     		str	r1, [r2, #4]
 883              	.L65:
 702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Enable ADC end of conversion interrupt */
 705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       switch (hadc->Init.EOCSelection)
 884              		.loc 1 705 0
 885 008c 6269     		ldr	r2, [r4, #20]
 886 008e 082A     		cmp	r2, #8
 887 0090 0AD1     		bne	.L72
 706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         case ADC_EOC_SEQ_CONV:
 708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
 888              		.loc 1 708 0
 889 0092 2168     		ldr	r1, [r4]
 890 0094 4A68     		ldr	r2, [r1, #4]
 891 0096 22F02002 		bic	r2, r2, #32
 892 009a 4A60     		str	r2, [r1, #4]
 709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 893              		.loc 1 709 0
 894 009c 2168     		ldr	r1, [r4]
 895 009e 4A68     		ldr	r2, [r1, #4]
 896 00a0 42F04002 		orr	r2, r2, #64
 897 00a4 4A60     		str	r2, [r1, #4]
 710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           break;
 898              		.loc 1 710 0
 899 00a6 09E0     		b	.L68
 900              	.L72:
 711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* case ADC_EOC_SINGLE_CONV */
 712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         default:
 713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
ARM GAS  /tmp/ccTvghLi.s 			page 141


 901              		.loc 1 713 0
 902 00a8 2168     		ldr	r1, [r4]
 903 00aa 4A68     		ldr	r2, [r1, #4]
 904 00ac 22F04002 		bic	r2, r2, #64
 905 00b0 4A60     		str	r2, [r1, #4]
 714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 906              		.loc 1 714 0
 907 00b2 2168     		ldr	r1, [r4]
 908 00b4 4A68     		ldr	r2, [r1, #4]
 909 00b6 42F02002 		orr	r2, r2, #32
 910 00ba 4A60     		str	r2, [r1, #4]
 911              	.L68:
 715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           break;
 716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Enable conversion of injected group, if automatic injected conversion  */
 719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* is disabled.                                                           */
 720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.    */
 721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* If external trigger has been selected, conversion will start at next   */
 722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* trigger event.                                                         */
 723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Case of multimode enabled (when multimode feature is available):       */
 724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* if ADC is slave,                                                       */
 725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*    - ADC is enabled only (conversion is not started),                  */
 726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*    - if multimode only concerns regular conversion, ADC is enabled     */
 727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*     and conversion is started.                                         */
 728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* If ADC is master or independent,                                       */
 729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*    - ADC is enabled and conversion is started.                         */
 730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_SIMULT)
 734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_INTERL)
 735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****          )
 736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* ADC instance is not a multimode slave instance with multimode injected conversions enabl
 738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         if (LL_ADC_INJ_GetTrigAuto(hadc->Instance) == LL_ADC_INJ_TRIG_INDEPENDENT)
 739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         {
 740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           LL_ADC_INJ_StartConversion(hadc->Instance);
 741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         }
 742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       else
 744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* ADC instance is not a multimode slave instance with multimode injected conversions enabl
 746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #else
 749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (LL_ADC_INJ_GetTrigAuto(hadc->Instance) == LL_ADC_INJ_TRIG_INDEPENDENT)
 912              		.loc 1 749 0
 913 00bc 2168     		ldr	r1, [r4]
 914              	.LVL86:
 915              	.LBB264:
 916              	.LBB265:
4292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 917              		.loc 2 4292 0
 918 00be CA68     		ldr	r2, [r1, #12]
 919              	.LVL87:
 920              	.LBE265:
ARM GAS  /tmp/ccTvghLi.s 			page 142


 921              	.LBE264:
 922              		.loc 1 749 0
 923 00c0 12F0007F 		tst	r2, #33554432
 924 00c4 11D1     		bne	.L71
 925              	.LVL88:
 926              	.LBB266:
 927              	.LBB267:
6322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 928              		.loc 2 6322 0
 929 00c6 8A68     		ldr	r2, [r1, #8]
 930 00c8 22F00042 		bic	r2, r2, #-2147483648
 931 00cc 22F03F02 		bic	r2, r2, #63
 932 00d0 42F00802 		orr	r2, r2, #8
 933 00d4 8A60     		str	r2, [r1, #8]
 934              	.LBE267:
 935              	.LBE266:
 750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Start ADC group injected conversion */
 752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         LL_ADC_INJ_StartConversion(hadc->Instance);
 753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #endif
 755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
 758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Process unlocked */
 760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Return function status */
 764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     return tmp_hal_status;
 936              		.loc 1 764 0
 937 00d6 1846     		mov	r0, r3
 938              	.LVL89:
 939 00d8 10BD     		pop	{r4, pc}
 940              	.LVL90:
 941              	.L62:
 760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 942              		.loc 1 760 0
 943 00da 0022     		movs	r2, #0
 944 00dc 84F85020 		strb	r2, [r4, #80]
 945 00e0 10BD     		pop	{r4, pc}
 946              	.LVL91:
 947              	.L69:
 948              	.LCFI14:
 949              		.cfi_def_cfa_offset 0
 950              		.cfi_restore 4
 951              		.cfi_restore 14
 627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 952              		.loc 1 627 0
 953 00e2 0220     		movs	r0, #2
 954              	.LVL92:
 765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 955              		.loc 1 766 0
 956 00e4 7047     		bx	lr
 957              	.LVL93:
ARM GAS  /tmp/ccTvghLi.s 			page 143


 958              	.L70:
 649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 959              		.loc 1 649 0
 960 00e6 0220     		movs	r0, #2
 961              	.LVL94:
 962 00e8 7047     		bx	lr
 963              	.LVL95:
 964              	.L71:
 965              	.LCFI15:
 966              		.cfi_def_cfa_offset 8
 967              		.cfi_offset 4, -8
 968              		.cfi_offset 14, -4
 764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 969              		.loc 1 764 0
 970 00ea 1846     		mov	r0, r3
 971              	.LVL96:
 972              		.loc 1 766 0
 973 00ec 10BD     		pop	{r4, pc}
 974              		.cfi_endproc
 975              	.LFE294:
 977 00ee 00BF     		.section	.text.HAL_ADCEx_InjectedStop_IT,"ax",%progbits
 978              		.align	2
 979              		.global	HAL_ADCEx_InjectedStop_IT
 980              		.thumb
 981              		.thumb_func
 983              	HAL_ADCEx_InjectedStop_IT:
 984              	.LFB295:
 767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
 769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Stop conversion of injected channels, disable interruption of
 770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         end-of-conversion. Disable ADC peripheral if no regular conversion
 771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         is on going.
 772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   If ADC must be disabled and if conversion is on going on
 773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         regular group, function HAL_ADC_Stop must be used to stop both
 774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         injected and regular groups, and disable the ADC.
 775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   If injected group mode auto-injection is enabled,
 776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         function HAL_ADC_Stop must be used.
 777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (when multimode feature is available):
 778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADCEx_InjectedStop_IT() API must be called for ADC master first,
 779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         then for ADC slave.
 780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         For ADC master, conversion is stopped and ADC is disabled.
 781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         For ADC slave, ADC is disabled only (conversion stop of ADC master
 782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         has already stopped conversion of ADC slave).
 783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   In case of auto-injection mode, HAL_ADC_Stop() must be used.
 784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
 785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
 786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
 787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStop_IT(ADC_HandleTypeDef *hadc)
 788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 985              		.loc 1 788 0
 986              		.cfi_startproc
 987              		@ args = 0, pretend = 0, frame = 0
 988              		@ frame_needed = 0, uses_anonymous_args = 0
 989              	.LVL97:
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
ARM GAS  /tmp/ccTvghLi.s 			page 144


 792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
 795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 990              		.loc 1 795 0
 991 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 992 0004 012B     		cmp	r3, #1
 993 0006 2CD0     		beq	.L80
 788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 994              		.loc 1 788 0 discriminator 2
 995 0008 10B5     		push	{r4, lr}
 996              	.LCFI16:
 997              		.cfi_def_cfa_offset 8
 998              		.cfi_offset 4, -8
 999              		.cfi_offset 14, -4
 1000 000a 0446     		mov	r4, r0
 1001              		.loc 1 795 0 discriminator 2
 1002 000c 0123     		movs	r3, #1
 1003 000e 80F85030 		strb	r3, [r0, #80]
 796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* 1. Stop potential conversion on going on injected group only. */
 798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_INJECTED_GROUP);
 1004              		.loc 1 798 0 discriminator 2
 1005 0012 0221     		movs	r1, #2
 1006 0014 FFF7FEFF 		bl	ADC_ConversionStop
 1007              	.LVL98:
 799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Disable ADC peripheral if injected conversions are effectively stopped   */
 801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* and if no conversion on the other group (regular group) is intended to   */
 802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* continue.                                                                */
 803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 1008              		.loc 1 803 0 discriminator 2
 1009 0018 0346     		mov	r3, r0
 1010 001a E8B9     		cbnz	r0, .L77
 804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Disable ADC end of conversion interrupt for injected channels */
 806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_JEOC | ADC_IT_JEOS | ADC_FLAG_JQOVF));
 1011              		.loc 1 806 0
 1012 001c 2168     		ldr	r1, [r4]
 1013 001e 4A68     		ldr	r2, [r1, #4]
 1014 0020 22F48C62 		bic	r2, r2, #1120
 1015 0024 4A60     		str	r2, [r1, #4]
 807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 1016              		.loc 1 808 0
 1017 0026 2268     		ldr	r2, [r4]
 1018              	.LVL99:
 1019              	.LBB268:
 1020              	.LBB269:
6172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1021              		.loc 2 6172 0
 1022 0028 9268     		ldr	r2, [r2, #8]
 1023              	.LVL100:
 1024 002a 12F00402 		ands	r2, r2, #4
 1025 002e 00D0     		beq	.L78
 1026 0030 0122     		movs	r2, #1
 1027              	.L78:
ARM GAS  /tmp/ccTvghLi.s 			page 145


 1028              	.LVL101:
 1029              	.LBE269:
 1030              	.LBE268:
 1031              		.loc 1 808 0
 1032 0032 6AB9     		cbnz	r2, .L79
 809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* 2. Disable the ADC peripheral */
 811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Disable(hadc);
 1033              		.loc 1 811 0
 1034 0034 2046     		mov	r0, r4
 1035              	.LVL102:
 1036 0036 FFF7FEFF 		bl	ADC_Disable
 1037              	.LVL103:
 812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Check if ADC is effectively disabled */
 814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
 1038              		.loc 1 814 0
 1039 003a 0346     		mov	r3, r0
 1040 003c 60B9     		cbnz	r0, .L77
 815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Set ADC state */
 817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
 1041              		.loc 1 817 0
 1042 003e 626D     		ldr	r2, [r4, #84]
 1043 0040 22F48852 		bic	r2, r2, #4352
 1044 0044 22F00102 		bic	r2, r2, #1
 1045 0048 42F00102 		orr	r2, r2, #1
 1046 004c 6265     		str	r2, [r4, #84]
 1047 004e 03E0     		b	.L77
 1048              	.L79:
 818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
 820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Conversion on injected group is stopped, but ADC not disabled since    */
 823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* conversion on regular group is still running.                          */
 824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
 825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set ADC state */
 827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 1049              		.loc 1 827 0
 1050 0050 626D     		ldr	r2, [r4, #84]
 1051 0052 22F48052 		bic	r2, r2, #4096
 1052 0056 6265     		str	r2, [r4, #84]
 1053              	.L77:
 1054              	.LVL104:
 828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
 832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 1055              		.loc 1 832 0
 1056 0058 0022     		movs	r2, #0
 1057 005a 84F85020 		strb	r2, [r4, #80]
 833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
 835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
ARM GAS  /tmp/ccTvghLi.s 			page 146


 1058              		.loc 1 835 0
 1059 005e 1846     		mov	r0, r3
 1060 0060 10BD     		pop	{r4, pc}
 1061              	.LVL105:
 1062              	.L80:
 1063              	.LCFI17:
 1064              		.cfi_def_cfa_offset 0
 1065              		.cfi_restore 4
 1066              		.cfi_restore 14
 795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 1067              		.loc 1 795 0
 1068 0062 0220     		movs	r0, #2
 1069              	.LVL106:
 1070 0064 7047     		bx	lr
 1071              		.cfi_endproc
 1072              	.LFE295:
 1074 0066 00BF     		.section	.text.HAL_ADCEx_InjectedGetValue,"ax",%progbits
 1075              		.align	2
 1076              		.global	HAL_ADCEx_InjectedGetValue
 1077              		.thumb
 1078              		.thumb_func
 1080              	HAL_ADCEx_InjectedGetValue:
 1081              	.LFB296:
 836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
 840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Enable ADC, start MultiMode conversion and transfer regular results through DMA.
 841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Multimode must have been previously configured using
 842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADCEx_MultiModeConfigChannel() function.
 843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         Interruptions enabled in this function:
 844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *          overrun, DMA half transfer, DMA transfer complete.
 845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         Each of these interruptions has its dedicated callback function.
 846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   State field of Slave ADC handle is not updated in this configuration:
 847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *          user should not rely on it for information related to Slave regular
 848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         conversions.
 849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle of ADC master (handle of ADC slave must not be used)
 850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param pData Destination Buffer address.
 851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param Length Length of data to be transferred from ADC peripheral to memory (in bytes).
 852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
 853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
 854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeStart_DMA(ADC_HandleTypeDef *hadc, uint32_t *pData, uint32_t L
 855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSlave;
 858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
 861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
 862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) != 0UL)
 867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     return HAL_BUSY;
 869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
ARM GAS  /tmp/ccTvghLi.s 			page 147


 870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
 871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Process locked */
 873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     __HAL_LOCK(hadc);
 874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Temporary handle minimum initialization */
 876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     __HAL_ADC_RESET_HANDLE_STATE(&tmphadcSlave);
 877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     ADC_CLEAR_ERRORCODE(&tmphadcSlave);
 878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Set a temporary handle of the ADC slave associated to the ADC master   */
 880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
 881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (tmphadcSlave.Instance == NULL)
 883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set ADC state */
 885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Process unlocked */
 888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       return HAL_ERROR;
 891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Enable the ADC peripherals: master and slave (in case if not already   */
 894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* enabled previously)                                                    */
 895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(hadc);
 896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Enable(&tmphadcSlave);
 899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Start multimode conversion of ADCs pair */
 902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set ADC state */
 905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                         (HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_
 907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY);
 908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set ADC error code to none */
 910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
 911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set the DMA transfer complete callback */
 913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
 914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set the DMA half transfer complete callback */
 916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
 917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set the DMA error callback */
 919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       hadc->DMA_Handle->XferErrorCallback = ADC_DMAError ;
 920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Pointer to the common control register  */
 922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmpADC_Common = __LL_ADC_COMMON_INSTANCE(hadc->Instance);
 923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC     */
 925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* start (in case of SW start):                                           */
 926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
ARM GAS  /tmp/ccTvghLi.s 			page 148


 927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Clear regular group conversion flag and overrun flag */
 928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
 929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
 930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Process unlocked */
 932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Unlock before starting ADC conversions: in case of potential         */
 933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
 934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Enable ADC overrun interrupt */
 937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
 938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Start the DMA channel */
 940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmp_hal_status = HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&tmpADC_Common->CDR, (uint32_t)
 941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Enable conversion of regular group.                                    */
 943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.    */
 944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* If external trigger has been selected, conversion will start at next   */
 945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* trigger event.                                                         */
 946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Start ADC group regular conversion */
 947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
 948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
 950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Process unlocked */
 952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Return function status */
 956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     return tmp_hal_status;
 957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
 961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Stop multimode ADC conversion, disable ADC DMA transfer, disable ADC peripheral.
 962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Multimode is kept enabled after this function. MultiMode DMA bits
 963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         (MDMA and DMACFG bits of common CCR register) are maintained. To disable
 964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         Multimode (set with HAL_ADCEx_MultiModeConfigChannel()), ADC must be
 965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         reinitialized using HAL_ADC_Init() or HAL_ADC_DeInit(), or the user can
 966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         resort to HAL_ADCEx_DisableMultiMode() API.
 967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   In case of DMA configured in circular mode, function
 968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADC_Stop_DMA() must be called after this function with handle of
 969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         ADC slave, to properly disable the DMA channel.
 970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle of ADC master (handle of ADC slave must not be used)
 971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
 972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
 973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeStop_DMA(ADC_HandleTypeDef *hadc)
 974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tickstart;
 977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSlave;
 978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmphadcSlave_conversion_on_going;
 979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmphadcSlave_disable_status;
 980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
 982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
 983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
ARM GAS  /tmp/ccTvghLi.s 			page 149


 984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
 985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* 1. Stop potential multimode conversion on going, on regular and injected groups */
 989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
 990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
 992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Temporary handle minimum initialization */
 995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     __HAL_ADC_RESET_HANDLE_STATE(&tmphadcSlave);
 996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     ADC_CLEAR_ERRORCODE(&tmphadcSlave);
 997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Set a temporary handle of the ADC slave associated to the ADC master   */
 999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
1000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (tmphadcSlave.Instance == NULL)
1002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Process unlocked */
1007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
1008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       return HAL_ERROR;
1010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Procedure to disable the ADC peripheral: wait for conversions          */
1013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* effectively stopped (ADC master and ADC slave), then disable ADC       */
1014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* 1. Wait for ADC conversion completion for ADC master and ADC slave */
1016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();
1017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmphadcSlave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmphadcSlave)->Instance);
1019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     while ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
1020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****            || (tmphadcSlave_conversion_on_going == 1UL)
1021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           )
1022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if ((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
1024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* New check to avoid false timeout detection in case of preemption */
1026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         tmphadcSlave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmphadcSlave)->Instance
1027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         if ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
1028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****             || (tmphadcSlave_conversion_on_going == 1UL)
1029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****            )
1030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         {
1031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           /* Update ADC state machine to error */
1032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
1033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           /* Process unlocked */
1035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
1036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           return HAL_ERROR;
1038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         }
1039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
ARM GAS  /tmp/ccTvghLi.s 			page 150


1041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmphadcSlave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmphadcSlave)->Instance);
1042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop       */
1045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
1046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Note: DMA channel of ADC slave should be stopped after this function   */
1047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /*       with HAL_ADC_Stop_DMA() API.                                     */
1048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
1049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Check if DMA channel effectively disabled */
1051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_ERROR)
1052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
1055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
1058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
1059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripherals: master and slave */
1061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed, to keep in */
1062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* memory a potential failing status.                                     */
1063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
1064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmphadcSlave_disable_status = ADC_Disable(&tmphadcSlave);
1066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if ((ADC_Disable(hadc) == HAL_OK)           &&
1067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           (tmphadcSlave_disable_status == HAL_OK))
1068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         tmp_hal_status = HAL_OK;
1070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
1073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* In case of error, attempt to disable ADC master and slave without status assert */
1075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (void) ADC_Disable(hadc);
1076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (void) ADC_Disable(&tmphadcSlave);
1077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Set ADC state (ADC master) */
1080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
1081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY);
1083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
1084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
1086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
1087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
1089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
1090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
1091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
1093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Return the last ADC Master and Slave regular conversions results when in multimode conf
1094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle of ADC Master (handle of ADC Slave must not be used)
1095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval The converted data values.
1096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_MultiModeGetValue(ADC_HandleTypeDef *hadc)
ARM GAS  /tmp/ccTvghLi.s 			page 151


1098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
1099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   const ADC_Common_TypeDef *tmpADC_Common;
1100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
1102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
1103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning if no assert_param check */
1105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* and possible no usage in __LL_ADC_COMMON_INSTANCE() below               */
1106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   UNUSED(hadc);
1107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Pointer to the common control register  */
1109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmpADC_Common = __LL_ADC_COMMON_INSTANCE(hadc->Instance);
1110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return the multi mode conversion value */
1112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmpADC_Common->CDR;
1113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
1114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #endif /* ADC_MULTIMODE_SUPPORT */
1115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
1117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Get ADC injected group conversion result.
1118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Reading register JDRx automatically clears ADC flag JEOC
1119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         (ADC group injected end of unitary conversion).
1120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   This function does not clear ADC flag JEOS
1121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         (ADC group injected end of sequence conversion)
1122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         Occurrence of flag JEOS rising:
1123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *          - If sequencer is composed of 1 rank, flag JEOS is equivalent
1124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *            to flag JEOC.
1125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *          - If sequencer is composed of several ranks, during the scan
1126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *            sequence flag JEOC only is raised, at the end of the scan sequence
1127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *            both flags JEOC and EOS are raised.
1128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         Flag JEOS must not be cleared by this function because
1129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         it would not be compliant with low power features
1130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         (feature low power auto-wait, not available on all STM32 families).
1131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         To clear this flag, either use function:
1132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
1133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         model polling: @ref HAL_ADCEx_InjectedPollForConversion()
1134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_JEOS).
1135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
1136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param InjectedRank the converted ADC injected rank.
1137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
1138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *            @arg @ref ADC_INJECTED_RANK_1 ADC group injected rank 1
1139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *            @arg @ref ADC_INJECTED_RANK_2 ADC group injected rank 2
1140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *            @arg @ref ADC_INJECTED_RANK_3 ADC group injected rank 3
1141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *            @arg @ref ADC_INJECTED_RANK_4 ADC group injected rank 4
1142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval ADC group injected conversion data
1143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_InjectedGetValue(ADC_HandleTypeDef *hadc, uint32_t InjectedRank)
1145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 1082              		.loc 1 1145 0
 1083              		.cfi_startproc
 1084              		@ args = 0, pretend = 0, frame = 0
 1085              		@ frame_needed = 0, uses_anonymous_args = 0
 1086              		@ link register save eliminated.
 1087              	.LVL107:
1146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_jdr;
1147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
ARM GAS  /tmp/ccTvghLi.s 			page 152


1149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_INJECTED_RANK(InjectedRank));
1151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Get ADC converted value */
1153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   switch (InjectedRank)
 1088              		.loc 1 1153 0
 1089 0000 B1F5057F 		cmp	r1, #532
 1090 0004 0BD0     		beq	.L85
 1091 0006 40F21A33 		movw	r3, #794
 1092 000a 9942     		cmp	r1, r3
 1093 000c 03D0     		beq	.L86
 1094 000e B1F5877F 		cmp	r1, #270
 1095 0012 0CD1     		bne	.L89
 1096 0014 07E0     		b	.L87
 1097              	.L86:
1154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
1155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_4:
1156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR4;
 1098              		.loc 1 1156 0
 1099 0016 0368     		ldr	r3, [r0]
 1100 0018 D3F88C00 		ldr	r0, [r3, #140]
 1101              	.LVL108:
1157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       break;
 1102              		.loc 1 1157 0
 1103 001c 7047     		bx	lr
 1104              	.LVL109:
 1105              	.L85:
1158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_3:
1159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR3;
 1106              		.loc 1 1159 0
 1107 001e 0368     		ldr	r3, [r0]
 1108 0020 D3F88800 		ldr	r0, [r3, #136]
 1109              	.LVL110:
1160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       break;
 1110              		.loc 1 1160 0
 1111 0024 7047     		bx	lr
 1112              	.LVL111:
 1113              	.L87:
1161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_2:
1162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR2;
 1114              		.loc 1 1162 0
 1115 0026 0368     		ldr	r3, [r0]
 1116 0028 D3F88400 		ldr	r0, [r3, #132]
 1117              	.LVL112:
1163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       break;
 1118              		.loc 1 1163 0
 1119 002c 7047     		bx	lr
 1120              	.LVL113:
 1121              	.L89:
1164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_1:
1165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     default:
1166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR1;
 1122              		.loc 1 1166 0
 1123 002e 0368     		ldr	r3, [r0]
 1124 0030 D3F88000 		ldr	r0, [r3, #128]
 1125              	.LVL114:
1167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       break;
ARM GAS  /tmp/ccTvghLi.s 			page 153


1168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
1169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return ADC converted value */
1171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_jdr;
1172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 1126              		.loc 1 1172 0
 1127 0034 7047     		bx	lr
 1128              		.cfi_endproc
 1129              	.LFE296:
 1131 0036 00BF     		.section	.text.HAL_ADCEx_InjectedConvCpltCallback,"ax",%progbits
 1132              		.align	2
 1133              		.weak	HAL_ADCEx_InjectedConvCpltCallback
 1134              		.thumb
 1135              		.thumb_func
 1137              	HAL_ADCEx_InjectedConvCpltCallback:
 1138              	.LFB297:
1173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
1175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Injected conversion complete callback in non-blocking mode.
1176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
1177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval None
1178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** __weak void HAL_ADCEx_InjectedConvCpltCallback(ADC_HandleTypeDef *hadc)
1180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 1139              		.loc 1 1180 0
 1140              		.cfi_startproc
 1141              		@ args = 0, pretend = 0, frame = 0
 1142              		@ frame_needed = 0, uses_anonymous_args = 0
 1143              		@ link register save eliminated.
 1144              	.LVL115:
 1145 0000 7047     		bx	lr
 1146              		.cfi_endproc
 1147              	.LFE297:
 1149 0002 00BF     		.section	.text.HAL_ADCEx_InjectedQueueOverflowCallback,"ax",%progbits
 1150              		.align	2
 1151              		.weak	HAL_ADCEx_InjectedQueueOverflowCallback
 1152              		.thumb
 1153              		.thumb_func
 1155              	HAL_ADCEx_InjectedQueueOverflowCallback:
 1156              	.LFB298:
1181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   UNUSED(hadc);
1183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****             function HAL_ADCEx_InjectedConvCpltCallback must be implemented in the user file.
1186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
1188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
1190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Injected context queue overflow callback.
1191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   This callback is called if injected context queue is enabled
1192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****             (parameter "QueueInjectedContext" in injected channel configuration)
1193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****             and if a new injected context is set when queue is full (maximum 2
1194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****             contexts).
1195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
1196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval None
1197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
ARM GAS  /tmp/ccTvghLi.s 			page 154


1198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** __weak void HAL_ADCEx_InjectedQueueOverflowCallback(ADC_HandleTypeDef *hadc)
1199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 1157              		.loc 1 1199 0
 1158              		.cfi_startproc
 1159              		@ args = 0, pretend = 0, frame = 0
 1160              		@ frame_needed = 0, uses_anonymous_args = 0
 1161              		@ link register save eliminated.
 1162              	.LVL116:
 1163 0000 7047     		bx	lr
 1164              		.cfi_endproc
 1165              	.LFE298:
 1167 0002 00BF     		.section	.text.HAL_ADCEx_LevelOutOfWindow2Callback,"ax",%progbits
 1168              		.align	2
 1169              		.weak	HAL_ADCEx_LevelOutOfWindow2Callback
 1170              		.thumb
 1171              		.thumb_func
 1173              	HAL_ADCEx_LevelOutOfWindow2Callback:
 1174              	.LFB299:
1200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   UNUSED(hadc);
1202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****             function HAL_ADCEx_InjectedQueueOverflowCallback must be implemented in the user file.
1205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
1207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
1209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Analog watchdog 2 callback in non-blocking mode.
1210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
1211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval None
1212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** __weak void HAL_ADCEx_LevelOutOfWindow2Callback(ADC_HandleTypeDef *hadc)
1214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 1175              		.loc 1 1214 0
 1176              		.cfi_startproc
 1177              		@ args = 0, pretend = 0, frame = 0
 1178              		@ frame_needed = 0, uses_anonymous_args = 0
 1179              		@ link register save eliminated.
 1180              	.LVL117:
 1181 0000 7047     		bx	lr
 1182              		.cfi_endproc
 1183              	.LFE299:
 1185 0002 00BF     		.section	.text.HAL_ADCEx_LevelOutOfWindow3Callback,"ax",%progbits
 1186              		.align	2
 1187              		.weak	HAL_ADCEx_LevelOutOfWindow3Callback
 1188              		.thumb
 1189              		.thumb_func
 1191              	HAL_ADCEx_LevelOutOfWindow3Callback:
 1192              	.LFB300:
1215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   UNUSED(hadc);
1217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****             function HAL_ADCEx_LevelOutOfWindow2Callback must be implemented in the user file.
1220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
1222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
ARM GAS  /tmp/ccTvghLi.s 			page 155


1223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
1224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Analog watchdog 3 callback in non-blocking mode.
1225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
1226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval None
1227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** __weak void HAL_ADCEx_LevelOutOfWindow3Callback(ADC_HandleTypeDef *hadc)
1229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 1193              		.loc 1 1229 0
 1194              		.cfi_startproc
 1195              		@ args = 0, pretend = 0, frame = 0
 1196              		@ frame_needed = 0, uses_anonymous_args = 0
 1197              		@ link register save eliminated.
 1198              	.LVL118:
 1199 0000 7047     		bx	lr
 1200              		.cfi_endproc
 1201              	.LFE300:
 1203 0002 00BF     		.section	.text.HAL_ADCEx_EndOfSamplingCallback,"ax",%progbits
 1204              		.align	2
 1205              		.weak	HAL_ADCEx_EndOfSamplingCallback
 1206              		.thumb
 1207              		.thumb_func
 1209              	HAL_ADCEx_EndOfSamplingCallback:
 1210              	.LFB301:
1230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   UNUSED(hadc);
1232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****             function HAL_ADCEx_LevelOutOfWindow3Callback must be implemented in the user file.
1235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
1237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
1240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  End Of Sampling callback in non-blocking mode.
1241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
1242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval None
1243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** __weak void HAL_ADCEx_EndOfSamplingCallback(ADC_HandleTypeDef *hadc)
1245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 1211              		.loc 1 1245 0
 1212              		.cfi_startproc
 1213              		@ args = 0, pretend = 0, frame = 0
 1214              		@ frame_needed = 0, uses_anonymous_args = 0
 1215              		@ link register save eliminated.
 1216              	.LVL119:
 1217 0000 7047     		bx	lr
 1218              		.cfi_endproc
 1219              	.LFE301:
 1221 0002 00BF     		.section	.text.HAL_ADCEx_RegularStop,"ax",%progbits
 1222              		.align	2
 1223              		.global	HAL_ADCEx_RegularStop
 1224              		.thumb
 1225              		.thumb_func
 1227              	HAL_ADCEx_RegularStop:
 1228              	.LFB302:
1246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   UNUSED(hadc);
ARM GAS  /tmp/ccTvghLi.s 			page 156


1248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****             function HAL_ADCEx_EndOfSamplingCallback must be implemented in the user file.
1251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
1253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
1255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of regular group (and injected channels in
1256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         case of auto_injection mode), disable ADC peripheral if no
1257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         conversion is on going on injected group.
1258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
1259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status.
1260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularStop(ADC_HandleTypeDef *hadc)
1262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 1229              		.loc 1 1262 0
 1230              		.cfi_startproc
 1231              		@ args = 0, pretend = 0, frame = 0
 1232              		@ frame_needed = 0, uses_anonymous_args = 0
 1233              	.LVL120:
1263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
1264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
1266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
1269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1234              		.loc 1 1269 0
 1235 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 1236 0004 012B     		cmp	r3, #1
 1237 0006 2AD0     		beq	.L100
1262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 1238              		.loc 1 1262 0 discriminator 2
 1239 0008 10B5     		push	{r4, lr}
 1240              	.LCFI18:
 1241              		.cfi_def_cfa_offset 8
 1242              		.cfi_offset 4, -8
 1243              		.cfi_offset 14, -4
 1244 000a 0446     		mov	r4, r0
 1245              		.loc 1 1269 0 discriminator 2
 1246 000c 0121     		movs	r1, #1
 1247 000e 80F85010 		strb	r1, [r0, #80]
1270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* 1. Stop potential regular conversion on going */
1272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
 1248              		.loc 1 1272 0 discriminator 2
 1249 0012 FFF7FEFF 		bl	ADC_ConversionStop
 1250              	.LVL121:
1273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Disable ADC peripheral if regular conversions are effectively stopped
1275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****      and if no injected conversions are on-going */
1276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 1251              		.loc 1 1276 0 discriminator 2
 1252 0016 0346     		mov	r3, r0
 1253 0018 E0B9     		cbnz	r0, .L97
1277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
1278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Clear HAL_ADC_STATE_REG_BUSY bit */
ARM GAS  /tmp/ccTvghLi.s 			page 157


1279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 1254              		.loc 1 1279 0
 1255 001a 626D     		ldr	r2, [r4, #84]
 1256 001c 22F48072 		bic	r2, r2, #256
 1257 0020 6265     		str	r2, [r4, #84]
1280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
 1258              		.loc 1 1281 0
 1259 0022 2268     		ldr	r2, [r4]
 1260              	.LVL122:
 1261              	.LBB270:
 1262              	.LBB271:
 1263              		.loc 2 6355 0
 1264 0024 9268     		ldr	r2, [r2, #8]
 1265              	.LVL123:
 1266 0026 12F00802 		ands	r2, r2, #8
 1267 002a 00D0     		beq	.L98
 1268 002c 0122     		movs	r2, #1
 1269              	.L98:
 1270              	.LVL124:
 1271              	.LBE271:
 1272              	.LBE270:
 1273              		.loc 1 1281 0
 1274 002e 6AB9     		cbnz	r2, .L99
1282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* 2. Disable the ADC peripheral */
1284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Disable(hadc);
 1275              		.loc 1 1284 0
 1276 0030 2046     		mov	r0, r4
 1277              	.LVL125:
 1278 0032 FFF7FEFF 		bl	ADC_Disable
 1279              	.LVL126:
1285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Check if ADC is effectively disabled */
1287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
 1280              		.loc 1 1287 0
 1281 0036 0346     		mov	r3, r0
 1282 0038 60B9     		cbnz	r0, .L97
1288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Set ADC state */
1290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
 1283              		.loc 1 1290 0
 1284 003a 626D     		ldr	r2, [r4, #84]
 1285 003c 22F48052 		bic	r2, r2, #4096
 1286 0040 22F00102 		bic	r2, r2, #1
 1287 0044 42F00102 		orr	r2, r2, #1
 1288 0048 6265     		str	r2, [r4, #84]
 1289 004a 03E0     		b	.L97
 1290              	.L99:
1291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
1292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
1293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Conversion on injected group is stopped, but ADC not disabled since    */
1296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* conversion on regular group is still running.                          */
1297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
1298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
ARM GAS  /tmp/ccTvghLi.s 			page 158


1299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 1291              		.loc 1 1299 0
 1292 004c 626D     		ldr	r2, [r4, #84]
 1293 004e 42F48052 		orr	r2, r2, #4096
 1294 0052 6265     		str	r2, [r4, #84]
 1295              	.L97:
 1296              	.LVL127:
1300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
1302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
1304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 1297              		.loc 1 1304 0
 1298 0054 0022     		movs	r2, #0
 1299 0056 84F85020 		strb	r2, [r4, #80]
1305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
1307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
 1300              		.loc 1 1307 0
 1301 005a 1846     		mov	r0, r3
 1302 005c 10BD     		pop	{r4, pc}
 1303              	.LVL128:
 1304              	.L100:
 1305              	.LCFI19:
 1306              		.cfi_def_cfa_offset 0
 1307              		.cfi_restore 4
 1308              		.cfi_restore 14
1269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 1309              		.loc 1 1269 0
 1310 005e 0220     		movs	r0, #2
 1311              	.LVL129:
 1312 0060 7047     		bx	lr
 1313              		.cfi_endproc
 1314              	.LFE302:
 1316 0062 00BF     		.section	.text.HAL_ADCEx_RegularStop_IT,"ax",%progbits
 1317              		.align	2
 1318              		.global	HAL_ADCEx_RegularStop_IT
 1319              		.thumb
 1320              		.thumb_func
 1322              	HAL_ADCEx_RegularStop_IT:
 1323              	.LFB303:
1308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
1309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
1312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of ADC groups regular and injected,
1313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         disable interrution of end-of-conversion,
1314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         disable ADC peripheral if no conversion is on going
1315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         on injected group.
1316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
1317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status.
1318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularStop_IT(ADC_HandleTypeDef *hadc)
1320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 1324              		.loc 1 1320 0
 1325              		.cfi_startproc
 1326              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccTvghLi.s 			page 159


 1327              		@ frame_needed = 0, uses_anonymous_args = 0
 1328              	.LVL130:
1321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
1322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
1324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
1327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1329              		.loc 1 1327 0
 1330 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 1331 0004 012B     		cmp	r3, #1
 1332 0006 2FD0     		beq	.L108
1320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 1333              		.loc 1 1320 0 discriminator 2
 1334 0008 10B5     		push	{r4, lr}
 1335              	.LCFI20:
 1336              		.cfi_def_cfa_offset 8
 1337              		.cfi_offset 4, -8
 1338              		.cfi_offset 14, -4
 1339 000a 0446     		mov	r4, r0
 1340              		.loc 1 1327 0 discriminator 2
 1341 000c 0121     		movs	r1, #1
 1342 000e 80F85010 		strb	r1, [r0, #80]
1328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* 1. Stop potential regular conversion on going */
1330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
 1343              		.loc 1 1330 0 discriminator 2
 1344 0012 FFF7FEFF 		bl	ADC_ConversionStop
 1345              	.LVL131:
1331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped
1333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     and if no injected conversion is on-going */
1334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 1346              		.loc 1 1334 0 discriminator 2
 1347 0016 0346     		mov	r3, r0
 1348 0018 08BB     		cbnz	r0, .L105
1335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
1336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Clear HAL_ADC_STATE_REG_BUSY bit */
1337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 1349              		.loc 1 1337 0
 1350 001a 626D     		ldr	r2, [r4, #84]
 1351 001c 22F48072 		bic	r2, r2, #256
 1352 0020 6265     		str	r2, [r4, #84]
1338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Disable all regular-related interrupts */
1340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
 1353              		.loc 1 1340 0
 1354 0022 2168     		ldr	r1, [r4]
 1355 0024 4A68     		ldr	r2, [r1, #4]
 1356 0026 22F01C02 		bic	r2, r2, #28
 1357 002a 4A60     		str	r2, [r1, #4]
1341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* 2. Disable ADC peripheral if no injected conversions are on-going */
1343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
 1358              		.loc 1 1343 0
 1359 002c 2268     		ldr	r2, [r4]
ARM GAS  /tmp/ccTvghLi.s 			page 160


 1360              	.LVL132:
 1361              	.LBB272:
 1362              	.LBB273:
 1363              		.loc 2 6355 0
 1364 002e 9268     		ldr	r2, [r2, #8]
 1365              	.LVL133:
 1366 0030 12F00802 		ands	r2, r2, #8
 1367 0034 00D0     		beq	.L106
 1368 0036 0122     		movs	r2, #1
 1369              	.L106:
 1370              	.LVL134:
 1371              	.LBE273:
 1372              	.LBE272:
 1373              		.loc 1 1343 0
 1374 0038 6AB9     		cbnz	r2, .L107
1344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Disable(hadc);
 1375              		.loc 1 1345 0
 1376 003a 2046     		mov	r0, r4
 1377              	.LVL135:
 1378 003c FFF7FEFF 		bl	ADC_Disable
 1379              	.LVL136:
1346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* if no issue reported */
1347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
 1380              		.loc 1 1347 0
 1381 0040 0346     		mov	r3, r0
 1382 0042 60B9     		cbnz	r0, .L105
1348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Set ADC state */
1350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
 1383              		.loc 1 1350 0
 1384 0044 626D     		ldr	r2, [r4, #84]
 1385 0046 22F48052 		bic	r2, r2, #4096
 1386 004a 22F00102 		bic	r2, r2, #1
 1387 004e 42F00102 		orr	r2, r2, #1
 1388 0052 6265     		str	r2, [r4, #84]
 1389 0054 03E0     		b	.L105
 1390              	.L107:
1351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
1352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
1353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
1356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 1391              		.loc 1 1357 0
 1392 0056 626D     		ldr	r2, [r4, #84]
 1393 0058 42F48052 		orr	r2, r2, #4096
 1394 005c 6265     		str	r2, [r4, #84]
 1395              	.L105:
 1396              	.LVL137:
1358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
1360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
1362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 1397              		.loc 1 1362 0
ARM GAS  /tmp/ccTvghLi.s 			page 161


 1398 005e 0022     		movs	r2, #0
 1399 0060 84F85020 		strb	r2, [r4, #80]
1363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
1365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
 1400              		.loc 1 1365 0
 1401 0064 1846     		mov	r0, r3
 1402 0066 10BD     		pop	{r4, pc}
 1403              	.LVL138:
 1404              	.L108:
 1405              	.LCFI21:
 1406              		.cfi_def_cfa_offset 0
 1407              		.cfi_restore 4
 1408              		.cfi_restore 14
1327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 1409              		.loc 1 1327 0
 1410 0068 0220     		movs	r0, #2
 1411              	.LVL139:
 1412 006a 7047     		bx	lr
 1413              		.cfi_endproc
 1414              	.LFE303:
 1416              		.section	.text.HAL_ADCEx_RegularStop_DMA,"ax",%progbits
 1417              		.align	2
 1418              		.global	HAL_ADCEx_RegularStop_DMA
 1419              		.thumb
 1420              		.thumb_func
 1422              	HAL_ADCEx_RegularStop_DMA:
 1423              	.LFB304:
1366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
1367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
1369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
1370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable
1371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         ADC peripheral if no conversion is on going
1372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         on injected group.
1373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   HAL_ADCEx_RegularStop_DMA() function is dedicated to single-ADC mode only.
1374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         For multimode (when multimode feature is available),
1375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADCEx_RegularMultiModeStop_DMA() API must be used.
1376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
1377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status.
1378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularStop_DMA(ADC_HandleTypeDef *hadc)
1380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 1424              		.loc 1 1380 0
 1425              		.cfi_startproc
 1426              		@ args = 0, pretend = 0, frame = 0
 1427              		@ frame_needed = 0, uses_anonymous_args = 0
 1428              	.LVL140:
 1429 0000 38B5     		push	{r3, r4, r5, lr}
 1430              	.LCFI22:
 1431              		.cfi_def_cfa_offset 16
 1432              		.cfi_offset 3, -16
 1433              		.cfi_offset 4, -12
 1434              		.cfi_offset 5, -8
 1435              		.cfi_offset 14, -4
1381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
1382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
ARM GAS  /tmp/ccTvghLi.s 			page 162


1383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
1384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
1387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1436              		.loc 1 1387 0
 1437 0002 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 1438 0006 012B     		cmp	r3, #1
 1439 0008 42D0     		beq	.L119
 1440 000a 0546     		mov	r5, r0
 1441              		.loc 1 1387 0 is_stmt 0 discriminator 2
 1442 000c 0121     		movs	r1, #1
 1443 000e 80F85010 		strb	r1, [r0, #80]
1388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* 1. Stop potential regular conversion on going */
1390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
 1444              		.loc 1 1390 0 is_stmt 1 discriminator 2
 1445 0012 FFF7FEFF 		bl	ADC_ConversionStop
 1446              	.LVL141:
1391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped
1393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****      and if no injected conversion is on-going */
1394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 1447              		.loc 1 1394 0 discriminator 2
 1448 0016 0446     		mov	r4, r0
 1449 0018 0028     		cmp	r0, #0
 1450 001a 34D1     		bne	.L113
1395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
1396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Clear HAL_ADC_STATE_REG_BUSY bit */
1397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 1451              		.loc 1 1397 0
 1452 001c 6B6D     		ldr	r3, [r5, #84]
 1453 001e 23F48073 		bic	r3, r3, #256
 1454 0022 6B65     		str	r3, [r5, #84]
1398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Disable ADC DMA (ADC DMA configuration ADC_CFGR_DMACFG is kept) */
1400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN);
 1455              		.loc 1 1400 0
 1456 0024 2A68     		ldr	r2, [r5]
 1457 0026 D368     		ldr	r3, [r2, #12]
 1458 0028 23F00103 		bic	r3, r3, #1
 1459 002c D360     		str	r3, [r2, #12]
1401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
1403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
1404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
 1460              		.loc 1 1404 0
 1461 002e E86C     		ldr	r0, [r5, #76]
 1462              	.LVL142:
 1463 0030 FFF7FEFF 		bl	HAL_DMA_Abort
 1464              	.LVL143:
1405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Check if DMA channel effectively disabled */
1407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (tmp_hal_status != HAL_OK)
 1465              		.loc 1 1407 0
 1466 0034 0446     		mov	r4, r0
 1467 0036 18B1     		cbz	r0, .L114
ARM GAS  /tmp/ccTvghLi.s 			page 163


1408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 1468              		.loc 1 1410 0
 1469 0038 6B6D     		ldr	r3, [r5, #84]
 1470 003a 43F04003 		orr	r3, r3, #64
 1471 003e 6B65     		str	r3, [r5, #84]
 1472              	.L114:
1411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
1414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
 1473              		.loc 1 1414 0
 1474 0040 2A68     		ldr	r2, [r5]
 1475 0042 5368     		ldr	r3, [r2, #4]
 1476 0044 23F01003 		bic	r3, r3, #16
 1477 0048 5360     		str	r3, [r2, #4]
1415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripheral */
1417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed,          */
1418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* to keep in memory a potential failing status.                          */
1419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
 1478              		.loc 1 1419 0
 1479 004a 2B68     		ldr	r3, [r5]
 1480              	.LVL144:
 1481              	.LBB274:
 1482              	.LBB275:
 1483              		.loc 2 6355 0
 1484 004c 9B68     		ldr	r3, [r3, #8]
 1485              	.LVL145:
 1486 004e 13F00803 		ands	r3, r3, #8
 1487 0052 00D0     		beq	.L115
 1488 0054 0123     		movs	r3, #1
 1489              	.L115:
 1490              	.LVL146:
 1491              	.LBE275:
 1492              	.LBE274:
 1493              		.loc 1 1419 0
 1494 0056 93B9     		cbnz	r3, .L116
1420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
 1495              		.loc 1 1421 0
 1496 0058 24B9     		cbnz	r4, .L117
1422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         tmp_hal_status = ADC_Disable(hadc);
 1497              		.loc 1 1423 0
 1498 005a 2846     		mov	r0, r5
 1499              	.LVL147:
 1500 005c FFF7FEFF 		bl	ADC_Disable
 1501              	.LVL148:
 1502 0060 0446     		mov	r4, r0
 1503              	.LVL149:
 1504 0062 02E0     		b	.L118
 1505              	.LVL150:
 1506              	.L117:
1424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       else
ARM GAS  /tmp/ccTvghLi.s 			page 164


1426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         (void)ADC_Disable(hadc);
 1507              		.loc 1 1427 0
 1508 0064 2846     		mov	r0, r5
 1509              	.LVL151:
 1510 0066 FFF7FEFF 		bl	ADC_Disable
 1511              	.LVL152:
 1512              	.L118:
1428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Check if ADC is effectively disabled */
1431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
 1513              		.loc 1 1431 0
 1514 006a 64B9     		cbnz	r4, .L113
1432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Set ADC state */
1434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
 1515              		.loc 1 1434 0
 1516 006c 6B6D     		ldr	r3, [r5, #84]
 1517 006e 23F48053 		bic	r3, r3, #4096
 1518 0072 23F00103 		bic	r3, r3, #1
 1519 0076 43F00103 		orr	r3, r3, #1
 1520 007a 6B65     		str	r3, [r5, #84]
 1521 007c 03E0     		b	.L113
 1522              	.LVL153:
 1523              	.L116:
1435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
1436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
1437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
1440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 1524              		.loc 1 1441 0
 1525 007e 6B6D     		ldr	r3, [r5, #84]
 1526 0080 43F48053 		orr	r3, r3, #4096
 1527 0084 6B65     		str	r3, [r5, #84]
 1528              	.LVL154:
 1529              	.L113:
1442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
1444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
1446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 1530              		.loc 1 1446 0
 1531 0086 0023     		movs	r3, #0
 1532 0088 85F85030 		strb	r3, [r5, #80]
1447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
1449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
 1533              		.loc 1 1449 0
 1534 008c 2046     		mov	r0, r4
 1535 008e 38BD     		pop	{r3, r4, r5, pc}
 1536              	.LVL155:
 1537              	.L119:
1387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 1538              		.loc 1 1387 0
ARM GAS  /tmp/ccTvghLi.s 			page 165


 1539 0090 0220     		movs	r0, #2
 1540              	.LVL156:
1450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 1541              		.loc 1 1450 0
 1542 0092 38BD     		pop	{r3, r4, r5, pc}
 1543              		.cfi_endproc
 1544              	.LFE304:
 1546              		.section	.text.HAL_ADCEx_InjectedConfigChannel,"ax",%progbits
 1547              		.align	2
 1548              		.global	HAL_ADCEx_InjectedConfigChannel
 1549              		.thumb
 1550              		.thumb_func
 1552              	HAL_ADCEx_InjectedConfigChannel:
 1553              	.LFB305:
1451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
1454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Stop DMA-based multimode ADC conversion, disable ADC DMA transfer, disable ADC peripher
1455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Multimode is kept enabled after this function. Multimode DMA bits
1456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         (MDMA and DMACFG bits of common CCR register) are maintained. To disable
1457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         multimode (set with HAL_ADCEx_MultiModeConfigChannel()), ADC must be
1458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         reinitialized using HAL_ADC_Init() or HAL_ADC_DeInit(), or the user can
1459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         resort to HAL_ADCEx_DisableMultiMode() API.
1460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   In case of DMA configured in circular mode, function
1461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADCEx_RegularStop_DMA() must be called after this function with handle of
1462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         ADC slave, to properly disable the DMA channel.
1463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle of ADC master (handle of ADC slave must not be used)
1464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
1465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularMultiModeStop_DMA(ADC_HandleTypeDef *hadc)
1467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
1468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
1469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tickstart;
1470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSlave;
1471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmphadcSlave_conversion_on_going;
1472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
1474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
1475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
1477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
1478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* 1. Stop potential multimode conversion on going, on regular groups */
1481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
1482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
1485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
1486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Clear HAL_ADC_STATE_REG_BUSY bit */
1487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
1488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Temporary handle minimum initialization */
1490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     __HAL_ADC_RESET_HANDLE_STATE(&tmphadcSlave);
1491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     ADC_CLEAR_ERRORCODE(&tmphadcSlave);
1492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Set a temporary handle of the ADC slave associated to the ADC master   */
ARM GAS  /tmp/ccTvghLi.s 			page 166


1494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
1495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (tmphadcSlave.Instance == NULL)
1497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Process unlocked */
1502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
1503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       return HAL_ERROR;
1505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Procedure to disable the ADC peripheral: wait for conversions          */
1508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* effectively stopped (ADC master and ADC slave), then disable ADC       */
1509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* 1. Wait for ADC conversion completion for ADC master and ADC slave */
1511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();
1512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmphadcSlave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmphadcSlave)->Instance);
1514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     while ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
1515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****            || (tmphadcSlave_conversion_on_going == 1UL)
1516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           )
1517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if ((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
1519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* New check to avoid false timeout detection in case of preemption */
1521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         tmphadcSlave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmphadcSlave)->Instance
1522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         if ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
1523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****             || (tmphadcSlave_conversion_on_going == 1UL)
1524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****            )
1525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         {
1526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           /* Update ADC state machine to error */
1527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
1528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           /* Process unlocked */
1530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
1531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           return HAL_ERROR;
1533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         }
1534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmphadcSlave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmphadcSlave)->Instance);
1537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop       */
1540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
1541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Note: DMA channel of ADC slave should be stopped after this function   */
1542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* with HAL_ADCEx_RegularStop_DMA() API.                                  */
1543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
1544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Check if DMA channel effectively disabled */
1546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (tmp_hal_status != HAL_OK)
1547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
1550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
ARM GAS  /tmp/ccTvghLi.s 			page 167


1551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
1553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
1554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripherals: master and slave if no injected        */
1556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /*   conversion is on-going.                                              */
1557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed, to keep in */
1558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* memory a potential failing status.                                     */
1559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
1560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
1562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         tmp_hal_status =  ADC_Disable(hadc);
1564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         if (tmp_hal_status == HAL_OK)
1565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         {
1566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           if (LL_ADC_INJ_IsConversionOngoing((&tmphadcSlave)->Instance) == 0UL)
1567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           {
1568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****             tmp_hal_status =  ADC_Disable(&tmphadcSlave);
1569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           }
1570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         }
1571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
1574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Both Master and Slave ADC's could be disabled. Update Master State */
1576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Clear HAL_ADC_STATE_INJ_BUSY bit, set HAL_ADC_STATE_READY bit */
1577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY, HAL_ADC_STATE_READY);
1578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       else
1580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* injected (Master or Slave) conversions are still on-going,
1582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****            no Master State change */
1583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
1586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
1588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
1589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
1591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
1592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
1593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #endif /* ADC_MULTIMODE_SUPPORT */
1594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
1596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @}
1597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions_Group2 ADC Extended Peripheral Control functions
1600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief    ADC Extended Peripheral Control functions
1601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *
1602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** @verbatim
1603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****  ===============================================================================
1604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****              ##### Peripheral Control functions #####
1605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****  ===============================================================================
1606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     [..]  This section provides functions allowing to:
1607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Configure channels on injected group
ARM GAS  /tmp/ccTvghLi.s 			page 168


1608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Configure multimode when multimode feature is available
1609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Enable or Disable Injected Queue
1610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Disable ADC voltage regulator
1611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Enter ADC deep-power-down mode
1612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** @endverbatim
1614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @{
1615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
1618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Configure a channel to be assigned to ADC group injected.
1619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
1620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         This function initializes injected group, following calls to this
1621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         function can be used to reconfigure some parameters of structure
1622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         "ADC_InjectionConfTypeDef" on the fly, without resetting the ADC.
1623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state:
1624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         Refer to comments of structure "ADC_InjectionConfTypeDef".
1625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   In case of usage of internal measurement channels:
1626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         Vbat/VrefInt/TempSensor.
1627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         These internal paths can be disabled using function
1628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADC_DeInit().
1629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Caution: For Injected Context Queue use, a context must be fully
1630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         defined before start of injected conversion. All channels are configured
1631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         consecutively for the same ADC instance. Therefore, the number of calls to
1632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADCEx_InjectedConfigChannel() must be equal to the value of parameter
1633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         InjectedNbrOfConversion for each context.
1634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *  - Example 1: If 1 context is intended to be used (or if there is no use of the
1635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *    Injected Queue Context feature) and if the context contains 3 injected ranks
1636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *    (InjectedNbrOfConversion = 3), HAL_ADCEx_InjectedConfigChannel() must be
1637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *    called once for each channel (i.e. 3 times) before starting a conversion.
1638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *    This function must not be called to configure a 4th injected channel:
1639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *    it would start a new context into context queue.
1640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *  - Example 2: If 2 contexts are intended to be used and each of them contains
1641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *    3 injected ranks (InjectedNbrOfConversion = 3),
1642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *    HAL_ADCEx_InjectedConfigChannel() must be called once for each channel and
1643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *    for each context (3 channels x 2 contexts = 6 calls). Conversion can
1644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *    start once the 1st context is set, that is after the first three
1645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *    HAL_ADCEx_InjectedConfigChannel() calls. The 2nd context can be set on the fly.
1646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
1647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param sConfigInjected Structure of ADC injected group and ADC channel for
1648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         injected group.
1649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
1650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedConfigChannel(ADC_HandleTypeDef *hadc, ADC_InjectionConfTypeDef
1652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 1554              		.loc 1 1652 0
 1555              		.cfi_startproc
 1556              		@ args = 0, pretend = 0, frame = 8
 1557              		@ frame_needed = 0, uses_anonymous_args = 0
 1558              	.LVL157:
 1559 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1560              	.LCFI23:
 1561              		.cfi_def_cfa_offset 20
 1562              		.cfi_offset 4, -20
 1563              		.cfi_offset 5, -16
 1564              		.cfi_offset 6, -12
 1565              		.cfi_offset 7, -8
ARM GAS  /tmp/ccTvghLi.s 			page 169


 1566              		.cfi_offset 14, -4
 1567 0002 83B0     		sub	sp, sp, #12
 1568              	.LCFI24:
 1569              		.cfi_def_cfa_offset 32
 1570              	.LVL158:
1653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
1655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_config_internal_channel;
1656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
1657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
1658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0;
 1571              		.loc 1 1658 0
 1572 0004 0023     		movs	r3, #0
 1573 0006 0193     		str	r3, [sp, #4]
 1574              	.LVL159:
1659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_JSQR_ContextQueueBeingBuilt = 0U;
1661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
1663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfigInjected->InjectedSamplingTime));
1665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(sConfigInjected->InjectedSingleDiff));
1666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->AutoInjectedConv));
1667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->QueueInjectedContext));
1668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIGINJEC_EDGE(sConfigInjected->ExternalTrigInjecConvEdge));
1669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIGINJEC(hadc, sConfigInjected->ExternalTrigInjecConv));
1670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_OFFSET_NUMBER(sConfigInjected->InjectedOffsetNumber));
1671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfigInjected->InjectedOffset));
1672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->InjecOversamplingMode));
1673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
1675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
1676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     assert_param(IS_ADC_INJECTED_RANK(sConfigInjected->InjectedRank));
1677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     assert_param(IS_ADC_INJECTED_NB_CONV(sConfigInjected->InjectedNbrOfConversion));
1678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->InjectedDiscontinuousConvMode));
1679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
1680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* if JOVSE is set, the value of the OFFSETy_EN bit in ADCx_OFRy register is
1683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****      ignored (considered as reset) */
1684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(!((sConfigInjected->InjectedOffsetNumber != ADC_OFFSET_NONE) && (sConfigInjected->In
1685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* JDISCEN and JAUTO bits can't be set at the same time  */
1687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(!((sConfigInjected->InjectedDiscontinuousConvMode == ENABLE) && (sConfigInjected->Au
1688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*  DISCEN and JAUTO bits can't be set at the same time */
1690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(!((hadc->Init.DiscontinuousConvMode == ENABLE) && (sConfigInjected->AutoInjectedConv
1691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Verification of channel number */
1693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (sConfigInjected->InjectedSingleDiff != ADC_DIFFERENTIAL_ENDED)
1694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
1695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     assert_param(IS_ADC_CHANNEL(hadc, sConfigInjected->InjectedChannel));
1696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
1697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
1698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
1699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     assert_param(IS_ADC_DIFF_CHANNEL(hadc, sConfigInjected->InjectedChannel));
1700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
ARM GAS  /tmp/ccTvghLi.s 			page 170


1701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
1703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1575              		.loc 1 1703 0
 1576 0008 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 1577 000c 012B     		cmp	r3, #1
 1578 000e 00F08782 		beq	.L188
 1579              		.loc 1 1703 0 is_stmt 0 discriminator 2
 1580 0012 0123     		movs	r3, #1
 1581 0014 80F85030 		strb	r3, [r0, #80]
1704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Configuration of injected group sequencer:                               */
1706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Hardware constraint: Must fully define injected context register JSQR    */
1707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* before make it entering into injected sequencer queue.                   */
1708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*                                                                          */
1709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* - if scan mode is disabled:                                              */
1710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*    * Injected channels sequence length is set to 0x00: 1 channel         */
1711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*      converted (channel on injected rank 1)                              */
1712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*      Parameter "InjectedNbrOfConversion" is discarded.                   */
1713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*    * Injected context register JSQR setting is simple: register is fully */
1714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*      defined on one call of this function (for injected rank 1) and can  */
1715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*      be entered into queue directly.                                     */
1716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* - if scan mode is enabled:                                               */
1717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*    * Injected channels sequence length is set to parameter               */
1718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*      "InjectedNbrOfConversion".                                          */
1719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*    * Injected context register JSQR setting more complex: register is    */
1720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*      fully defined over successive calls of this function, for each      */
1721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*      injected channel rank. It is entered into queue only when all       */
1722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*      injected ranks have been set.                                       */
1723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*   Note: Scan mode is not present by hardware on this device, but used    */
1724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*   by software for alignment over all STM32 devices.                      */
1725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if ((hadc->Init.ScanConvMode == ADC_SCAN_DISABLE)  ||
 1582              		.loc 1 1726 0 is_stmt 1 discriminator 2
 1583 0018 0369     		ldr	r3, [r0, #16]
 1584 001a 13B1     		cbz	r3, .L123
1727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (sConfigInjected->InjectedNbrOfConversion == 1U))
 1585              		.loc 1 1727 0 discriminator 1
 1586 001c 8B69     		ldr	r3, [r1, #24]
1726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (sConfigInjected->InjectedNbrOfConversion == 1U))
 1587              		.loc 1 1726 0 discriminator 1
 1588 001e 012B     		cmp	r3, #1
 1589 0020 22D1     		bne	.L124
 1590              	.L123:
1728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
1729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Configuration of context register JSQR:                                */
1730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /*  - number of ranks in injected group sequencer: fixed to 1st rank      */
1731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /*    (scan mode disabled, only rank 1 used)                              */
1732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /*  - external trigger to start conversion                                */
1733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /*  - external trigger polarity                                           */
1734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /*  - channel set to rank 1 (scan mode disabled, only rank 1 can be used) */
1735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedRank == ADC_INJECTED_RANK_1)
 1591              		.loc 1 1736 0
 1592 0022 4B68     		ldr	r3, [r1, #4]
 1593 0024 082B     		cmp	r3, #8
 1594 0026 4ED1     		bne	.L125
ARM GAS  /tmp/ccTvghLi.s 			page 171


1737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Enable external trigger if trigger selection is different of         */
1739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* software start.                                                      */
1740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Note: This configuration keeps the hardware feature of parameter     */
1741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*       ExternalTrigInjecConvEdge "trigger edge none" equivalent to    */
1742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*       software start.                                                */
1743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (sConfigInjected->ExternalTrigInjecConv != ADC_INJECTED_SOFTWARE_START)
 1595              		.loc 1 1743 0
 1596 0028 0A6A     		ldr	r2, [r1, #32]
 1597 002a 52B1     		cbz	r2, .L126
1744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         tmp_JSQR_ContextQueueBeingBuilt = (ADC_JSQR_RK(sConfigInjected->InjectedChannel, ADC_INJECT
 1598              		.loc 1 1745 0
 1599 002c 0B68     		ldr	r3, [r1]
 1600 002e 9B0E     		lsrs	r3, r3, #26
 1601 0030 1B02     		lsls	r3, r3, #8
 1602 0032 03F4F853 		and	r3, r3, #7936
1746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                            | (sConfigInjected->ExternalTrigInjecConv & ADC_JSQR_JEX
 1603              		.loc 1 1746 0
 1604 0036 02F03C02 		and	r2, r2, #60
 1605 003a 1A43     		orrs	r2, r2, r3
1747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                            | sConfigInjected->ExternalTrigInjecConvEdge
 1606              		.loc 1 1747 0
 1607 003c 4B6A     		ldr	r3, [r1, #36]
1745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                            | (sConfigInjected->ExternalTrigInjecConv & ADC_JSQR_JEX
 1608              		.loc 1 1745 0
 1609 003e 1343     		orrs	r3, r3, r2
 1610              	.LVL160:
 1611 0040 04E0     		b	.L127
 1612              	.LVL161:
 1613              	.L126:
1748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                           );
1749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       else
1751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         tmp_JSQR_ContextQueueBeingBuilt = (ADC_JSQR_RK(sConfigInjected->InjectedChannel, ADC_INJECT
 1614              		.loc 1 1752 0
 1615 0042 0B68     		ldr	r3, [r1]
 1616 0044 9B0E     		lsrs	r3, r3, #26
 1617 0046 1B02     		lsls	r3, r3, #8
 1618 0048 03F4F853 		and	r3, r3, #7936
 1619              	.LVL162:
 1620              	.L127:
1753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JSQR, ADC_JSQR_FIELDS, tmp_JSQR_ContextQueueBeingBuilt);
 1621              		.loc 1 1755 0
 1622 004c 0468     		ldr	r4, [r0]
 1623 004e E26C     		ldr	r2, [r4, #76]
 1624 0050 22F0FB42 		bic	r2, r2, #2105540608
 1625 0054 22F4EF02 		bic	r2, r2, #7831552
 1626 0058 22F4BF42 		bic	r2, r2, #24448
 1627 005c 22F07F02 		bic	r2, r2, #127
 1628 0060 1A43     		orrs	r2, r2, r3
 1629 0062 E264     		str	r2, [r4, #76]
1756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* For debug and informative reasons, hadc handle saves JSQR setting */
1757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       hadc->InjectionConfig.ContextQueue = tmp_JSQR_ContextQueueBeingBuilt;
ARM GAS  /tmp/ccTvghLi.s 			page 172


 1630              		.loc 1 1757 0
 1631 0064 C365     		str	r3, [r0, #92]
 1632 0066 2EE0     		b	.L125
 1633              	.LVL163:
 1634              	.L124:
1758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
1761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
1762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
1763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Case of scan mode enabled, several channels to set into injected group */
1764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* sequencer.                                                             */
1765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /*                                                                        */
1766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Procedure to define injected context register JSQR over successive     */
1767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* calls of this function, for each injected channel rank:                */
1768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* 1. Start new context and set parameters related to all injected        */
1769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /*    channels: injected sequence length and trigger.                     */
1770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* if hadc->InjectionConfig.ChannelCount is equal to 0, this is the first */
1772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /*   call of the context under setting                                    */
1773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (hadc->InjectionConfig.ChannelCount == 0U)
 1635              		.loc 1 1773 0
 1636 0068 026E     		ldr	r2, [r0, #96]
 1637 006a 7AB9     		cbnz	r2, .L189
1774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Initialize number of channels that will be configured on the context */
1776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*  being built                                                         */
1777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       hadc->InjectionConfig.ChannelCount = sConfigInjected->InjectedNbrOfConversion;
 1638              		.loc 1 1777 0
 1639 006c 0366     		str	r3, [r0, #96]
1778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Handle hadc saves the context under build up over each HAL_ADCEx_InjectedConfigChannel()
1779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****          call, this context will be written in JSQR register at the last call.
1780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****          At this point, the context is merely reset  */
1781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       hadc->InjectionConfig.ContextQueue = 0x00000000U;
 1640              		.loc 1 1781 0
 1641 006e 0023     		movs	r3, #0
 1642 0070 C365     		str	r3, [r0, #92]
1782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Configuration of context register JSQR:                              */
1784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*  - number of ranks in injected group sequencer                       */
1785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*  - external trigger to start conversion                              */
1786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*  - external trigger polarity                                         */
1787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Enable external trigger if trigger selection is different of         */
1789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* software start.                                                      */
1790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Note: This configuration keeps the hardware feature of parameter     */
1791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*       ExternalTrigInjecConvEdge "trigger edge none" equivalent to    */
1792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*       software start.                                                */
1793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (sConfigInjected->ExternalTrigInjecConv != ADC_INJECTED_SOFTWARE_START)
 1643              		.loc 1 1793 0
 1644 0072 0A6A     		ldr	r2, [r1, #32]
 1645 0074 3AB1     		cbz	r2, .L129
1794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         tmp_JSQR_ContextQueueBeingBuilt = ((sConfigInjected->InjectedNbrOfConversion - 1U)
 1646              		.loc 1 1795 0
 1647 0076 8D69     		ldr	r5, [r1, #24]
 1648 0078 013D     		subs	r5, r5, #1
ARM GAS  /tmp/ccTvghLi.s 			page 173


1796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                            | (sConfigInjected->ExternalTrigInjecConv & ADC_JSQR_JEX
 1649              		.loc 1 1796 0
 1650 007a 02F03C02 		and	r2, r2, #60
 1651 007e 1543     		orrs	r5, r5, r2
1797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                            | sConfigInjected->ExternalTrigInjecConvEdge
 1652              		.loc 1 1797 0
 1653 0080 4B6A     		ldr	r3, [r1, #36]
1795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                            | (sConfigInjected->ExternalTrigInjecConv & ADC_JSQR_JEX
 1654              		.loc 1 1795 0
 1655 0082 1D43     		orrs	r5, r5, r3
 1656              	.LVL164:
 1657 0084 03E0     		b	.L128
 1658              	.LVL165:
 1659              	.L129:
1798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                           );
1799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       else
1801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         tmp_JSQR_ContextQueueBeingBuilt = ((sConfigInjected->InjectedNbrOfConversion - 1U));
 1660              		.loc 1 1802 0
 1661 0086 8B69     		ldr	r3, [r1, #24]
 1662 0088 5D1E     		subs	r5, r3, #1
 1663              	.LVL166:
 1664 008a 00E0     		b	.L128
 1665              	.LVL167:
 1666              	.L189:
1660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 1667              		.loc 1 1660 0
 1668 008c 0025     		movs	r5, #0
 1669              	.LVL168:
 1670              	.L128:
1803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* 2. Continue setting of context under definition with parameter       */
1808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /*    related to each channel: channel rank sequence                    */
1809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Clear the old JSQx bits for the selected rank */
1810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_JSQR_ContextQueueBeingBuilt &= ~ADC_JSQR_RK(ADC_SQR3_SQ10, sConfigInjected->InjectedRank);
1811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Set the JSQx bits for the selected rank */
1813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_JSQR_ContextQueueBeingBuilt |= ADC_JSQR_RK(sConfigInjected->InjectedChannel, sConfigInjecte
 1671              		.loc 1 1813 0
 1672 008e 0B68     		ldr	r3, [r1]
 1673 0090 C3F38462 		ubfx	r2, r3, #26, #5
 1674 0094 4C68     		ldr	r4, [r1, #4]
 1675 0096 04F01F03 		and	r3, r4, #31
 1676 009a 02FA03F3 		lsl	r3, r2, r3
 1677 009e 2B43     		orrs	r3, r3, r5
 1678              	.LVL169:
1814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Decrease channel count  */
1816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     hadc->InjectionConfig.ChannelCount--;
 1679              		.loc 1 1816 0
 1680 00a0 026E     		ldr	r2, [r0, #96]
 1681 00a2 013A     		subs	r2, r2, #1
 1682 00a4 0266     		str	r2, [r0, #96]
ARM GAS  /tmp/ccTvghLi.s 			page 174


1817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* 3. tmp_JSQR_ContextQueueBeingBuilt is fully built for this HAL_ADCEx_InjectedConfigChannel()
1819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           call, aggregate the setting to those already built during the previous
1820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           HAL_ADCEx_InjectedConfigChannel() calls (for the same context of course)  */
1821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     hadc->InjectionConfig.ContextQueue |= tmp_JSQR_ContextQueueBeingBuilt;
 1683              		.loc 1 1821 0
 1684 00a6 C46D     		ldr	r4, [r0, #92]
 1685 00a8 2343     		orrs	r3, r3, r4
 1686              	.LVL170:
 1687 00aa C365     		str	r3, [r0, #92]
1822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* 4. End of context setting: if this is the last channel set, then write context
1824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         into register JSQR and make it enter into queue                   */
1825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (hadc->InjectionConfig.ChannelCount == 0U)
 1688              		.loc 1 1825 0
 1689 00ac 5AB9     		cbnz	r2, .L125
1826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JSQR, ADC_JSQR_FIELDS, hadc->InjectionConfig.ContextQueue);
 1690              		.loc 1 1827 0
 1691 00ae 0468     		ldr	r4, [r0]
 1692 00b0 E26C     		ldr	r2, [r4, #76]
 1693 00b2 22F0FB42 		bic	r2, r2, #2105540608
 1694 00b6 22F4EF02 		bic	r2, r2, #7831552
 1695 00ba 22F4BF42 		bic	r2, r2, #24448
 1696 00be 22F07F02 		bic	r2, r2, #127
 1697 00c2 1343     		orrs	r3, r3, r2
 1698 00c4 E364     		str	r3, [r4, #76]
 1699              	.L125:
1828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
1830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
1832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
1833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* conversion on going on injected group:                                   */
1834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*  - Injected context queue: Queue disable (active context is kept) or     */
1835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*    enable (context decremented, up to 2 contexts queued)                 */
1836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*  - Injected discontinuous mode: can be enabled only if auto-injected     */
1837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*    mode is disabled.                                                     */
1838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
 1700              		.loc 1 1838 0
 1701 00c6 0268     		ldr	r2, [r0]
 1702              	.LVL171:
 1703              	.LBB276:
 1704              	.LBB277:
 1705              		.loc 2 6355 0
 1706 00c8 9368     		ldr	r3, [r2, #8]
 1707 00ca 13F00803 		ands	r3, r3, #8
 1708 00ce 00D0     		beq	.L130
 1709 00d0 0123     		movs	r3, #1
 1710              	.L130:
 1711              	.LVL172:
 1712              	.LBE277:
 1713              	.LBE276:
 1714              		.loc 1 1838 0
 1715 00d2 9BB9     		cbnz	r3, .L131
1839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
1840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* If auto-injected mode is disabled: no constraint                       */
ARM GAS  /tmp/ccTvghLi.s 			page 175


1841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (sConfigInjected->AutoInjectedConv == DISABLE)
 1716              		.loc 1 1841 0
 1717 00d4 4B7F     		ldrb	r3, [r1, #29]	@ zero_extendqisi2
 1718 00d6 53B9     		cbnz	r3, .L132
1842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CFGR,
 1719              		.loc 1 1843 0
 1720 00d8 D368     		ldr	r3, [r2, #12]
 1721 00da 23F44015 		bic	r5, r3, #3145728
 1722 00de 8B7F     		ldrb	r3, [r1, #30]	@ zero_extendqisi2
 1723 00e0 0C7F     		ldrb	r4, [r1, #28]	@ zero_extendqisi2
 1724 00e2 2405     		lsls	r4, r4, #20
 1725 00e4 44EA4353 		orr	r3, r4, r3, lsl #21
 1726 00e8 2B43     		orrs	r3, r3, r5
 1727 00ea D360     		str	r3, [r2, #12]
 1728 00ec 06E0     		b	.L131
 1729              	.L132:
1844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR_JQM | ADC_CFGR_JDISCEN,
1845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR_INJECT_CONTEXT_QUEUE((uint32_t)sConfigInjected->QueueInjectedContext)    
1846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR_INJECT_DISCCONTINUOUS((uint32_t)sConfigInjected->InjectedDiscontinuousCon
1847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* If auto-injected mode is enabled: Injected discontinuous setting is    */
1849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* discarded.                                                             */
1850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
1851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CFGR,
 1730              		.loc 1 1852 0
 1731 00ee D368     		ldr	r3, [r2, #12]
 1732 00f0 23F44013 		bic	r3, r3, #3145728
 1733 00f4 8C7F     		ldrb	r4, [r1, #30]	@ zero_extendqisi2
 1734 00f6 43EA4453 		orr	r3, r3, r4, lsl #21
 1735 00fa D360     		str	r3, [r2, #12]
 1736              	.L131:
1853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR_JQM | ADC_CFGR_JDISCEN,
1854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR_INJECT_CONTEXT_QUEUE((uint32_t)sConfigInjected->QueueInjectedContext));
1855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
1858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
1860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
1861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* conversion on going on regular and injected groups:                      */
1862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*  - Automatic injected conversion: can be enabled if injected group       */
1863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*    external triggers are disabled.                                       */
1864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*  - Channel sampling time                                                 */
1865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*  - Channel offset                                                        */
1866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 1737              		.loc 1 1866 0
 1738 00fc 0468     		ldr	r4, [r0]
 1739              	.LVL173:
 1740              	.LBB278:
 1741              	.LBB279:
6172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1742              		.loc 2 6172 0
 1743 00fe A368     		ldr	r3, [r4, #8]
 1744 0100 13F00403 		ands	r3, r3, #4
 1745 0104 00D0     		beq	.L133
ARM GAS  /tmp/ccTvghLi.s 			page 176


 1746 0106 0123     		movs	r3, #1
 1747              	.L133:
 1748              	.LVL174:
 1749              	.LBE279:
 1750              	.LBE278:
 1751              	.LBB280:
 1752              	.LBB281:
 1753              		.loc 2 6355 0
 1754 0108 A268     		ldr	r2, [r4, #8]
 1755 010a 12F00802 		ands	r2, r2, #8
 1756 010e 00D0     		beq	.L134
 1757 0110 0122     		movs	r2, #1
 1758              	.L134:
 1759              	.LVL175:
 1760              	.LBE281:
 1761              	.LBE280:
1867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
1868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 1762              		.loc 1 1869 0
 1763 0112 002B     		cmp	r3, #0
 1764 0114 40F0CC80 		bne	.L190
1870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 1765              		.loc 1 1870 0
 1766 0118 002A     		cmp	r2, #0
 1767 011a 40F0CB80 		bne	.L191
1871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****      )
1872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
1873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* If injected group external triggers are disabled (set to injected      */
1874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* software start): no constraint                                         */
1875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if ((sConfigInjected->ExternalTrigInjecConv == ADC_INJECTED_SOFTWARE_START)
 1768              		.loc 1 1875 0
 1769 011e 0B6A     		ldr	r3, [r1, #32]
 1770 0120 0BB1     		cbz	r3, .L136
1876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         || (sConfigInjected->ExternalTrigInjecConvEdge == ADC_EXTERNALTRIGINJECCONV_EDGE_NONE))
 1771              		.loc 1 1876 0
 1772 0122 4B6A     		ldr	r3, [r1, #36]
 1773 0124 73B9     		cbnz	r3, .L137
 1774              	.L136:
1877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (sConfigInjected->AutoInjectedConv == ENABLE)
 1775              		.loc 1 1878 0
 1776 0126 4B7F     		ldrb	r3, [r1, #29]	@ zero_extendqisi2
 1777 0128 012B     		cmp	r3, #1
 1778 012a 05D1     		bne	.L138
1879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO);
 1779              		.loc 1 1880 0
 1780 012c E368     		ldr	r3, [r4, #12]
 1781 012e 43F00073 		orr	r3, r3, #33554432
 1782 0132 E360     		str	r3, [r4, #12]
1653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
 1783              		.loc 1 1653 0
 1784 0134 0023     		movs	r3, #0
 1785 0136 13E0     		b	.L139
 1786              	.L138:
1881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
ARM GAS  /tmp/ccTvghLi.s 			page 177


1882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       else
1883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO);
 1787              		.loc 1 1884 0
 1788 0138 E368     		ldr	r3, [r4, #12]
 1789 013a 23F00073 		bic	r3, r3, #33554432
 1790 013e E360     		str	r3, [r4, #12]
1653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
 1791              		.loc 1 1653 0
 1792 0140 0023     		movs	r3, #0
 1793 0142 0DE0     		b	.L139
 1794              	.L137:
1885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* If Automatic injected conversion was intended to be set and could not  */
1888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* due to injected group external triggers enabled, error is reported.    */
1889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
1890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (sConfigInjected->AutoInjectedConv == ENABLE)
 1795              		.loc 1 1891 0
 1796 0144 4B7F     		ldrb	r3, [r1, #29]	@ zero_extendqisi2
 1797 0146 012B     		cmp	r3, #1
 1798 0148 05D1     		bne	.L140
1892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
1894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 1799              		.loc 1 1894 0
 1800 014a 436D     		ldr	r3, [r0, #84]
 1801 014c 43F02003 		orr	r3, r3, #32
 1802 0150 4365     		str	r3, [r0, #84]
 1803              	.LVL176:
1895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         tmp_hal_status = HAL_ERROR;
 1804              		.loc 1 1896 0
 1805 0152 0123     		movs	r3, #1
 1806 0154 04E0     		b	.L139
 1807              	.LVL177:
 1808              	.L140:
1897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       else
1899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO);
 1809              		.loc 1 1900 0
 1810 0156 E368     		ldr	r3, [r4, #12]
 1811 0158 23F00073 		bic	r3, r3, #33554432
 1812 015c E360     		str	r3, [r4, #12]
1653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
 1813              		.loc 1 1653 0
 1814 015e 0023     		movs	r3, #0
 1815              	.LVL178:
 1816              	.L139:
1901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (sConfigInjected->InjecOversamplingMode == ENABLE)
 1817              		.loc 1 1904 0
 1818 0160 91F82820 		ldrb	r2, [r1, #40]	@ zero_extendqisi2
ARM GAS  /tmp/ccTvghLi.s 			page 178


 1819 0164 012A     		cmp	r2, #1
 1820 0166 0BD1     		bne	.L141
1905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       assert_param(IS_ADC_OVERSAMPLING_RATIO(sConfigInjected->InjecOversampling.Ratio));
1907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       assert_param(IS_ADC_RIGHT_BIT_SHIFT(sConfigInjected->InjecOversampling.RightBitShift));
1908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*  JOVSE must be reset in case of triggered regular mode  */
1910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       assert_param(!(READ_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_TROVS) == (ADC_CFG
1911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Configuration of Injected Oversampler:                                 */
1913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*  - Oversampling Ratio                                                  */
1914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*  - Right bit shift                                                     */
1915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Enable OverSampling mode */
1917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CFGR2,
 1821              		.loc 1 1917 0
 1822 0168 0568     		ldr	r5, [r0]
 1823 016a 2A69     		ldr	r2, [r5, #16]
 1824 016c 22F4FF74 		bic	r4, r2, #510
 1825 0170 CE6A     		ldr	r6, [r1, #44]
 1826 0172 0A6B     		ldr	r2, [r1, #48]
 1827 0174 3243     		orrs	r2, r2, r6
 1828 0176 2243     		orrs	r2, r2, r4
 1829 0178 42F00202 		orr	r2, r2, #2
 1830 017c 2A61     		str	r2, [r5, #16]
 1831 017e 04E0     		b	.L142
 1832              	.L141:
1918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR2_JOVSE |
1919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR2_OVSR  |
1920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR2_OVSS,
1921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR2_JOVSE                                  |
1922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  sConfigInjected->InjecOversampling.Ratio         |
1923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  sConfigInjected->InjecOversampling.RightBitShift
1924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                 );
1925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
1927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Disable Regular OverSampling */
1929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_JOVSE);
 1833              		.loc 1 1929 0
 1834 0180 0468     		ldr	r4, [r0]
 1835 0182 2269     		ldr	r2, [r4, #16]
 1836 0184 22F00202 		bic	r2, r2, #2
 1837 0188 2261     		str	r2, [r4, #16]
 1838              	.L142:
1930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_SMPR1_SMPPLUS)
1933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Manage specific case of sampling time 3.5 cycles replacing 2.5 cyles */
1934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedSamplingTime == ADC_SAMPLETIME_3CYCLES_5)
1935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set sampling time of the selected ADC channel */
1937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfigInjected->InjectedChannel, LL_ADC_SAMPLI
1938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set ADC sampling time common configuration */
1940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       LL_ADC_SetSamplingTimeCommonConfig(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5);
1941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
ARM GAS  /tmp/ccTvghLi.s 			page 179


1942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
1943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set sampling time of the selected ADC channel */
1945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfigInjected->InjectedChannel, sConfigInject
1946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set ADC sampling time common configuration */
1948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       LL_ADC_SetSamplingTimeCommonConfig(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_DEFAULT);
1949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #else
1951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Set sampling time of the selected ADC channel */
1952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfigInjected->InjectedChannel, sConfigInjected
 1839              		.loc 1 1952 0
 1840 018a 0668     		ldr	r6, [r0]
 1841 018c 0D68     		ldr	r5, [r1]
 1842 018e 8C68     		ldr	r4, [r1, #8]
 1843              	.LVL179:
 1844              	.LBB282:
 1845              	.LBB283:
4722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 1846              		.loc 2 4722 0
 1847 0190 1436     		adds	r6, r6, #20
 1848              	.LVL180:
 1849 0192 6A0E     		lsrs	r2, r5, #25
 1850 0194 9200     		lsls	r2, r2, #2
 1851 0196 02F00402 		and	r2, r2, #4
 1852              	.LVL181:
4724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 1853              		.loc 2 4724 0
 1854 019a B758     		ldr	r7, [r6, r2]
 1855 019c C5F30455 		ubfx	r5, r5, #20, #5
 1856              	.LVL182:
 1857 01a0 4FF0070E 		mov	lr, #7
 1858 01a4 0EFA05FE 		lsl	lr, lr, r5
 1859 01a8 27EA0E07 		bic	r7, r7, lr
 1860 01ac AC40     		lsls	r4, r4, r5
 1861              	.LVL183:
 1862 01ae 3C43     		orrs	r4, r4, r7
 1863 01b0 B450     		str	r4, [r6, r2]
 1864              	.LVL184:
 1865              	.LBE283:
 1866              	.LBE282:
1953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #endif
1954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Configure the offset: offset enable/disable, channel, offset value */
1956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Shift the offset with respect to the selected ADC resolution. */
1958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Offset has to be left-aligned on bit 11, the LSB (right bits) are set to 0 */
1959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmpOffsetShifted = ADC_OFFSET_SHIFT_RESOLUTION(hadc, sConfigInjected->InjectedOffset);
 1867              		.loc 1 1959 0
 1868 01b2 4D69     		ldr	r5, [r1, #20]
 1869 01b4 0468     		ldr	r4, [r0]
 1870 01b6 E268     		ldr	r2, [r4, #12]
 1871 01b8 C2F3C102 		ubfx	r2, r2, #3, #2
 1872 01bc 5200     		lsls	r2, r2, #1
 1873 01be 9540     		lsls	r5, r5, r2
 1874              	.LVL185:
1960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
ARM GAS  /tmp/ccTvghLi.s 			page 180


1961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedOffsetNumber != ADC_OFFSET_NONE)
 1875              		.loc 1 1961 0
 1876 01c0 0E69     		ldr	r6, [r1, #16]
 1877 01c2 042E     		cmp	r6, #4
 1878 01c4 10D0     		beq	.L143
1962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set ADC selected offset number */
1964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       LL_ADC_SetOffset(hadc->Instance, sConfigInjected->InjectedOffsetNumber, sConfigInjected->Inje
 1879              		.loc 1 1964 0
 1880 01c6 0A68     		ldr	r2, [r1]
 1881              	.LVL186:
 1882              	.LBB284:
 1883              	.LBB285:
2931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 1884              		.loc 2 2931 0
 1885 01c8 04F1600E 		add	lr, r4, #96
 1886              	.LVL187:
2933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 1887              		.loc 2 2933 0
 1888 01cc 5EF82640 		ldr	r4, [lr, r6, lsl #2]
 1889              	.LVL188:
 1890 01d0 954F     		ldr	r7, .L204
 1891 01d2 2740     		ands	r7, r7, r4
 1892 01d4 02F0F844 		and	r4, r2, #2080374784
 1893 01d8 45EA0402 		orr	r2, r5, r4
 1894              	.LVL189:
 1895 01dc 3A43     		orrs	r2, r2, r7
 1896 01de 42F00042 		orr	r2, r2, #-2147483648
 1897 01e2 4EF82620 		str	r2, [lr, r6, lsl #2]
 1898              	.LVL190:
 1899 01e6 66E0     		b	.L135
 1900              	.LVL191:
 1901              	.L143:
 1902              	.LBE285:
 1903              	.LBE284:
 1904              	.LBB286:
 1905              	.LBB287:
3012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1906              		.loc 2 3012 0
 1907 01e8 226E     		ldr	r2, [r4, #96]
 1908              	.LVL192:
 1909              	.LBE287:
 1910              	.LBE286:
 1911              	.LBB288:
 1912              	.LBB289:
 1913 01ea 256E     		ldr	r5, [r4, #96]
 1914              	.LVL193:
 1915              	.LBE289:
 1916              	.LBE288:
1965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                        tmpOffsetShifted);
1966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
1969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Scan each offset register to check if the selected channel is targeted. */
1971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* If this is the case, the corresponding offset number is disabled.       */
1972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_1))
ARM GAS  /tmp/ccTvghLi.s 			page 181


 1917              		.loc 1 1972 0
 1918 01ec C5F38465 		ubfx	r5, r5, #26, #5
1973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfigInjected->InjectedChannel))
 1919              		.loc 1 1973 0
 1920 01f0 0A68     		ldr	r2, [r1]
 1921 01f2 C2F31206 		ubfx	r6, r2, #0, #19
 1922 01f6 16B9     		cbnz	r6, .L144
 1923              		.loc 1 1973 0 is_stmt 0 discriminator 1
 1924 01f8 C2F38462 		ubfx	r2, r2, #26, #5
 1925 01fc 06E0     		b	.L145
 1926              	.L144:
 1927              	.LVL194:
 1928              	.LBB290:
 1929              	.LBB291:
 1930              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccTvghLi.s 			page 182


  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  /tmp/ccTvghLi.s 			page 183


 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
ARM GAS  /tmp/ccTvghLi.s 			page 184


 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccTvghLi.s 			page 185


 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
ARM GAS  /tmp/ccTvghLi.s 			page 186


 271:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
ARM GAS  /tmp/ccTvghLi.s 			page 187


 328:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccTvghLi.s 			page 188


 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccTvghLi.s 			page 189


 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
ARM GAS  /tmp/ccTvghLi.s 			page 190


 499:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
ARM GAS  /tmp/ccTvghLi.s 			page 191


 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccTvghLi.s 			page 192


 613:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccTvghLi.s 			page 193


 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccTvghLi.s 			page 194


 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccTvghLi.s 			page 195


 784:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
ARM GAS  /tmp/ccTvghLi.s 			page 196


 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 884:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccTvghLi.s 			page 197


 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 948:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccTvghLi.s 			page 198


 955:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 959:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 967:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 969:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 972:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 976:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 977:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 978:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 979:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 980:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 981:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 985:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 986:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 992:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 993:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 994:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 995:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1000:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1001:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1003:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1006:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
1007:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1008:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1010:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1011:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccTvghLi.s 			page 199


1012:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1013:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1014:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1015:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
1020:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1021:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1023:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
1024:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
1025:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1026:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
1027:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1028:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1030:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1031:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1032:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1033:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1039:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1041:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1042:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1043:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1047:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
1049:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1050:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1051:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1052:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 1931              		.loc 3 1055 0 is_stmt 1 discriminator 2
 1932              		.syntax unified
 1933              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1934 01fe 92FAA2F2 		rbit r2, r2
 1935              	@ 0 "" 2
 1936              	.LVL195:
 1937              		.thumb
 1938              		.syntax unified
 1939              	.LBE291:
 1940              	.LBE290:
 1941              	.LBB292:
 1942              	.LBB293:
1056:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  /tmp/ccTvghLi.s 			page 200


1057:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1059:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1062:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
1063:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
1065:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1066:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1068:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1069:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1070:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1071:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1072:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1073:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
1079:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1080:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
1086:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 1943              		.loc 3 1089 0 discriminator 2
 1944 0202 12B1     		cbz	r2, .L192
1090:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
1092:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1093:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 1945              		.loc 3 1093 0
 1946 0204 B2FA82F2 		clz	r2, r2
 1947 0208 00E0     		b	.L145
 1948              	.L192:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 1949              		.loc 3 1091 0
 1950 020a 2022     		movs	r2, #32
 1951              	.L145:
 1952              	.LBE293:
 1953              	.LBE292:
1972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfigInjected->InjectedChannel))
 1954              		.loc 1 1972 0
 1955 020c AA42     		cmp	r2, r5
 1956 020e 03D1     		bne	.L147
 1957              	.LVL196:
 1958              	.LBB294:
 1959              	.LBB295:
3071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
ARM GAS  /tmp/ccTvghLi.s 			page 201


 1960              		.loc 2 3071 0
 1961 0210 226E     		ldr	r2, [r4, #96]
 1962 0212 22F00042 		bic	r2, r2, #-2147483648
 1963 0216 2266     		str	r2, [r4, #96]
 1964              	.LVL197:
 1965              	.L147:
 1966              	.LBE295:
 1967              	.LBE294:
1974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_1, LL_ADC_OFFSET_DISABLE);
1976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_2))
 1968              		.loc 1 1977 0
 1969 0218 0568     		ldr	r5, [r0]
 1970              	.LVL198:
 1971              	.LBB296:
 1972              	.LBB297:
3012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1973              		.loc 2 3012 0
 1974 021a 6A6E     		ldr	r2, [r5, #100]
 1975              	.LVL199:
 1976              	.LBE297:
 1977              	.LBE296:
 1978              	.LBB298:
 1979              	.LBB299:
 1980 021c 6C6E     		ldr	r4, [r5, #100]
 1981              	.LVL200:
 1982              	.LBE299:
 1983              	.LBE298:
 1984              		.loc 1 1977 0
 1985 021e C4F38464 		ubfx	r4, r4, #26, #5
1978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfigInjected->InjectedChannel))
 1986              		.loc 1 1978 0
 1987 0222 0A68     		ldr	r2, [r1]
 1988 0224 C2F31206 		ubfx	r6, r2, #0, #19
 1989 0228 16B9     		cbnz	r6, .L148
 1990              		.loc 1 1978 0 is_stmt 0 discriminator 1
 1991 022a C2F38462 		ubfx	r2, r2, #26, #5
 1992 022e 06E0     		b	.L149
 1993              	.L148:
 1994              	.LVL201:
 1995              	.LBB300:
 1996              	.LBB301:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1997              		.loc 3 1055 0 is_stmt 1 discriminator 2
 1998              		.syntax unified
 1999              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2000 0230 92FAA2F2 		rbit r2, r2
 2001              	@ 0 "" 2
 2002              	.LVL202:
 2003              		.thumb
 2004              		.syntax unified
 2005              	.LBE301:
 2006              	.LBE300:
 2007              	.LBB302:
 2008              	.LBB303:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
ARM GAS  /tmp/ccTvghLi.s 			page 202


 2009              		.loc 3 1089 0 discriminator 2
 2010 0234 12B1     		cbz	r2, .L193
 2011              		.loc 3 1093 0
 2012 0236 B2FA82F2 		clz	r2, r2
 2013 023a 00E0     		b	.L149
 2014              	.L193:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2015              		.loc 3 1091 0
 2016 023c 2022     		movs	r2, #32
 2017              	.L149:
 2018              	.LBE303:
 2019              	.LBE302:
1977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfigInjected->InjectedChannel))
 2020              		.loc 1 1977 0
 2021 023e A242     		cmp	r2, r4
 2022 0240 03D1     		bne	.L151
 2023              	.LVL203:
 2024              	.LBB304:
 2025              	.LBB305:
3071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2026              		.loc 2 3071 0
 2027 0242 6A6E     		ldr	r2, [r5, #100]
 2028 0244 22F00042 		bic	r2, r2, #-2147483648
 2029 0248 6A66     		str	r2, [r5, #100]
 2030              	.LVL204:
 2031              	.L151:
 2032              	.LBE305:
 2033              	.LBE304:
1979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_2, LL_ADC_OFFSET_DISABLE);
1981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_3))
 2034              		.loc 1 1982 0
 2035 024a 0568     		ldr	r5, [r0]
 2036              	.LVL205:
 2037              	.LBB306:
 2038              	.LBB307:
3012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2039              		.loc 2 3012 0
 2040 024c AA6E     		ldr	r2, [r5, #104]
 2041              	.LVL206:
 2042              	.LBE307:
 2043              	.LBE306:
 2044              	.LBB308:
 2045              	.LBB309:
 2046 024e AC6E     		ldr	r4, [r5, #104]
 2047              	.LVL207:
 2048              	.LBE309:
 2049              	.LBE308:
 2050              		.loc 1 1982 0
 2051 0250 C4F38464 		ubfx	r4, r4, #26, #5
1983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfigInjected->InjectedChannel))
 2052              		.loc 1 1983 0
 2053 0254 0A68     		ldr	r2, [r1]
 2054 0256 C2F31206 		ubfx	r6, r2, #0, #19
 2055 025a 16B9     		cbnz	r6, .L152
 2056              		.loc 1 1983 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccTvghLi.s 			page 203


 2057 025c C2F38462 		ubfx	r2, r2, #26, #5
 2058 0260 06E0     		b	.L153
 2059              	.L152:
 2060              	.LVL208:
 2061              	.LBB310:
 2062              	.LBB311:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2063              		.loc 3 1055 0 is_stmt 1 discriminator 2
 2064              		.syntax unified
 2065              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2066 0262 92FAA2F2 		rbit r2, r2
 2067              	@ 0 "" 2
 2068              	.LVL209:
 2069              		.thumb
 2070              		.syntax unified
 2071              	.LBE311:
 2072              	.LBE310:
 2073              	.LBB312:
 2074              	.LBB313:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2075              		.loc 3 1089 0 discriminator 2
 2076 0266 12B1     		cbz	r2, .L194
 2077              		.loc 3 1093 0
 2078 0268 B2FA82F2 		clz	r2, r2
 2079 026c 00E0     		b	.L153
 2080              	.L194:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2081              		.loc 3 1091 0
 2082 026e 2022     		movs	r2, #32
 2083              	.L153:
 2084              	.LBE313:
 2085              	.LBE312:
1982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfigInjected->InjectedChannel))
 2086              		.loc 1 1982 0
 2087 0270 A242     		cmp	r2, r4
 2088 0272 03D1     		bne	.L155
 2089              	.LVL210:
 2090              	.LBB314:
 2091              	.LBB315:
3071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2092              		.loc 2 3071 0
 2093 0274 AA6E     		ldr	r2, [r5, #104]
 2094 0276 22F00042 		bic	r2, r2, #-2147483648
 2095 027a AA66     		str	r2, [r5, #104]
 2096              	.LVL211:
 2097              	.L155:
 2098              	.LBE315:
 2099              	.LBE314:
1984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_3, LL_ADC_OFFSET_DISABLE);
1986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_4))
 2100              		.loc 1 1987 0
 2101 027c 0568     		ldr	r5, [r0]
 2102              	.LVL212:
 2103              	.LBB316:
 2104              	.LBB317:
ARM GAS  /tmp/ccTvghLi.s 			page 204


3012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2105              		.loc 2 3012 0
 2106 027e EA6E     		ldr	r2, [r5, #108]
 2107              	.LVL213:
 2108              	.LBE317:
 2109              	.LBE316:
 2110              	.LBB318:
 2111              	.LBB319:
 2112 0280 EC6E     		ldr	r4, [r5, #108]
 2113              	.LVL214:
 2114              	.LBE319:
 2115              	.LBE318:
 2116              		.loc 1 1987 0
 2117 0282 C4F38464 		ubfx	r4, r4, #26, #5
1988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfigInjected->InjectedChannel))
 2118              		.loc 1 1988 0
 2119 0286 0A68     		ldr	r2, [r1]
 2120 0288 C2F31206 		ubfx	r6, r2, #0, #19
 2121 028c 16B9     		cbnz	r6, .L156
 2122              		.loc 1 1988 0 is_stmt 0 discriminator 1
 2123 028e C2F38462 		ubfx	r2, r2, #26, #5
 2124 0292 06E0     		b	.L157
 2125              	.L156:
 2126              	.LVL215:
 2127              	.LBB320:
 2128              	.LBB321:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2129              		.loc 3 1055 0 is_stmt 1 discriminator 2
 2130              		.syntax unified
 2131              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2132 0294 92FAA2F2 		rbit r2, r2
 2133              	@ 0 "" 2
 2134              	.LVL216:
 2135              		.thumb
 2136              		.syntax unified
 2137              	.LBE321:
 2138              	.LBE320:
 2139              	.LBB322:
 2140              	.LBB323:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2141              		.loc 3 1089 0 discriminator 2
 2142 0298 12B1     		cbz	r2, .L195
 2143              		.loc 3 1093 0
 2144 029a B2FA82F2 		clz	r2, r2
 2145 029e 00E0     		b	.L157
 2146              	.L195:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2147              		.loc 3 1091 0
 2148 02a0 2022     		movs	r2, #32
 2149              	.L157:
 2150              	.LBE323:
 2151              	.LBE322:
1987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfigInjected->InjectedChannel))
 2152              		.loc 1 1987 0
 2153 02a2 A242     		cmp	r2, r4
 2154 02a4 07D1     		bne	.L135
 2155              	.LVL217:
ARM GAS  /tmp/ccTvghLi.s 			page 205


 2156              	.LBB324:
 2157              	.LBB325:
3071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2158              		.loc 2 3071 0
 2159 02a6 EA6E     		ldr	r2, [r5, #108]
 2160 02a8 22F00042 		bic	r2, r2, #-2147483648
 2161 02ac EA66     		str	r2, [r5, #108]
 2162 02ae 02E0     		b	.L135
 2163              	.LVL218:
 2164              	.L190:
 2165              	.LBE325:
 2166              	.LBE324:
1653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
 2167              		.loc 1 1653 0
 2168 02b0 0023     		movs	r3, #0
 2169 02b2 00E0     		b	.L135
 2170              	.L191:
 2171 02b4 0023     		movs	r3, #0
 2172              	.LVL219:
 2173              	.L135:
1989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_4, LL_ADC_OFFSET_DISABLE);
1991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
1995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
1997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Parameters that can be updated only when ADC is disabled:                */
1998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*  - Single or differential mode                                           */
1999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 2174              		.loc 1 1999 0
 2175 02b6 0568     		ldr	r5, [r0]
 2176              	.LVL220:
 2177              	.LBB326:
 2178              	.LBB327:
6050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2179              		.loc 2 6050 0
 2180 02b8 AA68     		ldr	r2, [r5, #8]
 2181              	.LVL221:
 2182              	.LBE327:
 2183              	.LBE326:
 2184              		.loc 1 1999 0
 2185 02ba 12F0010F 		tst	r2, #1
 2186 02be 40F0D780 		bne	.L159
2000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Set mode single-ended or differential input of the selected ADC channel */
2002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     LL_ADC_SetChannelSingleDiff(hadc->Instance, sConfigInjected->InjectedChannel, sConfigInjected->
 2187              		.loc 1 2002 0
 2188 02c2 0A68     		ldr	r2, [r1]
 2189 02c4 CC68     		ldr	r4, [r1, #12]
 2190              	.LVL222:
 2191              	.LBB328:
 2192              	.LBB329:
4875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 2193              		.loc 2 4875 0
 2194 02c6 D5F8B060 		ldr	r6, [r5, #176]
ARM GAS  /tmp/ccTvghLi.s 			page 206


 2195 02ca C2F31207 		ubfx	r7, r2, #0, #19
 2196 02ce 26EA0706 		bic	r6, r6, r7
 2197 02d2 04F01807 		and	r7, r4, #24
 2198 02d6 554C     		ldr	r4, .L204+4
 2199              	.LVL223:
 2200 02d8 FC40     		lsrs	r4, r4, r7
 2201 02da 2240     		ands	r2, r2, r4
 2202              	.LVL224:
 2203 02dc C2F31202 		ubfx	r2, r2, #0, #19
 2204 02e0 3243     		orrs	r2, r2, r6
 2205 02e2 C5F8B020 		str	r2, [r5, #176]
 2206              	.LVL225:
 2207              	.LBE329:
 2208              	.LBE328:
2003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Configuration of differential mode */
2005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Note: ADC channel number masked with value "0x1F" to ensure shift value within 32 bits range
2006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedSingleDiff == ADC_DIFFERENTIAL_ENDED)
 2209              		.loc 1 2006 0
 2210 02e6 CC68     		ldr	r4, [r1, #12]
 2211 02e8 514A     		ldr	r2, .L204+8
 2212 02ea 9442     		cmp	r4, r2
 2213 02ec 40F0C080 		bne	.L159
2007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
2008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set sampling time of the selected ADC channel */
2009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       LL_ADC_SetChannelSamplingTime(hadc->Instance,
 2214              		.loc 1 2009 0
 2215 02f0 0668     		ldr	r6, [r0]
2010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                     (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_TO_
 2216              		.loc 1 2010 0
 2217 02f2 0A68     		ldr	r2, [r1]
 2218 02f4 C2F31207 		ubfx	r7, r2, #0, #19
 2219 02f8 47B9     		cbnz	r7, .L160
 2220              		.loc 1 2010 0 is_stmt 0 discriminator 1
 2221 02fa 940E     		lsrs	r4, r2, #26
 2222 02fc 0134     		adds	r4, r4, #1
 2223 02fe 04F01F04 		and	r4, r4, #31
 2224 0302 092C     		cmp	r4, #9
 2225 0304 8CBF     		ite	hi
 2226 0306 0024     		movhi	r4, #0
 2227 0308 0124     		movls	r4, #1
 2228 030a 0DE0     		b	.L161
 2229              	.L160:
 2230              	.LVL226:
 2231              	.LBB330:
 2232              	.LBB331:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2233              		.loc 3 1055 0 is_stmt 1 discriminator 2
 2234              		.syntax unified
 2235              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2236 030c 92FAA2F4 		rbit r4, r2
 2237              	@ 0 "" 2
 2238              	.LVL227:
 2239              		.thumb
 2240              		.syntax unified
 2241              	.LBE331:
 2242              	.LBE330:
ARM GAS  /tmp/ccTvghLi.s 			page 207


 2243              	.LBB332:
 2244              	.LBB333:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2245              		.loc 3 1089 0 discriminator 2
 2246 0310 14B1     		cbz	r4, .L196
 2247              		.loc 3 1093 0
 2248 0312 B4FA84F4 		clz	r4, r4
 2249 0316 00E0     		b	.L162
 2250              	.L196:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2251              		.loc 3 1091 0
 2252 0318 2024     		movs	r4, #32
 2253              	.L162:
 2254              	.LBE333:
 2255              	.LBE332:
 2256              		.loc 1 2010 0
 2257 031a 0134     		adds	r4, r4, #1
 2258 031c 04F01F04 		and	r4, r4, #31
 2259 0320 092C     		cmp	r4, #9
 2260 0322 8CBF     		ite	hi
 2261 0324 0024     		movhi	r4, #0
 2262 0326 0124     		movls	r4, #1
 2263              	.L161:
2009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                     (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_TO_
 2264              		.loc 1 2009 0
 2265 0328 002C     		cmp	r4, #0
 2266 032a 41D0     		beq	.L163
 2267              		.loc 1 2010 0
 2268 032c 2FB9     		cbnz	r7, .L164
 2269              		.loc 1 2010 0 is_stmt 0 discriminator 3
 2270 032e 940E     		lsrs	r4, r2, #26
 2271 0330 0134     		adds	r4, r4, #1
 2272 0332 A406     		lsls	r4, r4, #26
 2273 0334 04F0F845 		and	r5, r4, #2080374784
 2274 0338 0AE0     		b	.L165
 2275              	.L164:
 2276              	.LVL228:
 2277              	.LBB334:
 2278              	.LBB335:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2279              		.loc 3 1055 0 is_stmt 1 discriminator 4
 2280              		.syntax unified
 2281              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2282 033a 92FAA2F4 		rbit r4, r2
 2283              	@ 0 "" 2
 2284              	.LVL229:
 2285              		.thumb
 2286              		.syntax unified
 2287              	.LBE335:
 2288              	.LBE334:
 2289              	.LBB336:
 2290              	.LBB337:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2291              		.loc 3 1089 0 discriminator 4
 2292 033e 14B1     		cbz	r4, .L197
 2293              		.loc 3 1093 0
 2294 0340 B4FA84F4 		clz	r4, r4
ARM GAS  /tmp/ccTvghLi.s 			page 208


 2295 0344 00E0     		b	.L166
 2296              	.L197:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2297              		.loc 3 1091 0
 2298 0346 2024     		movs	r4, #32
 2299              	.L166:
 2300              	.LBE337:
 2301              	.LBE336:
 2302              		.loc 1 2010 0
 2303 0348 0134     		adds	r4, r4, #1
 2304 034a A406     		lsls	r4, r4, #26
 2305 034c 04F0F845 		and	r5, r4, #2080374784
 2306              	.L165:
 2307              		.loc 1 2010 0 is_stmt 0 discriminator 6
 2308 0350 3FB9     		cbnz	r7, .L167
 2309              		.loc 1 2010 0 discriminator 7
 2310 0352 940E     		lsrs	r4, r2, #26
 2311 0354 0134     		adds	r4, r4, #1
 2312 0356 04F01F0E 		and	lr, r4, #31
 2313 035a 0124     		movs	r4, #1
 2314 035c 04FA0EF4 		lsl	r4, r4, lr
 2315 0360 0DE0     		b	.L168
 2316              	.L167:
 2317              	.LVL230:
 2318              	.LBB338:
 2319              	.LBB339:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2320              		.loc 3 1055 0 is_stmt 1 discriminator 8
 2321              		.syntax unified
 2322              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2323 0362 92FAA2F4 		rbit r4, r2
 2324              	@ 0 "" 2
 2325              	.LVL231:
 2326              		.thumb
 2327              		.syntax unified
 2328              	.LBE339:
 2329              	.LBE338:
 2330              	.LBB340:
 2331              	.LBB341:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2332              		.loc 3 1089 0 discriminator 8
 2333 0366 14B1     		cbz	r4, .L198
 2334              		.loc 3 1093 0
 2335 0368 B4FA84F4 		clz	r4, r4
 2336 036c 00E0     		b	.L169
 2337              	.L198:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2338              		.loc 3 1091 0
 2339 036e 2024     		movs	r4, #32
 2340              	.L169:
 2341              	.LBE341:
 2342              	.LBE340:
 2343              		.loc 1 2010 0
 2344 0370 0134     		adds	r4, r4, #1
 2345 0372 04F01F04 		and	r4, r4, #31
 2346 0376 4FF0010E 		mov	lr, #1
 2347 037a 0EFA04F4 		lsl	r4, lr, r4
ARM GAS  /tmp/ccTvghLi.s 			page 209


 2348              	.L168:
 2349              		.loc 1 2010 0 is_stmt 0 discriminator 10
 2350 037e 2C43     		orrs	r4, r4, r5
 2351 0380 3FB9     		cbnz	r7, .L170
 2352              		.loc 1 2010 0 discriminator 11
 2353 0382 920E     		lsrs	r2, r2, #26
 2354 0384 0132     		adds	r2, r2, #1
 2355 0386 02F01F02 		and	r2, r2, #31
 2356 038a 02EB4202 		add	r2, r2, r2, lsl #1
 2357 038e 1205     		lsls	r2, r2, #20
 2358 0390 0CE0     		b	.L171
 2359              	.L170:
 2360              	.LVL232:
 2361              	.LBB342:
 2362              	.LBB343:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2363              		.loc 3 1055 0 is_stmt 1 discriminator 12
 2364              		.syntax unified
 2365              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2366 0392 92FAA2F2 		rbit r2, r2
 2367              	@ 0 "" 2
 2368              	.LVL233:
 2369              		.thumb
 2370              		.syntax unified
 2371              	.LBE343:
 2372              	.LBE342:
 2373              	.LBB344:
 2374              	.LBB345:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2375              		.loc 3 1089 0 discriminator 12
 2376 0396 12B1     		cbz	r2, .L199
 2377              		.loc 3 1093 0
 2378 0398 B2FA82F2 		clz	r2, r2
 2379 039c 00E0     		b	.L172
 2380              	.L199:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2381              		.loc 3 1091 0
 2382 039e 2022     		movs	r2, #32
 2383              	.L172:
 2384              	.LBE345:
 2385              	.LBE344:
 2386              		.loc 1 2010 0
 2387 03a0 0132     		adds	r2, r2, #1
 2388 03a2 02F01F02 		and	r2, r2, #31
 2389 03a6 02EB4202 		add	r2, r2, r2, lsl #1
 2390 03aa 1205     		lsls	r2, r2, #20
 2391              	.L171:
2009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                     (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_TO_
 2392              		.loc 1 2009 0
 2393 03ac 2243     		orrs	r2, r2, r4
 2394 03ae 4CE0     		b	.L173
 2395              	.L163:
 2396              		.loc 1 2010 0
 2397 03b0 2FB9     		cbnz	r7, .L174
 2398              		.loc 1 2010 0 is_stmt 0 discriminator 13
 2399 03b2 950E     		lsrs	r5, r2, #26
 2400 03b4 0135     		adds	r5, r5, #1
ARM GAS  /tmp/ccTvghLi.s 			page 210


 2401 03b6 AD06     		lsls	r5, r5, #26
 2402 03b8 05F0F844 		and	r4, r5, #2080374784
 2403 03bc 0AE0     		b	.L175
 2404              	.L174:
 2405              	.LVL234:
 2406              	.LBB346:
 2407              	.LBB347:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2408              		.loc 3 1055 0 is_stmt 1 discriminator 14
 2409              		.syntax unified
 2410              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2411 03be 92FAA2F4 		rbit r4, r2
 2412              	@ 0 "" 2
 2413              	.LVL235:
 2414              		.thumb
 2415              		.syntax unified
 2416              	.LBE347:
 2417              	.LBE346:
 2418              	.LBB348:
 2419              	.LBB349:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2420              		.loc 3 1089 0 discriminator 14
 2421 03c2 14B1     		cbz	r4, .L200
 2422              		.loc 3 1093 0
 2423 03c4 B4FA84F4 		clz	r4, r4
 2424 03c8 00E0     		b	.L176
 2425              	.L200:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2426              		.loc 3 1091 0
 2427 03ca 2024     		movs	r4, #32
 2428              	.L176:
 2429              	.LBE349:
 2430              	.LBE348:
 2431              		.loc 1 2010 0
 2432 03cc 0134     		adds	r4, r4, #1
 2433 03ce A506     		lsls	r5, r4, #26
 2434 03d0 05F0F844 		and	r4, r5, #2080374784
 2435              	.L175:
 2436              		.loc 1 2010 0 is_stmt 0 discriminator 16
 2437 03d4 3FB9     		cbnz	r7, .L177
 2438              		.loc 1 2010 0 discriminator 17
 2439 03d6 950E     		lsrs	r5, r2, #26
 2440 03d8 0135     		adds	r5, r5, #1
 2441 03da 05F01F0E 		and	lr, r5, #31
 2442 03de 0125     		movs	r5, #1
 2443 03e0 05FA0EF5 		lsl	r5, r5, lr
 2444 03e4 0DE0     		b	.L178
 2445              	.L177:
 2446              	.LVL236:
 2447              	.LBB350:
 2448              	.LBB351:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2449              		.loc 3 1055 0 is_stmt 1 discriminator 18
 2450              		.syntax unified
 2451              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2452 03e6 92FAA2F5 		rbit r5, r2
 2453              	@ 0 "" 2
ARM GAS  /tmp/ccTvghLi.s 			page 211


 2454              	.LVL237:
 2455              		.thumb
 2456              		.syntax unified
 2457              	.LBE351:
 2458              	.LBE350:
 2459              	.LBB352:
 2460              	.LBB353:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2461              		.loc 3 1089 0 discriminator 18
 2462 03ea 15B1     		cbz	r5, .L201
 2463              		.loc 3 1093 0
 2464 03ec B5FA85F5 		clz	r5, r5
 2465 03f0 00E0     		b	.L179
 2466              	.L201:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2467              		.loc 3 1091 0
 2468 03f2 2025     		movs	r5, #32
 2469              	.L179:
 2470              	.LBE353:
 2471              	.LBE352:
 2472              		.loc 1 2010 0
 2473 03f4 0135     		adds	r5, r5, #1
 2474 03f6 05F01F05 		and	r5, r5, #31
 2475 03fa 4FF0010E 		mov	lr, #1
 2476 03fe 0EFA05F5 		lsl	r5, lr, r5
 2477              	.L178:
 2478              		.loc 1 2010 0 is_stmt 0 discriminator 20
 2479 0402 2543     		orrs	r5, r5, r4
 2480 0404 57B9     		cbnz	r7, .L180
 2481              		.loc 1 2010 0 discriminator 21
 2482 0406 940E     		lsrs	r4, r2, #26
 2483 0408 0134     		adds	r4, r4, #1
 2484 040a 04F01F04 		and	r4, r4, #31
 2485 040e 04EB4402 		add	r2, r4, r4, lsl #1
 2486 0412 1E3A     		subs	r2, r2, #30
 2487 0414 1205     		lsls	r2, r2, #20
 2488 0416 42F00072 		orr	r2, r2, #33554432
 2489 041a 15E0     		b	.L181
 2490              	.L180:
 2491              	.LVL238:
 2492              	.LBB354:
 2493              	.LBB355:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2494              		.loc 3 1055 0 is_stmt 1 discriminator 22
 2495              		.syntax unified
 2496              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2497 041c 92FAA2F2 		rbit r2, r2
 2498              	@ 0 "" 2
 2499              	.LVL239:
 2500              		.thumb
 2501              		.syntax unified
 2502              	.LBE355:
 2503              	.LBE354:
 2504              	.LBB356:
 2505              	.LBB357:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2506              		.loc 3 1089 0 discriminator 22
ARM GAS  /tmp/ccTvghLi.s 			page 212


 2507 0420 42B1     		cbz	r2, .L202
 2508              		.loc 3 1093 0
 2509 0422 B2FA82F4 		clz	r4, r2
 2510 0426 06E0     		b	.L182
 2511              	.L205:
 2512              		.align	2
 2513              	.L204:
 2514 0428 00F0FF03 		.word	67104768
 2515 042c FFFF0700 		.word	524287
 2516 0430 00007F40 		.word	1082064896
 2517              	.L202:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2518              		.loc 3 1091 0
 2519 0434 2024     		movs	r4, #32
 2520              	.L182:
 2521              	.LBE357:
 2522              	.LBE356:
 2523              		.loc 1 2010 0
 2524 0436 0134     		adds	r4, r4, #1
 2525 0438 04F01F04 		and	r4, r4, #31
 2526 043c 04EB4402 		add	r2, r4, r4, lsl #1
 2527 0440 1E3A     		subs	r2, r2, #30
 2528 0442 1205     		lsls	r2, r2, #20
 2529 0444 42F00072 		orr	r2, r2, #33554432
 2530              	.L181:
2009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                     (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_TO_
 2531              		.loc 1 2009 0 discriminator 2
 2532 0448 2A43     		orrs	r2, r2, r5
 2533              	.L173:
2009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                     (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_TO_
 2534              		.loc 1 2009 0 is_stmt 0 discriminator 1
 2535 044a 8D68     		ldr	r5, [r1, #8]
 2536              	.LVL240:
 2537              	.LBB358:
 2538              	.LBB359:
4722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2539              		.loc 2 4722 0 is_stmt 1 discriminator 1
 2540 044c 1436     		adds	r6, r6, #20
 2541              	.LVL241:
 2542 044e 540E     		lsrs	r4, r2, #25
 2543 0450 A400     		lsls	r4, r4, #2
 2544 0452 04F00404 		and	r4, r4, #4
 2545              	.LVL242:
4724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2546              		.loc 2 4724 0 discriminator 1
 2547 0456 3759     		ldr	r7, [r6, r4]
 2548 0458 C2F30452 		ubfx	r2, r2, #20, #5
 2549              	.LVL243:
 2550 045c 4FF0070E 		mov	lr, #7
 2551 0460 0EFA02FE 		lsl	lr, lr, r2
 2552 0464 27EA0E07 		bic	r7, r7, lr
 2553 0468 05FA02F2 		lsl	r2, r5, r2
 2554 046c 3A43     		orrs	r2, r2, r7
 2555 046e 3251     		str	r2, [r6, r4]
 2556              	.LVL244:
 2557              	.L159:
 2558              	.LBE359:
ARM GAS  /tmp/ccTvghLi.s 			page 213


 2559              	.LBE358:
2011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
2012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
2013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Management of internal measurement channels: Vbat/VrefInt/TempSensor   */
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* internal measurement paths enable: If internal channel selected,       */
2018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* enable dedicated internal buffers and path.                            */
2019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Note: these internal measurement paths can be disabled using           */
2020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* HAL_ADC_DeInit().                                                      */
2021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (__LL_ADC_IS_CHANNEL_INTERNAL(sConfigInjected->InjectedChannel))
 2560              		.loc 1 2022 0
 2561 0470 0A68     		ldr	r2, [r1]
 2562 0472 2D49     		ldr	r1, .L206
 2563              	.LVL245:
 2564 0474 0A42     		tst	r2, r1
 2565 0476 4ED0     		beq	.L183
 2566              	.LVL246:
 2567              	.LBB360:
 2568              	.LBB361:
2592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2569              		.loc 2 2592 0
 2570 0478 2C49     		ldr	r1, .L206+4
 2571 047a 8968     		ldr	r1, [r1, #8]
 2572 047c 01F0E075 		and	r5, r1, #29360128
 2573              	.LVL247:
 2574              	.LBE361:
 2575              	.LBE360:
2023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Ins
2025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* If the requested internal measurement path has already been enabled,   */
2027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* bypass the configuration processing.                                   */
2028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_TEMPSENSOR)
 2576              		.loc 1 2028 0
 2577 0480 2B4C     		ldr	r4, .L206+8
 2578 0482 A242     		cmp	r2, r4
 2579 0484 22D1     		bne	.L184
2029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
 2580              		.loc 1 2029 0
 2581 0486 11F4000F 		tst	r1, #8388608
 2582 048a 1FD1     		bne	.L184
2030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
2031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (ADC_TEMPERATURE_SENSOR_INSTANCE(hadc))
 2583              		.loc 1 2031 0
 2584 048c 0168     		ldr	r1, [r0]
 2585 048e 294A     		ldr	r2, .L206+12
 2586 0490 9142     		cmp	r1, r2
 2587 0492 40D1     		bne	.L183
2032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
2033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
 2588              		.loc 1 2033 0
 2589 0494 45F40005 		orr	r5, r5, #8388608
 2590              	.LVL248:
 2591              	.LBB362:
ARM GAS  /tmp/ccTvghLi.s 			page 214


 2592              	.LBB363:
2510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2593              		.loc 2 2510 0
 2594 0498 2449     		ldr	r1, .L206+4
 2595 049a 8A68     		ldr	r2, [r1, #8]
 2596 049c 22F0E072 		bic	r2, r2, #29360128
 2597 04a0 1543     		orrs	r5, r5, r2
 2598              	.LVL249:
 2599 04a2 8D60     		str	r5, [r1, #8]
 2600              	.LVL250:
 2601              	.LBE363:
 2602              	.LBE362:
2034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                        LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_channe
2035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Delay for temperature sensor stabilization time */
2037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Wait loop initialization and execution */
2038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Note: Variable divided by 2 to compensate partially              */
2039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /*       CPU processing cycles, scaling in us split to not          */
2040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /*       exceed 32 bits register capacity and handle low frequency. */
2041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_STAB_US / 10UL) * (((SystemCoreClock / (100000U
 2603              		.loc 1 2041 0
 2604 04a4 244A     		ldr	r2, .L206+16
 2605 04a6 1268     		ldr	r2, [r2]
 2606 04a8 9209     		lsrs	r2, r2, #6
 2607 04aa 2449     		ldr	r1, .L206+20
 2608 04ac A1FB0212 		umull	r1, r2, r1, r2
 2609 04b0 9209     		lsrs	r2, r2, #6
 2610 04b2 02EB4202 		add	r2, r2, r2, lsl #1
 2611 04b6 9100     		lsls	r1, r2, #2
 2612 04b8 1831     		adds	r1, r1, #24
 2613 04ba 0191     		str	r1, [sp, #4]
2042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         while (wait_loop_index != 0UL)
 2614              		.loc 1 2042 0
 2615 04bc 02E0     		b	.L185
 2616              	.L186:
2043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         {
2044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           wait_loop_index--;
 2617              		.loc 1 2044 0
 2618 04be 019A     		ldr	r2, [sp, #4]
 2619 04c0 013A     		subs	r2, r2, #1
 2620 04c2 0192     		str	r2, [sp, #4]
 2621              	.L185:
2042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         while (wait_loop_index != 0UL)
 2622              		.loc 1 2042 0
 2623 04c4 019A     		ldr	r2, [sp, #4]
 2624 04c6 002A     		cmp	r2, #0
 2625 04c8 F9D1     		bne	.L186
 2626 04ca 24E0     		b	.L183
 2627              	.L184:
2045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         }
2046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
2047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
2048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_VBAT)
 2628              		.loc 1 2048 0
 2629 04cc 1C4C     		ldr	r4, .L206+24
 2630 04ce A242     		cmp	r2, r4
 2631 04d0 0FD1     		bne	.L187
ARM GAS  /tmp/ccTvghLi.s 			page 215


2049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****              && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VBAT) == 0UL))
 2632              		.loc 1 2049 0
 2633 04d2 11F0807F 		tst	r1, #16777216
 2634 04d6 0CD1     		bne	.L187
2050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
2051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (ADC_BATTERY_VOLTAGE_INSTANCE(hadc))
 2635              		.loc 1 2051 0
 2636 04d8 0168     		ldr	r1, [r0]
 2637 04da 164A     		ldr	r2, .L206+12
 2638 04dc 9142     		cmp	r1, r2
 2639 04de 1AD1     		bne	.L183
2052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
2053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
 2640              		.loc 1 2053 0
 2641 04e0 45F08075 		orr	r5, r5, #16777216
 2642              	.LVL251:
 2643              	.LBB364:
 2644              	.LBB365:
2510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2645              		.loc 2 2510 0
 2646 04e4 1149     		ldr	r1, .L206+4
 2647 04e6 8A68     		ldr	r2, [r1, #8]
 2648 04e8 22F0E072 		bic	r2, r2, #29360128
 2649 04ec 1543     		orrs	r5, r5, r2
 2650              	.LVL252:
 2651 04ee 8D60     		str	r5, [r1, #8]
 2652 04f0 11E0     		b	.L183
 2653              	.LVL253:
 2654              	.L187:
 2655              	.LBE365:
 2656              	.LBE364:
2054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                        LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
2055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
2056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
2057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_VREFINT)
 2657              		.loc 1 2057 0
 2658 04f2 144C     		ldr	r4, .L206+28
 2659 04f4 A242     		cmp	r2, r4
 2660 04f6 0ED1     		bne	.L183
2058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****              && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
 2661              		.loc 1 2058 0
 2662 04f8 11F4800F 		tst	r1, #4194304
 2663 04fc 0BD1     		bne	.L183
2059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
2060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (ADC_VREFINT_INSTANCE(hadc))
 2664              		.loc 1 2060 0
 2665 04fe 0168     		ldr	r1, [r0]
 2666 0500 0C4A     		ldr	r2, .L206+12
 2667 0502 9142     		cmp	r1, r2
 2668 0504 07D1     		bne	.L183
2061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
2062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
 2669              		.loc 1 2062 0
 2670 0506 45F48005 		orr	r5, r5, #4194304
 2671              	.LVL254:
 2672              	.LBB366:
 2673              	.LBB367:
ARM GAS  /tmp/ccTvghLi.s 			page 216


2510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2674              		.loc 2 2510 0
 2675 050a 0849     		ldr	r1, .L206+4
 2676 050c 8A68     		ldr	r2, [r1, #8]
 2677 050e 22F0E072 		bic	r2, r2, #29360128
 2678 0512 1543     		orrs	r5, r5, r2
 2679              	.LVL255:
 2680 0514 8D60     		str	r5, [r1, #8]
 2681              	.LVL256:
 2682              	.L183:
 2683              	.LBE367:
 2684              	.LBE366:
2063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                        LL_ADC_PATH_INTERNAL_VREFINT | tmp_config_internal_channel);
2064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
2065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
2066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
2067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
2068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* nothing to do */
2069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
2070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
2073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 2685              		.loc 1 2073 0
 2686 0516 0022     		movs	r2, #0
 2687 0518 80F85020 		strb	r2, [r0, #80]
2074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
2076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
 2688              		.loc 1 2076 0
 2689 051c 1846     		mov	r0, r3
 2690              	.LVL257:
 2691 051e 00E0     		b	.L122
 2692              	.LVL258:
 2693              	.L188:
1703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 2694              		.loc 1 1703 0
 2695 0520 0220     		movs	r0, #2
 2696              	.LVL259:
 2697              	.L122:
2077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 2698              		.loc 1 2077 0
 2699 0522 03B0     		add	sp, sp, #12
 2700              	.LCFI25:
 2701              		.cfi_def_cfa_offset 20
 2702              		@ sp needed
 2703 0524 F0BD     		pop	{r4, r5, r6, r7, pc}
 2704              	.L207:
 2705 0526 00BF     		.align	2
 2706              	.L206:
 2707 0528 00000880 		.word	-2146959360
 2708 052c 00030450 		.word	1342440192
 2709 0530 000052C7 		.word	-950927360
 2710 0534 00000450 		.word	1342439424
 2711 0538 00000000 		.word	SystemCoreClock
 2712 053c 632D3E05 		.word	87960931
 2713 0540 000084CB 		.word	-880541696
ARM GAS  /tmp/ccTvghLi.s 			page 217


 2714 0544 01000080 		.word	-2147483647
 2715              		.cfi_endproc
 2716              	.LFE305:
 2718              		.section	.text.HAL_ADCEx_EnableInjectedQueue,"ax",%progbits
 2719              		.align	2
 2720              		.global	HAL_ADCEx_EnableInjectedQueue
 2721              		.thumb
 2722              		.thumb_func
 2724              	HAL_ADCEx_EnableInjectedQueue:
 2725              	.LFB306:
2078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
2081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Enable ADC multimode and configure multimode parameters
2082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
2083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         This function initializes multimode parameters, following
2084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         calls to this function can be used to reconfigure some parameters
2085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         of structure "ADC_MultiModeTypeDef" on the fly, without resetting
2086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         the ADCs.
2087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state.
2088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         For parameters constraints, see comments of structure
2089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         "ADC_MultiModeTypeDef".
2090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   To move back configuration from multimode to single mode, ADC must
2091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         be reset (using function HAL_ADC_Init() ).
2092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc Master ADC handle
2093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param multimode Structure of ADC multimode configuration
2094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
2095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
2096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeConfigChannel(ADC_HandleTypeDef *hadc, ADC_MultiModeTypeDef *m
2097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
2098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
2100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSlave;
2101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmphadcSlave_conversion_on_going;
2102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
2104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
2105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE(multimode->Mode));
2106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (multimode->Mode != ADC_MODE_INDEPENDENT)
2107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     assert_param(IS_ADC_DMA_ACCESS_MULTIMODE(multimode->DMAAccessMode));
2109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     assert_param(IS_ADC_SAMPLING_DELAY(multimode->TwoSamplingDelay));
2110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
2113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
2114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Temporary handle minimum initialization */
2116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_ADC_RESET_HANDLE_STATE(&tmphadcSlave);
2117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   ADC_CLEAR_ERRORCODE(&tmphadcSlave);
2118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
2120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (tmphadcSlave.Instance == NULL)
2122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
2124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
ARM GAS  /tmp/ccTvghLi.s 			page 218


2125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Process unlocked */
2127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
2128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     return HAL_ERROR;
2130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
2133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* conversion on going on regular group:                                    */
2135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*  - Multimode DMA configuration                                           */
2136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*  - Multimode DMA mode                                                    */
2137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmphadcSlave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmphadcSlave)->Instance);
2138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       && (tmphadcSlave_conversion_on_going == 0UL))
2140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Pointer to the common control register */
2142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmpADC_Common = __LL_ADC_COMMON_INSTANCE(hadc->Instance);
2143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* If multimode is selected, configure all multimode parameters.          */
2145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Otherwise, reset multimode parameters (can be used in case of          */
2146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* transition from multimode to independent mode).                        */
2147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (multimode->Mode != ADC_MODE_INDEPENDENT)
2148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
2149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       MODIFY_REG(tmpADC_Common->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG,
2150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  multimode->DMAAccessMode |
2151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  ADC_CCR_MULTI_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
2152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Parameters that can be updated only when ADC is disabled:                */
2154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*  - Multimode mode selection                                              */
2155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*  - Multimode delay                                                       */
2156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*    Note: Delay range depends on selected resolution:                     */
2157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*      from 1 to 12 clock cycles for 12 bits                               */
2158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*      from 1 to 10 clock cycles for 10 bits,                              */
2159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*      from 1 to 8 clock cycles for 8 bits                                 */
2160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*      from 1 to 6 clock cycles for 6 bits                                 */
2161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*    If a higher delay is selected, it will be clipped to maximum delay    */
2162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*    range                                                                 */
2163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
2164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
2165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         MODIFY_REG(tmpADC_Common->CCR,
2166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                    ADC_CCR_DUAL |
2167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                    ADC_CCR_DELAY,
2168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                    multimode->Mode |
2169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                    multimode->TwoSamplingDelay
2170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                   );
2171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
2172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
2173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else /* ADC_MODE_INDEPENDENT */
2174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
2175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       CLEAR_BIT(tmpADC_Common->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG);
2176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Parameters that can be updated only when ADC is disabled:                */
2178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*  - Multimode mode selection                                              */
2179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*  - Multimode delay                                                       */
2180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
2181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
ARM GAS  /tmp/ccTvghLi.s 			page 219


2182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         CLEAR_BIT(tmpADC_Common->CCR, ADC_CCR_DUAL | ADC_CCR_DELAY);
2183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
2184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
2185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* If one of the ADC sharing the same common group is enabled, no update    */
2187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* could be done on neither of the multimode structure parameters.          */
2188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
2189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
2191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
2194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
2197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
2198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
2200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
2201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
2202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #endif /* ADC_MULTIMODE_SUPPORT */
2203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
2205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Enable Injected Queue
2206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   This function resets CFGR register JQDIS bit in order to enable the
2207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         Injected Queue. JQDIS can be written only when ADSTART and JDSTART
2208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         are both equal to 0 to ensure that no regular nor injected
2209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         conversion is ongoing.
2210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
2211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
2212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
2213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_EnableInjectedQueue(ADC_HandleTypeDef *hadc)
2214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 2726              		.loc 1 2214 0
 2727              		.cfi_startproc
 2728              		@ args = 0, pretend = 0, frame = 0
 2729              		@ frame_needed = 0, uses_anonymous_args = 0
 2730              		@ link register save eliminated.
 2731              	.LVL260:
2215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
2216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
2217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
2218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
2220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 2732              		.loc 1 2222 0
 2733 0000 0168     		ldr	r1, [r0]
 2734              	.LVL261:
 2735              	.LBB368:
 2736              	.LBB369:
6172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2737              		.loc 2 6172 0
 2738 0002 8B68     		ldr	r3, [r1, #8]
 2739 0004 13F00403 		ands	r3, r3, #4
 2740 0008 00D0     		beq	.L209
ARM GAS  /tmp/ccTvghLi.s 			page 220


 2741 000a 0123     		movs	r3, #1
 2742              	.L209:
 2743              	.LVL262:
 2744              	.LBE369:
 2745              	.LBE368:
 2746              	.LBB370:
 2747              	.LBB371:
 2748              		.loc 2 6355 0
 2749 000c 8A68     		ldr	r2, [r1, #8]
 2750 000e 12F00802 		ands	r2, r2, #8
 2751 0012 00D0     		beq	.L210
 2752 0014 0122     		movs	r2, #1
 2753              	.L210:
 2754              	.LVL263:
 2755              	.LBE371:
 2756              	.LBE370:
2223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
2224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Parameter can be set only if no conversion is on-going */
2226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 2757              		.loc 1 2226 0
 2758 0016 53B9     		cbnz	r3, .L212
2227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 2759              		.loc 1 2227 0
 2760 0018 5AB9     		cbnz	r2, .L213
2228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****      )
2229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 2761              		.loc 1 2230 0
 2762 001a CB68     		ldr	r3, [r1, #12]
 2763 001c 23F00043 		bic	r3, r3, #-2147483648
 2764 0020 CB60     		str	r3, [r1, #12]
2231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Update state, clear previous result related to injected queue overflow */
2233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
 2765              		.loc 1 2233 0
 2766 0022 436D     		ldr	r3, [r0, #84]
 2767 0024 23F48043 		bic	r3, r3, #16384
 2768 0028 4365     		str	r3, [r0, #84]
 2769              	.LVL264:
2234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_OK;
 2770              		.loc 1 2235 0
 2771 002a 0020     		movs	r0, #0
 2772              	.LVL265:
 2773 002c 7047     		bx	lr
 2774              	.LVL266:
 2775              	.L212:
2236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
2238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 2776              		.loc 1 2239 0
 2777 002e 0120     		movs	r0, #1
 2778              	.LVL267:
 2779 0030 7047     		bx	lr
 2780              	.LVL268:
ARM GAS  /tmp/ccTvghLi.s 			page 221


 2781              	.L213:
 2782 0032 0120     		movs	r0, #1
 2783              	.LVL269:
2240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
2243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 2784              		.loc 1 2243 0
 2785 0034 7047     		bx	lr
 2786              		.cfi_endproc
 2787              	.LFE306:
 2789 0036 00BF     		.section	.text.HAL_ADCEx_DisableInjectedQueue,"ax",%progbits
 2790              		.align	2
 2791              		.global	HAL_ADCEx_DisableInjectedQueue
 2792              		.thumb
 2793              		.thumb_func
 2795              	HAL_ADCEx_DisableInjectedQueue:
 2796              	.LFB307:
2244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
2246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Disable Injected Queue
2247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   This function sets CFGR register JQDIS bit in order to disable the
2248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         Injected Queue. JQDIS can be written only when ADSTART and JDSTART
2249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         are both equal to 0 to ensure that no regular nor injected
2250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         conversion is ongoing.
2251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
2252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
2253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
2254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_DisableInjectedQueue(ADC_HandleTypeDef *hadc)
2255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 2797              		.loc 1 2255 0
 2798              		.cfi_startproc
 2799              		@ args = 0, pretend = 0, frame = 0
 2800              		@ frame_needed = 0, uses_anonymous_args = 0
 2801              		@ link register save eliminated.
 2802              	.LVL270:
2256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
2257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
2258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
2259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
2261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 2803              		.loc 1 2263 0
 2804 0000 0168     		ldr	r1, [r0]
 2805              	.LVL271:
 2806              	.LBB372:
 2807              	.LBB373:
6172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2808              		.loc 2 6172 0
 2809 0002 8B68     		ldr	r3, [r1, #8]
 2810 0004 13F00403 		ands	r3, r3, #4
 2811 0008 00D0     		beq	.L215
 2812 000a 0123     		movs	r3, #1
 2813              	.L215:
 2814              	.LVL272:
ARM GAS  /tmp/ccTvghLi.s 			page 222


 2815              	.LBE373:
 2816              	.LBE372:
 2817              	.LBB374:
 2818              	.LBB375:
 2819              		.loc 2 6355 0
 2820 000c 8A68     		ldr	r2, [r1, #8]
 2821 000e 12F00802 		ands	r2, r2, #8
 2822 0012 00D0     		beq	.L216
 2823 0014 0122     		movs	r2, #1
 2824              	.L216:
 2825              	.LVL273:
 2826              	.LBE375:
 2827              	.LBE374:
2264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
2265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Parameter can be set only if no conversion is on-going */
2267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 2828              		.loc 1 2267 0
 2829 0016 53B9     		cbnz	r3, .L218
2268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 2830              		.loc 1 2268 0
 2831 0018 5AB9     		cbnz	r2, .L219
 2832              	.LVL274:
 2833              	.LBB376:
 2834              	.LBB377:
4338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2835              		.loc 2 4338 0
 2836 001a CB68     		ldr	r3, [r1, #12]
 2837 001c 23F00043 		bic	r3, r3, #-2147483648
 2838 0020 23F40013 		bic	r3, r3, #2097152
 2839 0024 43F00043 		orr	r3, r3, #-2147483648
 2840 0028 CB60     		str	r3, [r1, #12]
 2841              	.LVL275:
 2842              	.LBE377:
 2843              	.LBE376:
2269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****      )
2270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     LL_ADC_INJ_SetQueueMode(hadc->Instance, LL_ADC_INJ_QUEUE_DISABLE);
2272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_OK;
 2844              		.loc 1 2272 0
 2845 002a 0020     		movs	r0, #0
 2846              	.LVL276:
 2847 002c 7047     		bx	lr
 2848              	.LVL277:
 2849              	.L218:
2273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
2275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 2850              		.loc 1 2276 0
 2851 002e 0120     		movs	r0, #1
 2852              	.LVL278:
 2853 0030 7047     		bx	lr
 2854              	.LVL279:
 2855              	.L219:
 2856 0032 0120     		movs	r0, #1
 2857              	.LVL280:
ARM GAS  /tmp/ccTvghLi.s 			page 223


2277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
2280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 2858              		.loc 1 2280 0
 2859 0034 7047     		bx	lr
 2860              		.cfi_endproc
 2861              	.LFE307:
 2863 0036 00BF     		.section	.text.HAL_ADCEx_DisableVoltageRegulator,"ax",%progbits
 2864              		.align	2
 2865              		.global	HAL_ADCEx_DisableVoltageRegulator
 2866              		.thumb
 2867              		.thumb_func
 2869              	HAL_ADCEx_DisableVoltageRegulator:
 2870              	.LFB308:
2281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
2283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Disable ADC voltage regulator.
2284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Disabling voltage regulator allows to save power. This operation can
2285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         be carried out only when ADC is disabled.
2286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   To enable again the voltage regulator, the user is expected to
2287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         resort to HAL_ADC_Init() API.
2288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
2289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
2290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
2291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_DisableVoltageRegulator(ADC_HandleTypeDef *hadc)
2292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 2871              		.loc 1 2292 0
 2872              		.cfi_startproc
 2873              		@ args = 0, pretend = 0, frame = 0
 2874              		@ frame_needed = 0, uses_anonymous_args = 0
 2875              		@ link register save eliminated.
 2876              	.LVL281:
2293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
2294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
2296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Setting of this feature is conditioned to ADC state: ADC must be ADC disabled */
2299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 2877              		.loc 1 2299 0
 2878 0000 0268     		ldr	r2, [r0]
 2879              	.LVL282:
 2880              	.LBB378:
 2881              	.LBB379:
6050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2882              		.loc 2 6050 0
 2883 0002 9368     		ldr	r3, [r2, #8]
 2884              	.LVL283:
 2885              	.LBE379:
 2886              	.LBE378:
 2887              		.loc 1 2299 0
 2888 0004 13F0010F 		tst	r3, #1
 2889 0008 07D1     		bne	.L222
 2890              	.LVL284:
 2891              	.LBB380:
 2892              	.LBB381:
ARM GAS  /tmp/ccTvghLi.s 			page 224


5979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2893              		.loc 2 5979 0
 2894 000a 9368     		ldr	r3, [r2, #8]
 2895 000c 23F01043 		bic	r3, r3, #-1879048192
 2896 0010 23F03F03 		bic	r3, r3, #63
 2897 0014 9360     		str	r3, [r2, #8]
 2898              	.LVL285:
 2899              	.LBE381:
 2900              	.LBE380:
2300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     LL_ADC_DisableInternalRegulator(hadc->Instance);
2302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_OK;
 2901              		.loc 1 2302 0
 2902 0016 0020     		movs	r0, #0
 2903              	.LVL286:
 2904 0018 7047     		bx	lr
 2905              	.LVL287:
 2906              	.L222:
2303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
2305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 2907              		.loc 1 2306 0
 2908 001a 0120     		movs	r0, #1
 2909              	.LVL288:
2307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
2310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 2910              		.loc 1 2310 0
 2911 001c 7047     		bx	lr
 2912              		.cfi_endproc
 2913              	.LFE308:
 2915 001e 00BF     		.section	.text.HAL_ADCEx_EnterADCDeepPowerDownMode,"ax",%progbits
 2916              		.align	2
 2917              		.global	HAL_ADCEx_EnterADCDeepPowerDownMode
 2918              		.thumb
 2919              		.thumb_func
 2921              	HAL_ADCEx_EnterADCDeepPowerDownMode:
 2922              	.LFB309:
2311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
2313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Enter ADC deep-power-down mode
2314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   This mode is achieved in setting DEEPPWD bit and allows to save power
2315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         in reducing leakage currents. It is particularly interesting before
2316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         entering stop modes.
2317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Setting DEEPPWD automatically clears ADVREGEN bit and disables the
2318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         ADC voltage regulator. This means that this API encompasses
2319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADCEx_DisableVoltageRegulator(). Additionally, the internal
2320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         calibration is lost.
2321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   To exit the ADC deep-power-down mode, the user is expected to
2322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         resort to HAL_ADC_Init() API as well as to relaunch a calibration
2323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         with HAL_ADCEx_Calibration_Start() API or to re-apply a previously
2324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         saved calibration factor.
2325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
2326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
2327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
ARM GAS  /tmp/ccTvghLi.s 			page 225


2328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_EnterADCDeepPowerDownMode(ADC_HandleTypeDef *hadc)
2329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 2923              		.loc 1 2329 0
 2924              		.cfi_startproc
 2925              		@ args = 0, pretend = 0, frame = 0
 2926              		@ frame_needed = 0, uses_anonymous_args = 0
 2927              		@ link register save eliminated.
 2928              	.LVL289:
2330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
2331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
2333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Setting of this feature is conditioned to ADC state: ADC must be ADC disabled */
2336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 2929              		.loc 1 2336 0
 2930 0000 0268     		ldr	r2, [r0]
 2931              	.LVL290:
 2932              	.LBB382:
 2933              	.LBB383:
6050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2934              		.loc 2 6050 0
 2935 0002 9368     		ldr	r3, [r2, #8]
 2936              	.LVL291:
 2937              	.LBE383:
 2938              	.LBE382:
 2939              		.loc 1 2336 0
 2940 0004 13F0010F 		tst	r3, #1
 2941 0008 09D1     		bne	.L225
 2942              	.LVL292:
 2943              	.LBB384:
 2944              	.LBB385:
5907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 2945              		.loc 2 5907 0
 2946 000a 9368     		ldr	r3, [r2, #8]
 2947 000c 23F02043 		bic	r3, r3, #-1610612736
 2948 0010 23F03F03 		bic	r3, r3, #63
 2949 0014 43F00053 		orr	r3, r3, #536870912
 2950 0018 9360     		str	r3, [r2, #8]
 2951              	.LVL293:
 2952              	.LBE385:
 2953              	.LBE384:
2337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     LL_ADC_EnableDeepPowerDown(hadc->Instance);
2339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_OK;
 2954              		.loc 1 2339 0
 2955 001a 0020     		movs	r0, #0
 2956              	.LVL294:
 2957 001c 7047     		bx	lr
 2958              	.LVL295:
 2959              	.L225:
2340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
2342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 2960              		.loc 1 2343 0
 2961 001e 0120     		movs	r0, #1
ARM GAS  /tmp/ccTvghLi.s 			page 226


 2962              	.LVL296:
2344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
2347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 2963              		.loc 1 2347 0
 2964 0020 7047     		bx	lr
 2965              		.cfi_endproc
 2966              	.LFE309:
 2968 0022 00BF     		.text
 2969              	.Letext0:
 2970              		.file 4 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_t
 2971              		.file 5 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 2972              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l431xx.h"
 2973              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 2974              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 2975              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 2976              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc.h"
 2977              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc_ex.h"
 2978              		.file 12 "Drivers/CMSIS/Include/core_cm4.h"
 2979              		.file 13 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 2980              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
ARM GAS  /tmp/ccTvghLi.s 			page 227


DEFINED SYMBOLS
                            *ABS*:00000000 stm32l4xx_hal_adc_ex.c
     /tmp/ccTvghLi.s:22     .text.HAL_ADCEx_Calibration_Start:00000000 $t
     /tmp/ccTvghLi.s:27     .text.HAL_ADCEx_Calibration_Start:00000000 HAL_ADCEx_Calibration_Start
     /tmp/ccTvghLi.s:166    .text.HAL_ADCEx_Calibration_GetValue:00000000 $t
     /tmp/ccTvghLi.s:171    .text.HAL_ADCEx_Calibration_GetValue:00000000 HAL_ADCEx_Calibration_GetValue
     /tmp/ccTvghLi.s:203    .text.HAL_ADCEx_Calibration_SetValue:00000000 $t
     /tmp/ccTvghLi.s:208    .text.HAL_ADCEx_Calibration_SetValue:00000000 HAL_ADCEx_Calibration_SetValue
     /tmp/ccTvghLi.s:343    .text.HAL_ADCEx_InjectedStart:00000000 $t
     /tmp/ccTvghLi.s:348    .text.HAL_ADCEx_InjectedStart:00000000 HAL_ADCEx_InjectedStart
     /tmp/ccTvghLi.s:507    .text.HAL_ADCEx_InjectedStop:00000000 $t
     /tmp/ccTvghLi.s:512    .text.HAL_ADCEx_InjectedStop:00000000 HAL_ADCEx_InjectedStop
     /tmp/ccTvghLi.s:599    .text.HAL_ADCEx_InjectedPollForConversion:00000000 $t
     /tmp/ccTvghLi.s:604    .text.HAL_ADCEx_InjectedPollForConversion:00000000 HAL_ADCEx_InjectedPollForConversion
     /tmp/ccTvghLi.s:775    .text.HAL_ADCEx_InjectedStart_IT:00000000 $t
     /tmp/ccTvghLi.s:780    .text.HAL_ADCEx_InjectedStart_IT:00000000 HAL_ADCEx_InjectedStart_IT
     /tmp/ccTvghLi.s:978    .text.HAL_ADCEx_InjectedStop_IT:00000000 $t
     /tmp/ccTvghLi.s:983    .text.HAL_ADCEx_InjectedStop_IT:00000000 HAL_ADCEx_InjectedStop_IT
     /tmp/ccTvghLi.s:1075   .text.HAL_ADCEx_InjectedGetValue:00000000 $t
     /tmp/ccTvghLi.s:1080   .text.HAL_ADCEx_InjectedGetValue:00000000 HAL_ADCEx_InjectedGetValue
     /tmp/ccTvghLi.s:1132   .text.HAL_ADCEx_InjectedConvCpltCallback:00000000 $t
     /tmp/ccTvghLi.s:1137   .text.HAL_ADCEx_InjectedConvCpltCallback:00000000 HAL_ADCEx_InjectedConvCpltCallback
     /tmp/ccTvghLi.s:1150   .text.HAL_ADCEx_InjectedQueueOverflowCallback:00000000 $t
     /tmp/ccTvghLi.s:1155   .text.HAL_ADCEx_InjectedQueueOverflowCallback:00000000 HAL_ADCEx_InjectedQueueOverflowCallback
     /tmp/ccTvghLi.s:1168   .text.HAL_ADCEx_LevelOutOfWindow2Callback:00000000 $t
     /tmp/ccTvghLi.s:1173   .text.HAL_ADCEx_LevelOutOfWindow2Callback:00000000 HAL_ADCEx_LevelOutOfWindow2Callback
     /tmp/ccTvghLi.s:1186   .text.HAL_ADCEx_LevelOutOfWindow3Callback:00000000 $t
     /tmp/ccTvghLi.s:1191   .text.HAL_ADCEx_LevelOutOfWindow3Callback:00000000 HAL_ADCEx_LevelOutOfWindow3Callback
     /tmp/ccTvghLi.s:1204   .text.HAL_ADCEx_EndOfSamplingCallback:00000000 $t
     /tmp/ccTvghLi.s:1209   .text.HAL_ADCEx_EndOfSamplingCallback:00000000 HAL_ADCEx_EndOfSamplingCallback
     /tmp/ccTvghLi.s:1222   .text.HAL_ADCEx_RegularStop:00000000 $t
     /tmp/ccTvghLi.s:1227   .text.HAL_ADCEx_RegularStop:00000000 HAL_ADCEx_RegularStop
     /tmp/ccTvghLi.s:1317   .text.HAL_ADCEx_RegularStop_IT:00000000 $t
     /tmp/ccTvghLi.s:1322   .text.HAL_ADCEx_RegularStop_IT:00000000 HAL_ADCEx_RegularStop_IT
     /tmp/ccTvghLi.s:1417   .text.HAL_ADCEx_RegularStop_DMA:00000000 $t
     /tmp/ccTvghLi.s:1422   .text.HAL_ADCEx_RegularStop_DMA:00000000 HAL_ADCEx_RegularStop_DMA
     /tmp/ccTvghLi.s:1547   .text.HAL_ADCEx_InjectedConfigChannel:00000000 $t
     /tmp/ccTvghLi.s:1552   .text.HAL_ADCEx_InjectedConfigChannel:00000000 HAL_ADCEx_InjectedConfigChannel
     /tmp/ccTvghLi.s:2514   .text.HAL_ADCEx_InjectedConfigChannel:00000428 $d
     /tmp/ccTvghLi.s:2519   .text.HAL_ADCEx_InjectedConfigChannel:00000434 $t
     /tmp/ccTvghLi.s:2707   .text.HAL_ADCEx_InjectedConfigChannel:00000528 $d
     /tmp/ccTvghLi.s:2719   .text.HAL_ADCEx_EnableInjectedQueue:00000000 $t
     /tmp/ccTvghLi.s:2724   .text.HAL_ADCEx_EnableInjectedQueue:00000000 HAL_ADCEx_EnableInjectedQueue
     /tmp/ccTvghLi.s:2790   .text.HAL_ADCEx_DisableInjectedQueue:00000000 $t
     /tmp/ccTvghLi.s:2795   .text.HAL_ADCEx_DisableInjectedQueue:00000000 HAL_ADCEx_DisableInjectedQueue
     /tmp/ccTvghLi.s:2864   .text.HAL_ADCEx_DisableVoltageRegulator:00000000 $t
     /tmp/ccTvghLi.s:2869   .text.HAL_ADCEx_DisableVoltageRegulator:00000000 HAL_ADCEx_DisableVoltageRegulator
     /tmp/ccTvghLi.s:2916   .text.HAL_ADCEx_EnterADCDeepPowerDownMode:00000000 $t
     /tmp/ccTvghLi.s:2921   .text.HAL_ADCEx_EnterADCDeepPowerDownMode:00000000 HAL_ADCEx_EnterADCDeepPowerDownMode
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
ADC_Disable
ADC_Enable
ADC_ConversionStop
HAL_GetTick
HAL_DMA_Abort
ARM GAS  /tmp/ccTvghLi.s 			page 228


SystemCoreClock

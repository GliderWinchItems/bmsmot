ARM GAS  /tmp/ccCgTiro.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"yprintf.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.yprintf_init,"ax",%progbits
  22              		.align	2
  23              		.global	yprintf_init
  24              		.thumb
  25              		.thumb_func
  27              	yprintf_init:
  28              	.LFB293:
  29              		.file 1 "Ourwares/yprintf.c"
   1:Ourwares/yprintf.c **** /******************************************************************************
   2:Ourwares/yprintf.c **** * File Name          : yprintf.c
   3:Ourwares/yprintf.c **** * Date First Issued  : 01/17/2019
   4:Ourwares/yprintf.c **** * Board              : 
   5:Ourwares/yprintf.c **** * Description        : Substitute for 'fprintf' for multiple uarts
   6:Ourwares/yprintf.c **** *******************************************************************************/
   7:Ourwares/yprintf.c **** 
   8:Ourwares/yprintf.c **** #include <stdint.h>
   9:Ourwares/yprintf.c **** #include <stdarg.h>
  10:Ourwares/yprintf.c **** #include <stdio.h>
  11:Ourwares/yprintf.c **** #include <string.h>
  12:Ourwares/yprintf.c **** #include "yprintf.h"
  13:Ourwares/yprintf.c **** 
  14:Ourwares/yprintf.c **** osSemaphoreId vsnprintfSemaphoreHandle;
  15:Ourwares/yprintf.c **** static uint8_t sw = 0;	// OTO initiationzation switch
  16:Ourwares/yprintf.c **** 
  17:Ourwares/yprintf.c **** /* **************************************************************************************
  18:Ourwares/yprintf.c ****  *  int yprintf_init(void);
  19:Ourwares/yprintf.c ****  * @brief	: Setup semaphore
  20:Ourwares/yprintf.c ****  * @return	: 0 = init executed; -1 = init already done
  21:Ourwares/yprintf.c ****  * ************************************************************************************** */
  22:Ourwares/yprintf.c **** int yprintf_init(void)
  23:Ourwares/yprintf.c **** {
  30              		.loc 1 23 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 16
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  24:Ourwares/yprintf.c **** 	if (sw == 0)
  34              		.loc 1 24 0
ARM GAS  /tmp/ccCgTiro.s 			page 2


  35 0000 0C4B     		ldr	r3, .L5
  36 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  37 0004 93B9     		cbnz	r3, .L4
  23:Ourwares/yprintf.c **** 	if (sw == 0)
  38              		.loc 1 23 0
  39 0006 10B5     		push	{r4, lr}
  40              	.LCFI0:
  41              		.cfi_def_cfa_offset 8
  42              		.cfi_offset 4, -8
  43              		.cfi_offset 14, -4
  44 0008 84B0     		sub	sp, sp, #16
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 24
  47              	.LBB2:
  25:Ourwares/yprintf.c **** 	{
  26:Ourwares/yprintf.c **** 		sw = -1;
  48              		.loc 1 26 0
  49 000a FF22     		movs	r2, #255
  50 000c 094B     		ldr	r3, .L5
  51 000e 1A70     		strb	r2, [r3]
  27:Ourwares/yprintf.c **** 		osSemaphoreDef(vsnprintfSemaphore);
  52              		.loc 1 27 0
  53 0010 094B     		ldr	r3, .L5+4
  54 0012 0FCB     		ldmia	r3, {r0, r1, r2, r3}
  55 0014 8DE80F00 		stmia	sp, {r0, r1, r2, r3}
  28:Ourwares/yprintf.c **** 		vsnprintfSemaphoreHandle = osSemaphoreCreate(osSemaphore(vsnprintfSemaphore), 1);
  56              		.loc 1 28 0
  57 0018 0121     		movs	r1, #1
  58 001a 6846     		mov	r0, sp
  59 001c FFF7FEFF 		bl	osSemaphoreCreate
  60              	.LVL0:
  61 0020 064B     		ldr	r3, .L5+8
  62 0022 1860     		str	r0, [r3]
  63              	.LBE2:
  29:Ourwares/yprintf.c **** 	}
  30:Ourwares/yprintf.c **** 	return sw;
  31:Ourwares/yprintf.c **** }
  64              		.loc 1 31 0
  65 0024 034B     		ldr	r3, .L5
  66 0026 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
  67 0028 04B0     		add	sp, sp, #16
  68              	.LCFI2:
  69              		.cfi_def_cfa_offset 8
  70              		@ sp needed
  71 002a 10BD     		pop	{r4, pc}
  72              	.L4:
  73              	.LCFI3:
  74              		.cfi_def_cfa_offset 0
  75              		.cfi_restore 4
  76              		.cfi_restore 14
  77 002c 014B     		ldr	r3, .L5
  78 002e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
  79 0030 7047     		bx	lr
  80              	.L6:
  81 0032 00BF     		.align	2
  82              	.L5:
  83 0034 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/ccCgTiro.s 			page 3


  84 0038 00000000 		.word	.LANCHOR1
  85 003c 00000000 		.word	vsnprintfSemaphoreHandle
  86              		.cfi_endproc
  87              	.LFE293:
  89              		.section	.text.yprintf,"ax",%progbits
  90              		.align	2
  91              		.global	yprintf
  92              		.thumb
  93              		.thumb_func
  95              	yprintf:
  96              	.LFB294:
  32:Ourwares/yprintf.c **** /* **************************************************************************************
  33:Ourwares/yprintf.c ****  * int yprintf(struct SERIALSENDTASKCB** ppbcb, const char *fmt, ...);
  34:Ourwares/yprintf.c ****  * @brief	: 'printf' for uarts
  35:Ourwares/yprintf.c ****  * @param	: pbcb = pointer to pointer to stuct with uart pointers and buffer parameters
  36:Ourwares/yprintf.c ****  * @param	: format = usual printf format
  37:Ourwares/yprintf.c ****  * @param	: ... = usual printf arguments
  38:Ourwares/yprintf.c ****  * @return	: Number of chars "printed"
  39:Ourwares/yprintf.c ****  * ************************************************************************************** */
  40:Ourwares/yprintf.c **** int yprintf(struct SERIALSENDTASKBCB** ppbcb, const char *fmt, ...)
  41:Ourwares/yprintf.c **** {
  97              		.loc 1 41 0
  98              		.cfi_startproc
  99              		@ args = 4, pretend = 12, frame = 8
 100              		@ frame_needed = 0, uses_anonymous_args = 1
 101              	.LVL1:
 102 0000 0EB4     		push	{r1, r2, r3}
 103              	.LCFI4:
 104              		.cfi_def_cfa_offset 12
 105              		.cfi_offset 1, -12
 106              		.cfi_offset 2, -8
 107              		.cfi_offset 3, -4
 108 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 109              	.LCFI5:
 110              		.cfi_def_cfa_offset 32
 111              		.cfi_offset 4, -32
 112              		.cfi_offset 5, -28
 113              		.cfi_offset 6, -24
 114              		.cfi_offset 7, -20
 115              		.cfi_offset 14, -16
 116 0004 82B0     		sub	sp, sp, #8
 117              	.LCFI6:
 118              		.cfi_def_cfa_offset 40
 119 0006 0646     		mov	r6, r0
 120 0008 07AD     		add	r5, sp, #28
 121 000a 55F8047B 		ldr	r7, [r5], #4
  42:Ourwares/yprintf.c **** 	struct SERIALSENDTASKBCB* pbcb = *ppbcb;
 122              		.loc 1 42 0
 123 000e 0468     		ldr	r4, [r0]
 124              	.LVL2:
  43:Ourwares/yprintf.c **** 	va_list argp;
  44:Ourwares/yprintf.c **** 
  45:Ourwares/yprintf.c **** 	yprintf_init();	// JIC not init'd
 125              		.loc 1 45 0
 126 0010 FFF7FEFF 		bl	yprintf_init
 127              	.LVL3:
  46:Ourwares/yprintf.c **** 
ARM GAS  /tmp/ccCgTiro.s 			page 4


  47:Ourwares/yprintf.c **** 	/* Block if this buffer is not available. SerialSendTask will 'give' the semaphore 
  48:Ourwares/yprintf.c ****       when the buffer has been sent. */
  49:Ourwares/yprintf.c **** 	xSemaphoreTake(pbcb->semaphore, 6000);
 128              		.loc 1 49 0
 129 0014 41F27071 		movw	r1, #6000
 130 0018 A068     		ldr	r0, [r4, #8]
 131 001a FFF7FEFF 		bl	xQueueSemaphoreTake
 132              	.LVL4:
  50:Ourwares/yprintf.c **** 
  51:Ourwares/yprintf.c **** 	/* Block if vsnprintf is being uses by someone else. */
  52:Ourwares/yprintf.c **** 	xSemaphoreTake( vsnprintfSemaphoreHandle, portMAX_DELAY );
 133              		.loc 1 52 0
 134 001e 4FF0FF31 		mov	r1, #-1
 135 0022 124B     		ldr	r3, .L12
 136 0024 1868     		ldr	r0, [r3]
 137 0026 FFF7FEFF 		bl	xQueueSemaphoreTake
 138              	.LVL5:
  53:Ourwares/yprintf.c **** 
  54:Ourwares/yprintf.c **** 	/* Construct line of data.  Stop filling buffer if it is full. */
  55:Ourwares/yprintf.c **** 	va_start(argp, fmt);
  56:Ourwares/yprintf.c **** 	va_start(argp, fmt);
 139              		.loc 1 56 0
 140 002a 0195     		str	r5, [sp, #4]
  57:Ourwares/yprintf.c **** 	pbcb->size = vsnprintf((char*)(pbcb->pbuf),pbcb->maxsize, fmt, argp);
 141              		.loc 1 57 0
 142 002c 2B46     		mov	r3, r5
 143 002e 3A46     		mov	r2, r7
 144 0030 618A     		ldrh	r1, [r4, #18]
 145 0032 E068     		ldr	r0, [r4, #12]
 146 0034 FFF7FEFF 		bl	vsnprintf
 147              	.LVL6:
 148 0038 2082     		strh	r0, [r4, #16]	@ movhi
  58:Ourwares/yprintf.c **** 	va_end(argp);
  59:Ourwares/yprintf.c **** 
  60:Ourwares/yprintf.c **** 	/* Limit byte count in BCB to be put on queue, from vsnprintf to max buffer sizes. */
  61:Ourwares/yprintf.c **** 	if (pbcb->size > pbcb->maxsize) 
 149              		.loc 1 61 0
 150 003a 80B2     		uxth	r0, r0
 151 003c 638A     		ldrh	r3, [r4, #18]
 152 003e 9842     		cmp	r0, r3
 153 0040 00D9     		bls	.L8
  62:Ourwares/yprintf.c **** 			pbcb->size = pbcb->maxsize;
 154              		.loc 1 62 0
 155 0042 2382     		strh	r3, [r4, #16]	@ movhi
 156              	.L8:
  63:Ourwares/yprintf.c **** 
  64:Ourwares/yprintf.c **** 	/* Release semaphore controlling vsnprintf. */
  65:Ourwares/yprintf.c **** 	xSemaphoreGive( vsnprintfSemaphoreHandle );
 157              		.loc 1 65 0
 158 0044 0023     		movs	r3, #0
 159 0046 1A46     		mov	r2, r3
 160 0048 1946     		mov	r1, r3
 161 004a 0848     		ldr	r0, .L12
 162 004c 0068     		ldr	r0, [r0]
 163 004e FFF7FEFF 		bl	xQueueGenericSend
 164              	.LVL7:
  66:Ourwares/yprintf.c **** 
ARM GAS  /tmp/ccCgTiro.s 			page 5


  67:Ourwares/yprintf.c **** 	/* JIC */
  68:Ourwares/yprintf.c **** 	if (pbcb->size == 0) return 0;
 165              		.loc 1 68 0
 166 0052 238A     		ldrh	r3, [r4, #16]
 167 0054 23B1     		cbz	r3, .L10
  69:Ourwares/yprintf.c **** 
  70:Ourwares/yprintf.c **** 	/* Place Buffer Control Block on queue to SerialTaskSend */
  71:Ourwares/yprintf.c **** 	vSerialTaskSendQueueBuf(ppbcb); // Place on queue
 168              		.loc 1 71 0
 169 0056 3046     		mov	r0, r6
 170 0058 FFF7FEFF 		bl	vSerialTaskSendQueueBuf
 171              	.LVL8:
  72:Ourwares/yprintf.c **** 
  73:Ourwares/yprintf.c **** 	return pbcb->size;
 172              		.loc 1 73 0
 173 005c 208A     		ldrh	r0, [r4, #16]
 174 005e 00E0     		b	.L9
 175              	.L10:
  68:Ourwares/yprintf.c **** 
 176              		.loc 1 68 0
 177 0060 0020     		movs	r0, #0
 178              	.L9:
  74:Ourwares/yprintf.c **** }
 179              		.loc 1 74 0
 180 0062 02B0     		add	sp, sp, #8
 181              	.LCFI7:
 182              		.cfi_def_cfa_offset 32
 183              		@ sp needed
 184 0064 BDE8F040 		pop	{r4, r5, r6, r7, lr}
 185              	.LCFI8:
 186              		.cfi_restore 14
 187              		.cfi_restore 7
 188              		.cfi_restore 6
 189              		.cfi_restore 5
 190              		.cfi_restore 4
 191              		.cfi_def_cfa_offset 12
 192              	.LVL9:
 193 0068 03B0     		add	sp, sp, #12
 194              	.LCFI9:
 195              		.cfi_restore 3
 196              		.cfi_restore 2
 197              		.cfi_restore 1
 198              		.cfi_def_cfa_offset 0
 199 006a 7047     		bx	lr
 200              	.L13:
 201              		.align	2
 202              	.L12:
 203 006c 00000000 		.word	vsnprintfSemaphoreHandle
 204              		.cfi_endproc
 205              	.LFE294:
 207              		.section	.text.yputs,"ax",%progbits
 208              		.align	2
 209              		.global	yputs
 210              		.thumb
 211              		.thumb_func
 213              	yputs:
 214              	.LFB295:
ARM GAS  /tmp/ccCgTiro.s 			page 6


  75:Ourwares/yprintf.c **** /* **************************************************************************************
  76:Ourwares/yprintf.c ****  * int yputs(struct SERIALSENDTASKBCB** ppbcb, char* pchr);
  77:Ourwares/yprintf.c ****  * @brief	: Send zero terminated string to SerialTaskSend
  78:Ourwares/yprintf.c ****  * @param	: pbcb = pointer to pointer to stuct with uart pointers and buffer parameters
  79:Ourwares/yprintf.c ****  * @return	: Number of chars sent
  80:Ourwares/yprintf.c ****  * ************************************************************************************** */
  81:Ourwares/yprintf.c **** int yputs(struct SERIALSENDTASKBCB** ppbcb, char* pchr)
  82:Ourwares/yprintf.c **** {
 215              		.loc 1 82 0
 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 0
 218              		@ frame_needed = 0, uses_anonymous_args = 0
 219              	.LVL10:
 220 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 221              	.LCFI10:
 222              		.cfi_def_cfa_offset 24
 223              		.cfi_offset 3, -24
 224              		.cfi_offset 4, -20
 225              		.cfi_offset 5, -16
 226              		.cfi_offset 6, -12
 227              		.cfi_offset 7, -8
 228              		.cfi_offset 14, -4
 229 0002 0546     		mov	r5, r0
 230 0004 0E46     		mov	r6, r1
  83:Ourwares/yprintf.c **** 	struct SERIALSENDTASKBCB* pbcb = *ppbcb;
 231              		.loc 1 83 0
 232 0006 0468     		ldr	r4, [r0]
 233              	.LVL11:
  84:Ourwares/yprintf.c **** 	int sz = strlen(pchr); // Check length of input string
 234              		.loc 1 84 0
 235 0008 0846     		mov	r0, r1
 236              	.LVL12:
 237 000a FFF7FEFF 		bl	strlen
 238              	.LVL13:
  85:Ourwares/yprintf.c **** 	if (sz == 0) return 0;
 239              		.loc 1 85 0
 240 000e A8B1     		cbz	r0, .L18
 241 0010 0746     		mov	r7, r0
  86:Ourwares/yprintf.c **** 
  87:Ourwares/yprintf.c **** 	/* Block if this buffer is not available. SerialSendTask will 'give' the semaphore 
  88:Ourwares/yprintf.c ****       when the buffer has been sent. */
  89:Ourwares/yprintf.c **** 	xSemaphoreTake(pbcb->semaphore, 3000);
 242              		.loc 1 89 0
 243 0012 40F6B831 		movw	r1, #3000
 244 0016 A068     		ldr	r0, [r4, #8]
 245              	.LVL14:
 246 0018 FFF7FEFF 		bl	xQueueSemaphoreTake
 247              	.LVL15:
  90:Ourwares/yprintf.c **** 
  91:Ourwares/yprintf.c **** 	strncpy((char*)pbcb->pbuf,pchr,pbcb->maxsize);	// Copy and limit size.
 248              		.loc 1 91 0
 249 001c 628A     		ldrh	r2, [r4, #18]
 250 001e 3146     		mov	r1, r6
 251 0020 E068     		ldr	r0, [r4, #12]
 252 0022 FFF7FEFF 		bl	strncpy
 253              	.LVL16:
  92:Ourwares/yprintf.c **** 
ARM GAS  /tmp/ccCgTiro.s 			page 7


  93:Ourwares/yprintf.c **** 	/* Set size serial send will use. */
  94:Ourwares/yprintf.c **** 	if (sz >= pbcb->maxsize)	// Did strcpy truncate?
 254              		.loc 1 94 0
 255 0026 638A     		ldrh	r3, [r4, #18]
 256 0028 9F42     		cmp	r7, r3
 257 002a 01DB     		blt	.L16
  95:Ourwares/yprintf.c **** 		pbcb->size = pbcb->maxsize;	// Yes
 258              		.loc 1 95 0
 259 002c 2382     		strh	r3, [r4, #16]	@ movhi
 260 002e 00E0     		b	.L17
 261              	.L16:
  96:Ourwares/yprintf.c **** 	else
  97:Ourwares/yprintf.c **** 		pbcb->size = sz;	// No
 262              		.loc 1 97 0
 263 0030 2782     		strh	r7, [r4, #16]	@ movhi
 264              	.L17:
  98:Ourwares/yprintf.c **** 
  99:Ourwares/yprintf.c **** 	vSerialTaskSendQueueBuf(ppbcb); // Place on queue
 265              		.loc 1 99 0
 266 0032 2846     		mov	r0, r5
 267 0034 FFF7FEFF 		bl	vSerialTaskSendQueueBuf
 268              	.LVL17:
 100:Ourwares/yprintf.c **** 	return pbcb->size; 
 269              		.loc 1 100 0
 270 0038 208A     		ldrh	r0, [r4, #16]
 271 003a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 272              	.LVL18:
 273              	.L18:
  85:Ourwares/yprintf.c **** 
 274              		.loc 1 85 0
 275 003c 0020     		movs	r0, #0
 276              	.LVL19:
 101:Ourwares/yprintf.c **** }
 277              		.loc 1 101 0
 278 003e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 279              		.cfi_endproc
 280              	.LFE295:
 282              		.comm	vsnprintfSemaphoreHandle,4,4
 283              		.section	.rodata
 284              		.align	2
 285              		.set	.LANCHOR1,. + 0
 286              	.LC1:
 287 0000 00000000 		.word	0
 288 0004 00000000 		.word	0
 289 0008 00000000 		.word	os_semaphore_cb_vsnprintfSemaphore.10351
 290 000c 50000000 		.word	80
 291              		.section	.bss.sw,"aw",%nobits
 292              		.set	.LANCHOR0,. + 0
 295              	sw:
 296 0000 00       		.space	1
 297              		.section	.bss.os_semaphore_cb_vsnprintfSemaphore.10351,"aw",%nobits
 298              		.align	2
 301              	os_semaphore_cb_vsnprintfSemaphore.10351:
 302 0000 00000000 		.space	80
 302      00000000 
 302      00000000 
 302      00000000 
ARM GAS  /tmp/ccCgTiro.s 			page 8


 302      00000000 
 303              		.text
 304              	.Letext0:
 305              		.file 2 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_t
 306              		.file 3 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 307              		.file 4 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/lib/gcc/arm-none-eabi/5.4.1/include/stda
 308              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l431xx.h"
 309              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 310              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 311              		.file 8 "<built-in>"
 312              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 313              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 314              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 315              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 316              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 317              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 318              		.file 15 "Ourwares/SerialTaskSend.h"
 319              		.file 16 "Drivers/CMSIS/Include/cmsis_gcc.h"
 320              		.file 17 "Drivers/CMSIS/Include/core_cm4.h"
 321              		.file 18 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os.h"
 322              		.file 19 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/stdio.h"
 323              		.file 20 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/string.h"
ARM GAS  /tmp/ccCgTiro.s 			page 9


DEFINED SYMBOLS
                            *ABS*:00000000 yprintf.c
     /tmp/ccCgTiro.s:22     .text.yprintf_init:00000000 $t
     /tmp/ccCgTiro.s:27     .text.yprintf_init:00000000 yprintf_init
     /tmp/ccCgTiro.s:83     .text.yprintf_init:00000034 $d
                            *COM*:00000004 vsnprintfSemaphoreHandle
     /tmp/ccCgTiro.s:90     .text.yprintf:00000000 $t
     /tmp/ccCgTiro.s:95     .text.yprintf:00000000 yprintf
     /tmp/ccCgTiro.s:203    .text.yprintf:0000006c $d
     /tmp/ccCgTiro.s:208    .text.yputs:00000000 $t
     /tmp/ccCgTiro.s:213    .text.yputs:00000000 yputs
     /tmp/ccCgTiro.s:284    .rodata:00000000 $d
     /tmp/ccCgTiro.s:301    .bss.os_semaphore_cb_vsnprintfSemaphore.10351:00000000 os_semaphore_cb_vsnprintfSemaphore.10351
     /tmp/ccCgTiro.s:295    .bss.sw:00000000 sw
     /tmp/ccCgTiro.s:296    .bss.sw:00000000 $d
     /tmp/ccCgTiro.s:298    .bss.os_semaphore_cb_vsnprintfSemaphore.10351:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
osSemaphoreCreate
xQueueSemaphoreTake
vsnprintf
xQueueGenericSend
vSerialTaskSendQueueBuf
strlen
strncpy

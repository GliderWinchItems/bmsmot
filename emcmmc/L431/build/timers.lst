ARM GAS  /tmp/cctEhCXu.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"timers.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.prvGetNextExpireTime,"ax",%progbits
  22              		.align	2
  23              		.thumb
  24              		.thumb_func
  26              	prvGetNextExpireTime:
  27              	.LFB18:
  28              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/timers.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * FreeRTOS Kernel V10.3.1
   3:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Standard includes. */
  29:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include <stdlib.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
ARM GAS  /tmp/cctEhCXu.s 			page 2


  31:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  32:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** all the API functions to use the MPU wrappers.  That should only be done when
  33:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** task.h is included from an application file. */
  34:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  35:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "FreeRTOS.h"
  37:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "task.h"
  38:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "queue.h"
  39:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "timers.h"
  40:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  41:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_TIMERS == 0 )
  42:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#error configUSE_TIMERS must be set to 1 to make the xTimerPendFunctionCall() function available.
  43:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif
  44:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  45:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  46:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  47:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** for the header files above, but not in this file, in order to generate the
  48:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** correct privileged Vs unprivileged linkage and placement. */
  49:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e9021 !e961 !e750. */
  50:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  51:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  52:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* This entire source file will be skipped if the application is not configured
  53:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** to include software timer functionality.  This #if is closed at the very bottom
  54:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** of this file.  If you want to include software timer functionality then ensure
  55:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** configUSE_TIMERS is set to 1 in FreeRTOSConfig.h. */
  56:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( configUSE_TIMERS == 1 )
  57:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  58:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Misc definitions. */
  59:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define tmrNO_DELAY		( TickType_t ) 0U
  60:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  61:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The name assigned to the timer service task.  This can be overridden by
  62:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** defining trmTIMER_SERVICE_TASK_NAME in FreeRTOSConfig.h. */
  63:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #ifndef configTIMER_SERVICE_TASK_NAME
  64:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#define configTIMER_SERVICE_TASK_NAME "Tmr Svc"
  65:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif
  66:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Bit definitions used in the ucStatus member of a timer structure. */
  68:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define tmrSTATUS_IS_ACTIVE					( ( uint8_t ) 0x01 )
  69:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define tmrSTATUS_IS_STATICALLY_ALLOCATED	( ( uint8_t ) 0x02 )
  70:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define tmrSTATUS_IS_AUTORELOAD				( ( uint8_t ) 0x04 )
  71:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The definition of the timers themselves. */
  73:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerControl /* The old naming convention is used to prevent breaking kernel awar
  74:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  75:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	const char				*pcTimerName;		/*<< Text name.  This is not used by the kernel, it is included simpl
  76:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	ListItem_t				xTimerListItem;		/*<< Standard linked list item as used by all kernel features for e
  77:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TickType_t				xTimerPeriodInTicks;/*<< How quickly and often the timer expires. */
  78:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	void 					*pvTimerID;			/*<< An ID to identify the timer.  This allows the timer to be identified 
  79:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerCallbackFunction_t	pxCallbackFunction;	/*<< The function that will be called when the timer e
  80:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#if( configUSE_TRACE_FACILITY == 1 )
  81:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		UBaseType_t			uxTimerNumber;		/*<< An ID assigned by trace tools such as FreeRTOS+Trace */
  82:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#endif
  83:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	uint8_t 				ucStatus;			/*<< Holds bits to say if the timer was statically allocated or not, and i
  84:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } xTIMER;
  85:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  86:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The old xTIMER name is maintained above then typedefed to the new Timer_t
  87:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** name below to enable the use of older kernel aware debuggers. */
ARM GAS  /tmp/cctEhCXu.s 			page 3


  88:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef xTIMER Timer_t;
  89:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The definition of messages that can be sent and received on the timer queue.
  91:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Two types of message can be queued - messages that manipulate a software timer,
  92:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** and messages that request the execution of a non-timer related callback.  The
  93:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** two message types are defined in two separate structures, xTimerParametersType
  94:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** and xCallbackParametersType respectively. */
  95:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerParameters
  96:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  97:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TickType_t			xMessageValue;		/*<< An optional value used by a subset of commands, for example, whe
  98:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *			pxTimer;			/*<< The timer to which the command will be applied. */
  99:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } TimerParameter_t;
 100:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 101:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 102:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrCallbackParameters
 103:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 104:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	PendedFunction_t	pxCallbackFunction;	/* << The callback function to execute. */
 105:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	void *pvParameter1;						/* << The value that will be used as the callback functions first paramet
 106:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	uint32_t ulParameter2;					/* << The value that will be used as the callback functions second para
 107:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } CallbackParameters_t;
 108:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 109:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The structure that contains the two message types, along with an identifier
 110:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** that is used to determine which message type is valid. */
 111:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerQueueMessage
 112:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 113:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t			xMessageID;			/*<< The command being sent to the timer service task. */
 114:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	union
 115:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 116:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		TimerParameter_t xTimerParameters;
 117:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 118:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Don't include xCallbackParameters if it is not going to be used as
 119:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		it makes the structure (and therefore the timer queue) larger. */
 120:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if ( INCLUDE_xTimerPendFunctionCall == 1 )
 121:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			CallbackParameters_t xCallbackParameters;
 122:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* INCLUDE_xTimerPendFunctionCall */
 123:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	} u;
 124:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } DaemonTaskMessage_t;
 125:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 126:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 127:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** which static variables must be declared volatile. */
 128:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The list in which active timers are stored.  Timers are referenced in expire
 130:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** time order, with the nearest expiry time at the front of the list.  Only the
 131:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** timer service task is allowed to access these lists.
 132:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** xActiveTimerList1 and xActiveTimerList2 could be at function scope but that
 133:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** breaks some kernel aware debuggers, and debuggers that reply on removing the
 134:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static qualifier. */
 135:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t xActiveTimerList1;
 136:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t xActiveTimerList2;
 137:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t *pxCurrentTimerList;
 138:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t *pxOverflowTimerList;
 139:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 140:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* A queue that is used to send commands to the timer service task. */
 141:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static QueueHandle_t xTimerQueue = NULL;
 142:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static TaskHandle_t xTimerTaskHandle = NULL;
 143:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 144:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*lint -restore */
ARM GAS  /tmp/cctEhCXu.s 			page 4


 145:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 146:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 147:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 148:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 149:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 150:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If static allocation is supported then the application must provide the
 151:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	following callback function - which enables the application to optionally
 152:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	provide the memory that will be used by the timer task as the task's stack
 153:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	and TCB. */
 154:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	extern void vApplicationGetTimerTaskMemory( StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **pp
 155:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 156:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif
 157:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 158:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 159:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Initialise the infrastructure used by the timer service task if it has not
 160:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * been initialised already.
 161:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 162:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvCheckForValidListAndQueue( void ) PRIVILEGED_FUNCTION;
 163:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 164:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 165:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * The timer service task (daemon).  Timer functionality is controlled by this
 166:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * task.  Other tasks communicate with the timer service task using the
 167:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * xTimerQueue queue.
 168:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 169:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static portTASK_FUNCTION_PROTO( prvTimerTask, pvParameters ) PRIVILEGED_FUNCTION;
 170:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 171:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 172:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Called by the timer service task to interpret and process a command it
 173:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * received on the timer queue.
 174:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 175:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessReceivedCommands( void ) PRIVILEGED_FUNCTION;
 176:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 178:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Insert the timer into either xActiveTimerList1, or xActiveTimerList2,
 179:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * depending on if the expire time causes a timer counter overflow.
 180:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 181:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiry
 182:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 183:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 184:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * An active timer has reached its expire time.  Reload the timer if it is an
 185:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * auto-reload timer, then call its callback.
 186:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 187:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessExpiredTimer( const TickType_t xNextExpireTime, const TickType_t xTimeNow ) P
 188:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 190:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * The tick count has overflowed.  Switch the timer lists after ensuring the
 191:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * current timer list does not still reference some timers.
 192:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 193:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvSwitchTimerLists( void ) PRIVILEGED_FUNCTION;
 194:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 196:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Obtain the current tick count, setting *pxTimerListsWereSwitched to pdTRUE
 197:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * if a tick count overflow occurred since prvSampleTimeNow() was last called.
 198:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 199:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched ) PRIVILEGED_FUNCTI
 200:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 201:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
ARM GAS  /tmp/cctEhCXu.s 			page 5


 202:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * If the timer list contains any active timers then return the expire time of
 203:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * the timer that will expire first and set *pxListWasEmpty to false.  If the
 204:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * timer list does not contain any timers then return 0 and set *pxListWasEmpty
 205:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * to pdTRUE.
 206:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 207:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty ) PRIVILEGED_FUNCTION;
 208:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 209:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 210:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * If a timer has expired, process it.  Otherwise, block the timer service task
 211:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * until either a timer does expire or a command is received.
 212:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 213:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime, BaseType_t xListWasEmpty 
 214:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 215:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 216:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Called after a Timer_t structure has been allocated either statically or
 217:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * dynamically to fill in the structure's members.
 218:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 219:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvInitialiseNewTimer(	const char * const pcTimerName,			/*lint !e971 Unqualified char 
 220:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const TickType_t xTimerPeriodInTicks,
 221:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const UBaseType_t uxAutoReload,
 222:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									void * const pvTimerID,
 223:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									TimerCallbackFunction_t pxCallbackFunction,
 224:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									Timer_t *pxNewTimer ) PRIVILEGED_FUNCTION;
 225:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 226:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 227:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerCreateTimerTask( void )
 228:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 229:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 230:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 231:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* This function is called when the scheduler is started if
 232:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configUSE_TIMERS is set to 1.  Check that the infrastructure used by the
 233:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	timer service task has been created/initialised.  If timers have already
 234:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	been created then the initialisation will already have been performed. */
 235:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	prvCheckForValidListAndQueue();
 236:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 237:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimerQueue != NULL )
 238:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 239:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 240:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 241:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 242:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			StackType_t *pxTimerTaskStackBuffer = NULL;
 243:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			uint32_t ulTimerTaskStackSize;
 244:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 245:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStac
 246:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 247:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													configTIMER_SERVICE_TASK_NAME,
 248:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													ulTimerTaskStackSize,
 249:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													NULL,
 250:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT,
 251:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													pxTimerTaskStackBuffer,
 252:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													pxTimerTaskTCBBuffer );
 253:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 254:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xTimerTaskHandle != NULL )
 255:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 256:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = pdPASS;
 257:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 258:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
ARM GAS  /tmp/cctEhCXu.s 			page 6


 259:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#else
 260:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 261:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReturn = xTaskCreate(	prvTimerTask,
 262:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									configTIMER_SERVICE_TASK_NAME,
 263:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									configTIMER_TASK_STACK_DEPTH,
 264:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									NULL,
 265:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT,
 266:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									&xTimerTaskHandle );
 267:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 268:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* configSUPPORT_STATIC_ALLOCATION */
 269:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 270:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 271:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 272:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 273:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 274:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 275:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xReturn );
 276:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 277:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 278:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 279:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 280:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 281:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 282:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerHandle_t xTimerCreate(	const char * const pcTimerName,			/*lint !e971 Unqualified char types 
 283:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								const TickType_t xTimerPeriodInTicks,
 284:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								const UBaseType_t uxAutoReload,
 285:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								void * const pvTimerID,
 286:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								TimerCallbackFunction_t pxCallbackFunction )
 287:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 288:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 289:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 290:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pvPortMalloc( sizeof( Timer_t ) ); /*lint !e9087 !e9079 All values ret
 291:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 292:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( pxNewTimer != NULL )
 293:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 294:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Status is thus far zero as the timer is not created statically
 295:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			and has not been started.  The auto-reload bit may get set in
 296:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			prvInitialiseNewTimer. */
 297:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxNewTimer->ucStatus = 0x00;
 298:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 299:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 300:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 301:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return pxNewTimer;
 302:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 303:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 304:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 305:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 306:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 307:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 308:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 309:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerHandle_t xTimerCreateStatic(	const char * const pcTimerName,		/*lint !e971 Unqualified char t
 310:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										const TickType_t xTimerPeriodInTicks,
 311:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										const UBaseType_t uxAutoReload,
 312:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										void * const pvTimerID,
 313:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										TimerCallbackFunction_t pxCallbackFunction,
 314:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										StaticTimer_t *pxTimerBuffer )
 315:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
ARM GAS  /tmp/cctEhCXu.s 			page 7


 316:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 317:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 318:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if( configASSERT_DEFINED == 1 )
 319:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 320:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Sanity check that the size of the structure used to declare a
 321:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			variable of type StaticTimer_t equals the size of the real timer
 322:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			structure. */
 323:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			volatile size_t xSize = sizeof( StaticTimer_t );
 324:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xSize == sizeof( Timer_t ) );
 325:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 326:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 327:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* configASSERT_DEFINED */
 328:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 329:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* A pointer to a StaticTimer_t structure MUST be provided, use it. */
 330:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		configASSERT( pxTimerBuffer );
 331:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 !e9087 StaticTimer_t is a pointer to a Tim
 332:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 333:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( pxNewTimer != NULL )
 334:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 335:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Timers can be created statically or dynamically so note this
 336:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			timer was created statically in case it is later deleted.  The
 337:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			auto-reload bit may get set in prvInitialiseNewTimer(). */
 338:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxNewTimer->ucStatus = tmrSTATUS_IS_STATICALLY_ALLOCATED;
 339:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 340:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 341:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 342:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 343:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return pxNewTimer;
 344:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 345:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 346:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 347:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 348:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 349:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvInitialiseNewTimer(	const char * const pcTimerName,			/*lint !e971 Unqualified char 
 350:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const TickType_t xTimerPeriodInTicks,
 351:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const UBaseType_t uxAutoReload,
 352:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									void * const pvTimerID,
 353:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									TimerCallbackFunction_t pxCallbackFunction,
 354:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									Timer_t *pxNewTimer )
 355:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 356:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* 0 is not a valid value for xTimerPeriodInTicks. */
 357:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( ( xTimerPeriodInTicks > 0 ) );
 358:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 359:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( pxNewTimer != NULL )
 360:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 361:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Ensure the infrastructure used by the timer service task has been
 362:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		created/initialised. */
 363:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvCheckForValidListAndQueue();
 364:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 365:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Initialise the timer structure members using the function
 366:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		parameters. */
 367:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pcTimerName = pcTimerName;
 368:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 369:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pvTimerID = pvTimerID;
 370:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 371:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 372:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( uxAutoReload != pdFALSE )
ARM GAS  /tmp/cctEhCXu.s 			page 8


 373:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 374:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxNewTimer->ucStatus |= tmrSTATUS_IS_AUTORELOAD;
 375:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 376:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_CREATE( pxNewTimer );
 377:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 378:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 379:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 380:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 381:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerGenericCommand( TimerHandle_t xTimer, const BaseType_t xCommandID, const TickType_
 382:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 383:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 384:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 385:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 386:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 387:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 388:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Send a message to the timer service task to perform a particular action
 389:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	on a particular timer definition. */
 390:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimerQueue != NULL )
 391:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 392:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Send a command to the timer service task to start the xTimer timer. */
 393:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.xMessageID = xCommandID;
 394:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 395:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.pxTimer = xTimer;
 396:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 397:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 398:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 399:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 400:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 401:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 402:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 403:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 404:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 405:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 406:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 407:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 408:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 409:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 410:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 411:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 412:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 413:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_COMMAND_SEND( xTimer, xCommandID, xOptionalValue, xReturn );
 414:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 415:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 416:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 417:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 418:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 419:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 420:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 421:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 422:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 423:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 424:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TaskHandle_t xTimerGetTimerDaemonTaskHandle( void )
 425:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 426:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 427:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	started, then xTimerTaskHandle will be NULL. */
 428:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( ( xTimerTaskHandle != NULL ) );
 429:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimerTaskHandle;
ARM GAS  /tmp/cctEhCXu.s 			page 9


 430:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 431:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 432:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 433:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimerGetPeriod( TimerHandle_t xTimer )
 434:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 435:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = xTimer;
 436:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 437:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 438:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->xTimerPeriodInTicks;
 439:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 440:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 441:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 442:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void vTimerSetReloadMode( TimerHandle_t xTimer, const UBaseType_t uxAutoReload )
 443:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 444:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer =  xTimer;
 445:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 446:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 447:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 448:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 449:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( uxAutoReload != pdFALSE )
 450:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 451:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxTimer->ucStatus |= tmrSTATUS_IS_AUTORELOAD;
 452:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 453:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 454:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 455:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxTimer->ucStatus &= ~tmrSTATUS_IS_AUTORELOAD;
 456:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 457:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 458:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 459:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 460:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 461:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 462:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** UBaseType_t uxTimerGetReloadMode( TimerHandle_t xTimer )
 463:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 464:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer =  xTimer;
 465:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** UBaseType_t uxReturn;
 466:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 467:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 468:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 469:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 470:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) == 0 )
 471:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 472:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Not an auto-reload timer. */
 473:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			uxReturn = ( UBaseType_t ) pdFALSE;
 474:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 475:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 476:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 477:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Is an auto-reload timer. */
 478:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			uxReturn = ( UBaseType_t ) pdTRUE;
 479:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 480:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 481:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 482:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 483:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return uxReturn;
 484:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 485:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 486:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
ARM GAS  /tmp/cctEhCXu.s 			page 10


 487:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimerGetExpiryTime( TimerHandle_t xTimer )
 488:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 489:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer =  xTimer;
 490:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xReturn;
 491:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 492:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 493:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 494:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 495:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 496:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 497:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 498:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** const char * pcTimerGetName( TimerHandle_t xTimer ) /*lint !e971 Unqualified char types are allowed
 499:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 500:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = xTimer;
 501:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 502:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 503:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->pcTimerName;
 504:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 505:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 506:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 507:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessExpiredTimer( const TickType_t xNextExpireTime, const TickType_t xTimeNow )
 508:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 509:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xResult;
 510:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !
 511:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 512:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Remove the timer from the list of active timers.  A check has already
 513:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	been performed to ensure the list is not empty. */
 514:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 515:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	traceTIMER_EXPIRED( pxTimer );
 516:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 517:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If the timer is an auto-reload timer then calculate the next
 518:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	expiry time and re-insert the timer in the list of active timers. */
 519:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 520:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 521:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* The timer is inserted into a list using a time relative to anything
 522:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		other than the current time.  It will therefore be inserted into the
 523:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		correct list relative to the time this task thinks it is now. */
 524:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTim
 525:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 526:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The timer expired before it was added to the active timer
 527:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			list.  Reload it now.  */
 528:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmr
 529:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xResult );
 530:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xResult;
 531:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 532:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 533:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 534:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 535:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 536:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 537:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 538:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 539:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 540:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 541:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 542:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 543:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Call the timer callback. */
ARM GAS  /tmp/cctEhCXu.s 			page 11


 544:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 545:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 546:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 547:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 548:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static portTASK_FUNCTION( prvTimerTask, pvParameters )
 549:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 550:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 551:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xListWasEmpty;
 552:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 553:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Just to avoid compiler warnings. */
 554:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	( void ) pvParameters;
 555:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 556:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#if( configUSE_DAEMON_TASK_STARTUP_HOOK == 1 )
 557:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 558:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		extern void vApplicationDaemonTaskStartupHook( void );
 559:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 560:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Allow the application writer to execute some code in the context of
 561:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		this task at the point the task starts executing.  This is useful if the
 562:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		application includes initialisation code that would benefit from
 563:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		executing after the scheduler has been started. */
 564:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vApplicationDaemonTaskStartupHook();
 565:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 566:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#endif /* configUSE_DAEMON_TASK_STARTUP_HOOK */
 567:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 568:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	for( ;; )
 569:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 570:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Query the timers list to see if it contains any timers, and if so,
 571:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		obtain the time at which the next timer will expire. */
 572:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = prvGetNextExpireTime( &xListWasEmpty );
 573:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 574:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* If a timer has expired, process it.  Otherwise, block this task
 575:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		until either a timer does expire, or a command is received. */
 576:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvProcessTimerOrBlockTask( xNextExpireTime, xListWasEmpty );
 577:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 578:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Empty the command queue. */
 579:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvProcessReceivedCommands();
 580:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 581:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 582:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 583:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 584:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime, BaseType_t xListWasEmpty 
 585:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 586:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 587:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerListsWereSwitched;
 588:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 589:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	vTaskSuspendAll();
 590:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 591:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Obtain the time now to make an assessment as to whether the timer
 592:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		has expired or not.  If obtaining the time causes the lists to switch
 593:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		then don't process this timer as any timers that remained in the list
 594:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		when the lists were switched will have been processed within the
 595:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvSampleTimeNow() function. */
 596:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 597:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerListsWereSwitched == pdFALSE )
 598:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 599:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The tick count has not overflowed, has the timer expired? */
 600:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
ARM GAS  /tmp/cctEhCXu.s 			page 12


 601:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 602:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xTaskResumeAll();
 603:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 604:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 605:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 606:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 607:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The tick count has not overflowed, and the next expire
 608:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				time has not been reached yet.  This task should therefore
 609:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				block to wait for the next expire time or a command to be
 610:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				received - whichever comes first.  The following line cannot
 611:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				be reached unless xNextExpireTime > xTimeNow, except in the
 612:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case when the current timer list is empty. */
 613:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xListWasEmpty != pdFALSE )
 614:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 615:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The current timer list is empty - is the overflow list
 616:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					also empty? */
 617:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 618:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 619:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 620:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 621:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 622:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xTaskResumeAll() == pdFALSE )
 623:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 624:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Yield to wait for either a command to arrive, or the
 625:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					block time to expire.  If a command arrived between the
 626:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					critical section being exited and this yield then the yield
 627:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					will not cause the task to block. */
 628:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					portYIELD_WITHIN_API();
 629:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 630:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				else
 631:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 632:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					mtCOVERAGE_TEST_MARKER();
 633:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 634:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 635:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 636:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 637:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 638:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xTaskResumeAll();
 639:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 640:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 641:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 642:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 643:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 644:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty )
 645:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  29              		.loc 1 645 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
 646:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 647:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 648:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Timers are listed in expiry time order, with the head of the list
 649:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	referencing the task that will expire first.  Obtain the time at which
 650:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	the timer with the nearest expiry time will expire.  If there are no
 651:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	active timers then just set the next expire time to 0.  That will cause
ARM GAS  /tmp/cctEhCXu.s 			page 13


 652:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	this task to unblock when the tick count overflows, at which point the
 653:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	timer lists will be switched and the next expiry time can be
 654:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	re-assessed.  */
 655:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
  35              		.loc 1 655 0
  36 0000 064B     		ldr	r3, .L6
  37 0002 1A68     		ldr	r2, [r3]
  38 0004 1368     		ldr	r3, [r2]
  39 0006 0BB9     		cbnz	r3, .L4
  40 0008 0123     		movs	r3, #1
  41 000a 00E0     		b	.L2
  42              	.L4:
  43 000c 0023     		movs	r3, #0
  44              	.L2:
  45              		.loc 1 655 0 is_stmt 0 discriminator 4
  46 000e 0360     		str	r3, [r0]
 656:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( *pxListWasEmpty == pdFALSE )
  47              		.loc 1 656 0 is_stmt 1 discriminator 4
  48 0010 13B9     		cbnz	r3, .L5
 657:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 658:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
  49              		.loc 1 658 0
  50 0012 D368     		ldr	r3, [r2, #12]
  51 0014 1868     		ldr	r0, [r3]
  52              	.LVL1:
  53 0016 7047     		bx	lr
  54              	.LVL2:
  55              	.L5:
 659:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 660:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 661:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 662:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Ensure the task unblocks when the tick count rolls over. */
 663:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = ( TickType_t ) 0U;
  56              		.loc 1 663 0
  57 0018 0020     		movs	r0, #0
  58              	.LVL3:
 664:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 665:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 666:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xNextExpireTime;
 667:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
  59              		.loc 1 667 0
  60 001a 7047     		bx	lr
  61              	.L7:
  62              		.align	2
  63              	.L6:
  64 001c 00000000 		.word	.LANCHOR0
  65              		.cfi_endproc
  66              	.LFE18:
  68              		.section	.text.prvInsertTimerInActiveList,"ax",%progbits
  69              		.align	2
  70              		.thumb
  71              		.thumb_func
  73              	prvInsertTimerInActiveList:
  74              	.LFB20:
 668:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 669:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 670:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched )
ARM GAS  /tmp/cctEhCXu.s 			page 14


 671:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 672:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 673:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static TickType_t xLastTime = ( TickType_t ) 0U; /*lint !e956 Variable is only acce
 674:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 675:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xTimeNow = xTaskGetTickCount();
 676:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 677:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimeNow < xLastTime )
 678:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 679:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvSwitchTimerLists();
 680:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		*pxTimerListsWereSwitched = pdTRUE;
 681:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 682:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 683:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 684:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		*pxTimerListsWereSwitched = pdFALSE;
 685:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 686:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 687:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xLastTime = xTimeNow;
 688:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 689:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimeNow;
 690:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 691:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 692:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 693:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiry
 694:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  75              		.loc 1 694 0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79              	.LVL4:
  80 0000 08B5     		push	{r3, lr}
  81              	.LCFI0:
  82              		.cfi_def_cfa_offset 8
  83              		.cfi_offset 3, -8
  84              		.cfi_offset 14, -4
  85              	.LVL5:
 695:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xProcessTimerNow = pdFALSE;
 696:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 697:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
  86              		.loc 1 697 0
  87 0002 4160     		str	r1, [r0, #4]
 698:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
  88              		.loc 1 698 0
  89 0004 0061     		str	r0, [r0, #16]
 699:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 700:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xNextExpiryTime <= xTimeNow )
  90              		.loc 1 700 0
  91 0006 9142     		cmp	r1, r2
  92 0008 0AD8     		bhi	.L9
 701:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 702:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Has the expiry time elapsed between the command to start/reset a
 703:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		timer was issued, and the time the command was processed? */
 704:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961
  93              		.loc 1 704 0
  94 000a D21A     		subs	r2, r2, r3
  95              	.LVL6:
  96 000c 8369     		ldr	r3, [r0, #24]
  97              	.LVL7:
ARM GAS  /tmp/cctEhCXu.s 			page 15


  98 000e 9A42     		cmp	r2, r3
  99 0010 11D2     		bcs	.L12
 705:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 706:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The time between a command being issued and the command being
 707:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			processed actually exceeds the timers period.  */
 708:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xProcessTimerNow = pdTRUE;
 709:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 710:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 711:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 712:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 100              		.loc 1 712 0
 101 0012 011D     		adds	r1, r0, #4
 102              	.LVL8:
 103 0014 0A4B     		ldr	r3, .L15
 104 0016 1868     		ldr	r0, [r3]
 105              	.LVL9:
 106 0018 FFF7FEFF 		bl	vListInsert
 107              	.LVL10:
 695:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 108              		.loc 1 695 0
 109 001c 0020     		movs	r0, #0
 110 001e 08BD     		pop	{r3, pc}
 111              	.LVL11:
 112              	.L9:
 713:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 714:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 715:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 716:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 717:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 113              		.loc 1 717 0
 114 0020 9A42     		cmp	r2, r3
 115 0022 01D2     		bcs	.L11
 116              		.loc 1 717 0 is_stmt 0 discriminator 1
 117 0024 9942     		cmp	r1, r3
 118 0026 08D2     		bcs	.L13
 119              	.L11:
 718:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 719:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* If, since the command was issued, the tick count has overflowed
 720:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			but the expiry time has not, then the timer must have already passed
 721:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			its expiry time and should be processed immediately. */
 722:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xProcessTimerNow = pdTRUE;
 723:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 724:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 725:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 726:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 120              		.loc 1 726 0 is_stmt 1
 121 0028 011D     		adds	r1, r0, #4
 122              	.LVL12:
 123 002a 064B     		ldr	r3, .L15+4
 124              	.LVL13:
 125 002c 1868     		ldr	r0, [r3]
 126              	.LVL14:
 127 002e FFF7FEFF 		bl	vListInsert
 128              	.LVL15:
 695:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 129              		.loc 1 695 0
 130 0032 0020     		movs	r0, #0
ARM GAS  /tmp/cctEhCXu.s 			page 16


 131 0034 08BD     		pop	{r3, pc}
 132              	.LVL16:
 133              	.L12:
 708:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 134              		.loc 1 708 0
 135 0036 0120     		movs	r0, #1
 136              	.LVL17:
 137 0038 08BD     		pop	{r3, pc}
 138              	.LVL18:
 139              	.L13:
 722:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 140              		.loc 1 722 0
 141 003a 0120     		movs	r0, #1
 142              	.LVL19:
 727:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 728:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 729:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 730:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xProcessTimerNow;
 731:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 143              		.loc 1 731 0
 144 003c 08BD     		pop	{r3, pc}
 145              	.LVL20:
 146              	.L16:
 147 003e 00BF     		.align	2
 148              	.L15:
 149 0040 00000000 		.word	.LANCHOR1
 150 0044 00000000 		.word	.LANCHOR0
 151              		.cfi_endproc
 152              	.LFE20:
 154              		.section	.text.prvCheckForValidListAndQueue,"ax",%progbits
 155              		.align	2
 156              		.thumb
 157              		.thumb_func
 159              	prvCheckForValidListAndQueue:
 160              	.LFB23:
 732:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 733:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 734:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void	prvProcessReceivedCommands( void )
 735:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 736:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 737:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer;
 738:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerListsWereSwitched, xResult;
 739:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 740:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 741:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does
 742:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 743:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if ( INCLUDE_xTimerPendFunctionCall == 1 )
 744:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 745:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Negative commands are pended function calls rather than timer
 746:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			commands. */
 747:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 748:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 749:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				const CallbackParameters_t * const pxCallback = &( xMessage.u.xCallbackParameters );
 750:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 751:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer uses the xCallbackParameters member to request a
 752:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				callback be executed.  Check the callback is not NULL. */
 753:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( pxCallback );
ARM GAS  /tmp/cctEhCXu.s 			page 17


 754:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 755:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* Call the function. */
 756:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 757:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 758:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 759:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 760:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				mtCOVERAGE_TEST_MARKER();
 761:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 762:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 763:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* INCLUDE_xTimerPendFunctionCall */
 764:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 765:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Commands that are positive are timer commands rather than pended
 766:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		function calls. */
 767:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 768:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 769:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The messages uses the xTimerParameters member to work on a
 770:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			software timer. */
 771:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 772:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 773:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The
 774:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 775:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer is in a list, remove it. */
 776:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 777:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 778:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 779:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 780:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				mtCOVERAGE_TEST_MARKER();
 781:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 782:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 783:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			traceTIMER_COMMAND_RECEIVED( pxTimer, xMessage.xMessageID, xMessage.u.xTimerParameters.xMessageV
 784:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 785:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* In this case the xTimerListsWereSwitched parameter is not used, but
 786:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			it must be present in the function call.  prvSampleTimeNow() must be
 787:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			called after the message is received from xTimerQueue so there is no
 788:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			possibility of a higher priority task adding a message to the message
 789:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			queue with a time that is ahead of the timer daemon task (because it
 790:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pre-empted the timer daemon task after the xTimeNow value was set). */
 791:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 792:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 793:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			switch( xMessage.xMessageID )
 794:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 795:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_START :
 796:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_START_FROM_ISR :
 797:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_RESET :
 798:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_RESET_FROM_ISR :
 799:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_START_DONT_TRACE :
 800:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Start or restart a timer. */
 801:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 802:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer-
 803:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 804:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* The timer expired before it was added to the active
 805:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						timer list.  Process it now. */
 806:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 807:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						traceTIMER_EXPIRED( pxTimer );
 808:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 809:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 810:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
ARM GAS  /tmp/cctEhCXu.s 			page 18


 811:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParam
 812:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							configASSERT( xResult );
 813:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							( void ) xResult;
 814:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 815:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						else
 816:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 817:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							mtCOVERAGE_TEST_MARKER();
 818:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 819:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 820:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					else
 821:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 822:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						mtCOVERAGE_TEST_MARKER();
 823:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 824:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 825:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 826:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_STOP :
 827:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_STOP_FROM_ISR :
 828:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The timer has already been removed from the active list. */
 829:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 830:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 831:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 832:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_CHANGE_PERIOD :
 833:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_CHANGE_PERIOD_FROM_ISR :
 834:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 835:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 836:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 837:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 838:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The new period does not really have a reference, and can
 839:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					be longer or shorter than the old one.  The command time is
 840:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					therefore set to the current time, and as the period cannot
 841:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					be zero the next expiry time can only be in the future,
 842:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					meaning (unlike for the xTimerStart() case above) there is
 843:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					no fail case that needs to be handled here. */
 844:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTi
 845:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 846:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 847:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_DELETE :
 848:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 849:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 850:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* The timer has already been removed from the active list,
 851:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						just free up the memory if the memory was dynamically
 852:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						allocated. */
 853:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 854:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 855:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							vPortFree( pxTimer );
 856:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 857:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						else
 858:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 859:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 860:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 861:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 862:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#else
 863:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 864:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* If dynamic allocation is not enabled, the memory
 865:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						could not have been dynamically allocated. So there is
 866:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						no need to free the memory - just mark the timer as
 867:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						"not active". */
ARM GAS  /tmp/cctEhCXu.s 			page 19


 868:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 869:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 870:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 871:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 872:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 873:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				default	:
 874:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Don't expect to get here. */
 875:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 876:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 877:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 878:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 879:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 880:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 881:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 882:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvSwitchTimerLists( void )
 883:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 884:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime, xReloadTime;
 885:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** List_t *pxTemp;
 886:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer;
 887:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xResult;
 888:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 889:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* The tick count has overflowed.  The timer lists must be switched.
 890:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	If there are any timers still referenced from the current timer list
 891:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	then they must have expired and should be processed before the lists
 892:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	are switched. */
 893:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 894:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 895:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 896:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 897:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Remove the timer from the list. */
 898:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 v
 899:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 900:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_EXPIRED( pxTimer );
 901:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 902:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Execute its callback, then send a command to restart the timer if
 903:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		it is an auto-reload timer.  It cannot be restarted here as the lists
 904:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		have not yet been switched. */
 905:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 906:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 907:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 908:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 909:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Calculate the reload value, and if the reload value results in
 910:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			the timer going into the same timer list then it has already expired
 911:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			and the timer should be re-inserted into the current list so it is
 912:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			processed again within this loop.  Otherwise a command should be sent
 913:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			to restart the timer to ensure it is only inserted into a list after
 914:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			the lists have been swapped. */
 915:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 916:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xReloadTime > xNextExpireTime )
 917:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 918:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 919:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 920:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 921:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 922:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 923:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 924:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tm
ARM GAS  /tmp/cctEhCXu.s 			page 20


 925:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( xResult );
 926:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xResult;
 927:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 928:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 929:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 930:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 931:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 932:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 933:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 934:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 935:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxTemp = pxCurrentTimerList;
 936:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxCurrentTimerList = pxOverflowTimerList;
 937:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxOverflowTimerList = pxTemp;
 938:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 939:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 940:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 941:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvCheckForValidListAndQueue( void )
 942:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 161              		.loc 1 942 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165 0000 30B5     		push	{r4, r5, lr}
 166              	.LCFI1:
 167              		.cfi_def_cfa_offset 12
 168              		.cfi_offset 4, -12
 169              		.cfi_offset 5, -8
 170              		.cfi_offset 14, -4
 171 0002 83B0     		sub	sp, sp, #12
 172              	.LCFI2:
 173              		.cfi_def_cfa_offset 24
 943:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Check that the list from which active timers are referenced, and the
 944:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	queue used to communicate with the timer service, have been
 945:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	initialised. */
 946:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 174              		.loc 1 946 0
 175 0004 FFF7FEFF 		bl	vPortEnterCritical
 176              	.LVL21:
 947:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 948:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerQueue == NULL )
 177              		.loc 1 948 0
 178 0008 104B     		ldr	r3, .L20
 179 000a 1B68     		ldr	r3, [r3]
 180 000c CBB9     		cbnz	r3, .L18
 949:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 950:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInitialise( &xActiveTimerList1 );
 181              		.loc 1 950 0
 182 000e 104D     		ldr	r5, .L20+4
 183 0010 2846     		mov	r0, r5
 184 0012 FFF7FEFF 		bl	vListInitialise
 185              	.LVL22:
 951:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInitialise( &xActiveTimerList2 );
 186              		.loc 1 951 0
 187 0016 0F4C     		ldr	r4, .L20+8
 188 0018 2046     		mov	r0, r4
 189 001a FFF7FEFF 		bl	vListInitialise
 190              	.LVL23:
ARM GAS  /tmp/cctEhCXu.s 			page 21


 952:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxCurrentTimerList = &xActiveTimerList1;
 191              		.loc 1 952 0
 192 001e 0E4B     		ldr	r3, .L20+12
 193 0020 1D60     		str	r5, [r3]
 953:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxOverflowTimerList = &xActiveTimerList2;
 194              		.loc 1 953 0
 195 0022 0E4B     		ldr	r3, .L20+16
 196 0024 1C60     		str	r4, [r3]
 197              	.LBB45:
 954:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 955:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 956:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 957:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer queue is allocated statically in case
 958:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
 959:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent ad
 960:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonT
 961:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 962:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) siz
 198              		.loc 1 962 0
 199 0026 0023     		movs	r3, #0
 200 0028 0093     		str	r3, [sp]
 201 002a 0D4B     		ldr	r3, .L20+20
 202 002c 0D4A     		ldr	r2, .L20+24
 203 002e 1021     		movs	r1, #16
 204 0030 0A20     		movs	r0, #10
 205 0032 FFF7FEFF 		bl	xQueueGenericCreateStatic
 206              	.LVL24:
 207 0036 054B     		ldr	r3, .L20
 208 0038 1860     		str	r0, [r3]
 209              	.LBE45:
 963:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 964:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#else
 965:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 966:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xTimerQueue = xQueueCreate( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, sizeof( DaemonTaskMessage
 967:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 968:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif
 969:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 970:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if ( configQUEUE_REGISTRY_SIZE > 0 )
 971:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 972:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xTimerQueue != NULL )
 210              		.loc 1 972 0
 211 003a 10B1     		cbz	r0, .L18
 973:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 974:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 212              		.loc 1 974 0
 213 003c 0A49     		ldr	r1, .L20+28
 214 003e FFF7FEFF 		bl	vQueueAddToRegistry
 215              	.LVL25:
 216              	.L18:
 975:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 976:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				else
 977:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 978:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					mtCOVERAGE_TEST_MARKER();
 979:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 980:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 981:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif /* configQUEUE_REGISTRY_SIZE */
 982:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
ARM GAS  /tmp/cctEhCXu.s 			page 22


 983:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 984:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 985:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 986:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 987:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 988:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 217              		.loc 1 988 0
 218 0042 FFF7FEFF 		bl	vPortExitCritical
 219              	.LVL26:
 989:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 220              		.loc 1 989 0
 221 0046 03B0     		add	sp, sp, #12
 222              	.LCFI3:
 223              		.cfi_def_cfa_offset 12
 224              		@ sp needed
 225 0048 30BD     		pop	{r4, r5, pc}
 226              	.L21:
 227 004a 00BF     		.align	2
 228              	.L20:
 229 004c 00000000 		.word	.LANCHOR2
 230 0050 00000000 		.word	.LANCHOR3
 231 0054 00000000 		.word	.LANCHOR4
 232 0058 00000000 		.word	.LANCHOR0
 233 005c 00000000 		.word	.LANCHOR1
 234 0060 00000000 		.word	.LANCHOR5
 235 0064 00000000 		.word	.LANCHOR6
 236 0068 00000000 		.word	.LC0
 237              		.cfi_endproc
 238              	.LFE23:
 240              		.section	.text.prvInitialiseNewTimer,"ax",%progbits
 241              		.align	2
 242              		.thumb
 243              		.thumb_func
 245              	prvInitialiseNewTimer:
 246              	.LFB7:
 355:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* 0 is not a valid value for xTimerPeriodInTicks. */
 247              		.loc 1 355 0
 248              		.cfi_startproc
 249              		@ args = 8, pretend = 0, frame = 0
 250              		@ frame_needed = 0, uses_anonymous_args = 0
 251              	.LVL27:
 252 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 253              	.LCFI4:
 254              		.cfi_def_cfa_offset 24
 255              		.cfi_offset 4, -24
 256              		.cfi_offset 5, -20
 257              		.cfi_offset 6, -16
 258              		.cfi_offset 7, -12
 259              		.cfi_offset 8, -8
 260              		.cfi_offset 14, -4
 261 0004 079C     		ldr	r4, [sp, #28]
 357:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 262              		.loc 1 357 0
 263 0006 41B9     		cbnz	r1, .L23
 264              	.LBB46:
 265              	.LBB47:
 266              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
ARM GAS  /tmp/cctEhCXu.s 			page 23


   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.3.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
ARM GAS  /tmp/cctEhCXu.s 			page 24


  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  /tmp/cctEhCXu.s 			page 25


 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
ARM GAS  /tmp/cctEhCXu.s 			page 26


 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 267              		.loc 2 195 0
 268              		.syntax unified
 269              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 270 0008 4FF05003 			mov r3, #80												
 271 000c 83F31188 		msr basepri, r3											
 272 0010 BFF36F8F 		isb														
 273 0014 BFF34F8F 		dsb														
 274              	
 275              	@ 0 "" 2
 276              	.LVL28:
 277              		.thumb
 278              		.syntax unified
 279              	.L24:
 280 0018 FEE7     		b	.L24
 281              	.LVL29:
 282              	.L23:
 283 001a 0F46     		mov	r7, r1
 284              	.LBE47:
 285              	.LBE46:
 359:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 286              		.loc 1 359 0
 287 001c A4B1     		cbz	r4, .L22
 288 001e 1E46     		mov	r6, r3
 289 0020 1546     		mov	r5, r2
 290 0022 8046     		mov	r8, r0
 363:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 291              		.loc 1 363 0
 292 0024 FFF7FEFF 		bl	prvCheckForValidListAndQueue
 293              	.LVL30:
 367:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 294              		.loc 1 367 0
 295 0028 C4F80080 		str	r8, [r4]
 368:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pvTimerID = pvTimerID;
ARM GAS  /tmp/cctEhCXu.s 			page 27


 296              		.loc 1 368 0
 297 002c A761     		str	r7, [r4, #24]
 369:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 298              		.loc 1 369 0
 299 002e E661     		str	r6, [r4, #28]
 370:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 300              		.loc 1 370 0
 301 0030 069B     		ldr	r3, [sp, #24]
 302 0032 2362     		str	r3, [r4, #32]
 371:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( uxAutoReload != pdFALSE )
 303              		.loc 1 371 0
 304 0034 201D     		adds	r0, r4, #4
 305 0036 FFF7FEFF 		bl	vListInitialiseItem
 306              	.LVL31:
 372:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 307              		.loc 1 372 0
 308 003a 2DB1     		cbz	r5, .L22
 374:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 309              		.loc 1 374 0
 310 003c 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 311 0040 43F00403 		orr	r3, r3, #4
 312 0044 84F82830 		strb	r3, [r4, #40]
 313              	.LVL32:
 314              	.L22:
 315 0048 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 316              		.cfi_endproc
 317              	.LFE7:
 319              		.section	.text.xTimerCreateTimerTask,"ax",%progbits
 320              		.align	2
 321              		.global	xTimerCreateTimerTask
 322              		.thumb
 323              		.thumb_func
 325              	xTimerCreateTimerTask:
 326              	.LFB4:
 228:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 327              		.loc 1 228 0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 16
 330              		@ frame_needed = 0, uses_anonymous_args = 0
 331 0000 10B5     		push	{r4, lr}
 332              	.LCFI5:
 333              		.cfi_def_cfa_offset 8
 334              		.cfi_offset 4, -8
 335              		.cfi_offset 14, -4
 336 0002 88B0     		sub	sp, sp, #32
 337              	.LCFI6:
 338              		.cfi_def_cfa_offset 40
 339              	.LVL33:
 235:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 340              		.loc 1 235 0
 341 0004 FFF7FEFF 		bl	prvCheckForValidListAndQueue
 342              	.LVL34:
 237:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 343              		.loc 1 237 0
 344 0008 154B     		ldr	r3, .L35
 345 000a 1B68     		ldr	r3, [r3]
 346 000c D3B1     		cbz	r3, .L32
ARM GAS  /tmp/cctEhCXu.s 			page 28


 347              	.LBB48:
 241:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			StackType_t *pxTimerTaskStackBuffer = NULL;
 348              		.loc 1 241 0
 349 000e 0024     		movs	r4, #0
 350 0010 0594     		str	r4, [sp, #20]
 242:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			uint32_t ulTimerTaskStackSize;
 351              		.loc 1 242 0
 352 0012 0694     		str	r4, [sp, #24]
 245:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 353              		.loc 1 245 0
 354 0014 07AA     		add	r2, sp, #28
 355 0016 06A9     		add	r1, sp, #24
 356 0018 05A8     		add	r0, sp, #20
 357 001a FFF7FEFF 		bl	vApplicationGetTimerTaskMemory
 358              	.LVL35:
 246:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													configTIMER_SERVICE_TASK_NAME,
 359              		.loc 1 246 0
 360 001e 059B     		ldr	r3, [sp, #20]
 361 0020 0293     		str	r3, [sp, #8]
 362 0022 069B     		ldr	r3, [sp, #24]
 363 0024 0193     		str	r3, [sp, #4]
 364 0026 0223     		movs	r3, #2
 365 0028 0093     		str	r3, [sp]
 366 002a 2346     		mov	r3, r4
 367 002c 079A     		ldr	r2, [sp, #28]
 368 002e 0D49     		ldr	r1, .L35+4
 369 0030 0D48     		ldr	r0, .L35+8
 370 0032 FFF7FEFF 		bl	xTaskCreateStatic
 371              	.LVL36:
 372 0036 0D4B     		ldr	r3, .L35+12
 373 0038 1860     		str	r0, [r3]
 254:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 374              		.loc 1 254 0
 375 003a 08B9     		cbnz	r0, .L33
 376              	.LBE48:
 229:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 377              		.loc 1 229 0
 378 003c 2046     		mov	r0, r4
 379 003e 02E0     		b	.L28
 380              	.L33:
 381              	.LBB49:
 256:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 382              		.loc 1 256 0
 383 0040 0120     		movs	r0, #1
 384              	.LVL37:
 385 0042 00E0     		b	.L28
 386              	.LVL38:
 387              	.L32:
 388              	.LBE49:
 229:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 389              		.loc 1 229 0
 390 0044 0020     		movs	r0, #0
 391              	.LVL39:
 392              	.L28:
 275:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 393              		.loc 1 275 0
 394 0046 40B9     		cbnz	r0, .L30
ARM GAS  /tmp/cctEhCXu.s 			page 29


 395              	.LBB50:
 396              	.LBB51:
 397              		.loc 2 195 0
 398              		.syntax unified
 399              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 400 0048 4FF05003 			mov r3, #80												
 401 004c 83F31188 		msr basepri, r3											
 402 0050 BFF36F8F 		isb														
 403 0054 BFF34F8F 		dsb														
 404              	
 405              	@ 0 "" 2
 406              	.LVL40:
 407              		.thumb
 408              		.syntax unified
 409              	.L31:
 410 0058 FEE7     		b	.L31
 411              	.L30:
 412              	.LBE51:
 413              	.LBE50:
 277:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 414              		.loc 1 277 0
 415 005a 08B0     		add	sp, sp, #32
 416              	.LCFI7:
 417              		.cfi_def_cfa_offset 8
 418              		@ sp needed
 419 005c 10BD     		pop	{r4, pc}
 420              	.L36:
 421 005e 00BF     		.align	2
 422              	.L35:
 423 0060 00000000 		.word	.LANCHOR2
 424 0064 08000000 		.word	.LC1
 425 0068 00000000 		.word	prvTimerTask
 426 006c 00000000 		.word	.LANCHOR7
 427              		.cfi_endproc
 428              	.LFE4:
 430              		.section	.text.xTimerCreate,"ax",%progbits
 431              		.align	2
 432              		.global	xTimerCreate
 433              		.thumb
 434              		.thumb_func
 436              	xTimerCreate:
 437              	.LFB5:
 287:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 438              		.loc 1 287 0
 439              		.cfi_startproc
 440              		@ args = 4, pretend = 0, frame = 0
 441              		@ frame_needed = 0, uses_anonymous_args = 0
 442              	.LVL41:
 443 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 444              	.LCFI8:
 445              		.cfi_def_cfa_offset 24
 446              		.cfi_offset 4, -24
 447              		.cfi_offset 5, -20
 448              		.cfi_offset 6, -16
 449              		.cfi_offset 7, -12
 450              		.cfi_offset 8, -8
 451              		.cfi_offset 14, -4
ARM GAS  /tmp/cctEhCXu.s 			page 30


 452 0004 82B0     		sub	sp, sp, #8
 453              	.LCFI9:
 454              		.cfi_def_cfa_offset 32
 455 0006 0546     		mov	r5, r0
 456 0008 0E46     		mov	r6, r1
 457 000a 1746     		mov	r7, r2
 458 000c 9846     		mov	r8, r3
 290:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 459              		.loc 1 290 0
 460 000e 2C20     		movs	r0, #44
 461              	.LVL42:
 462 0010 FFF7FEFF 		bl	pvPortMalloc
 463              	.LVL43:
 292:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 464              		.loc 1 292 0
 465 0014 0446     		mov	r4, r0
 466 0016 58B1     		cbz	r0, .L38
 297:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 467              		.loc 1 297 0
 468 0018 0023     		movs	r3, #0
 469 001a 80F82830 		strb	r3, [r0, #40]
 298:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 470              		.loc 1 298 0
 471 001e 0190     		str	r0, [sp, #4]
 472 0020 089B     		ldr	r3, [sp, #32]
 473 0022 0093     		str	r3, [sp]
 474 0024 4346     		mov	r3, r8
 475 0026 3A46     		mov	r2, r7
 476 0028 3146     		mov	r1, r6
 477 002a 2846     		mov	r0, r5
 478              	.LVL44:
 479 002c FFF7FEFF 		bl	prvInitialiseNewTimer
 480              	.LVL45:
 481              	.L38:
 302:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 482              		.loc 1 302 0
 483 0030 2046     		mov	r0, r4
 484 0032 02B0     		add	sp, sp, #8
 485              	.LCFI10:
 486              		.cfi_def_cfa_offset 24
 487              		@ sp needed
 488 0034 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 489              		.cfi_endproc
 490              	.LFE5:
 492              		.section	.text.xTimerCreateStatic,"ax",%progbits
 493              		.align	2
 494              		.global	xTimerCreateStatic
 495              		.thumb
 496              		.thumb_func
 498              	xTimerCreateStatic:
 499              	.LFB6:
 315:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 500              		.loc 1 315 0
 501              		.cfi_startproc
 502              		@ args = 8, pretend = 0, frame = 8
 503              		@ frame_needed = 0, uses_anonymous_args = 0
 504              	.LVL46:
ARM GAS  /tmp/cctEhCXu.s 			page 31


 505 0000 30B5     		push	{r4, r5, lr}
 506              	.LCFI11:
 507              		.cfi_def_cfa_offset 12
 508              		.cfi_offset 4, -12
 509              		.cfi_offset 5, -8
 510              		.cfi_offset 14, -4
 511 0002 85B0     		sub	sp, sp, #20
 512              	.LCFI12:
 513              		.cfi_def_cfa_offset 32
 514 0004 099C     		ldr	r4, [sp, #36]
 515              	.LBB52:
 323:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xSize == sizeof( Timer_t ) );
 516              		.loc 1 323 0
 517 0006 2C25     		movs	r5, #44
 518 0008 0395     		str	r5, [sp, #12]
 324:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 519              		.loc 1 324 0
 520 000a 039D     		ldr	r5, [sp, #12]
 521 000c 2C2D     		cmp	r5, #44
 522 000e 08D0     		beq	.L41
 523              	.LBB53:
 524              	.LBB54:
 525              		.loc 2 195 0
 526              		.syntax unified
 527              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 528 0010 4FF05003 			mov r3, #80												
 529 0014 83F31188 		msr basepri, r3											
 530 0018 BFF36F8F 		isb														
 531 001c BFF34F8F 		dsb														
 532              	
 533              	@ 0 "" 2
 534              	.LVL47:
 535              		.thumb
 536              		.syntax unified
 537              	.L42:
 538 0020 FEE7     		b	.L42
 539              	.LVL48:
 540              	.L41:
 541              	.LBE54:
 542              	.LBE53:
 325:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 543              		.loc 1 325 0
 544 0022 039D     		ldr	r5, [sp, #12]
 545              	.LBE52:
 330:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 !e9087 StaticTimer_t is a pointer to a Tim
 546              		.loc 1 330 0
 547 0024 44B9     		cbnz	r4, .L43
 548              	.LBB55:
 549              	.LBB56:
 550              		.loc 2 195 0
 551              		.syntax unified
 552              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 553 0026 4FF05003 			mov r3, #80												
 554 002a 83F31188 		msr basepri, r3											
 555 002e BFF36F8F 		isb														
 556 0032 BFF34F8F 		dsb														
 557              	
ARM GAS  /tmp/cctEhCXu.s 			page 32


 558              	@ 0 "" 2
 559              	.LVL49:
 560              		.thumb
 561              		.syntax unified
 562              	.L44:
 563 0036 FEE7     		b	.L44
 564              	.LVL50:
 565              	.L43:
 566              	.LBE56:
 567              	.LBE55:
 333:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 568              		.loc 1 333 0
 569 0038 3CB1     		cbz	r4, .L45
 338:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 570              		.loc 1 338 0
 571 003a 0225     		movs	r5, #2
 572 003c 84F82850 		strb	r5, [r4, #40]
 340:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 573              		.loc 1 340 0
 574 0040 0194     		str	r4, [sp, #4]
 575 0042 089D     		ldr	r5, [sp, #32]
 576 0044 0095     		str	r5, [sp]
 577 0046 FFF7FEFF 		bl	prvInitialiseNewTimer
 578              	.LVL51:
 579              	.L45:
 344:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 580              		.loc 1 344 0
 581 004a 2046     		mov	r0, r4
 582 004c 05B0     		add	sp, sp, #20
 583              	.LCFI13:
 584              		.cfi_def_cfa_offset 12
 585              		@ sp needed
 586 004e 30BD     		pop	{r4, r5, pc}
 587              		.cfi_endproc
 588              	.LFE6:
 590              		.section	.text.xTimerGenericCommand,"ax",%progbits
 591              		.align	2
 592              		.global	xTimerGenericCommand
 593              		.thumb
 594              		.thumb_func
 596              	xTimerGenericCommand:
 597              	.LFB8:
 382:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 598              		.loc 1 382 0
 599              		.cfi_startproc
 600              		@ args = 4, pretend = 0, frame = 16
 601              		@ frame_needed = 0, uses_anonymous_args = 0
 602              	.LVL52:
 386:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 603              		.loc 1 386 0
 604 0000 40B9     		cbnz	r0, .L48
 605              	.LBB57:
 606              	.LBB58:
 607              		.loc 2 195 0
 608              		.syntax unified
 609              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 610 0002 4FF05003 			mov r3, #80												
ARM GAS  /tmp/cctEhCXu.s 			page 33


 611 0006 83F31188 		msr basepri, r3											
 612 000a BFF36F8F 		isb														
 613 000e BFF34F8F 		dsb														
 614              	
 615              	@ 0 "" 2
 616              	.LVL53:
 617              		.thumb
 618              		.syntax unified
 619              	.L49:
 620 0012 FEE7     		b	.L49
 621              	.LVL54:
 622              	.L48:
 623              	.LBE58:
 624              	.LBE57:
 382:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 625              		.loc 1 382 0
 626 0014 30B5     		push	{r4, r5, lr}
 627              	.LCFI14:
 628              		.cfi_def_cfa_offset 12
 629              		.cfi_offset 4, -12
 630              		.cfi_offset 5, -8
 631              		.cfi_offset 14, -4
 632 0016 85B0     		sub	sp, sp, #20
 633              	.LCFI15:
 634              		.cfi_def_cfa_offset 32
 635 0018 1546     		mov	r5, r2
 636 001a 0446     		mov	r4, r0
 390:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 637              		.loc 1 390 0
 638 001c 124A     		ldr	r2, .L55
 639              	.LVL55:
 640 001e 1068     		ldr	r0, [r2]
 641              	.LVL56:
 642 0020 F0B1     		cbz	r0, .L53
 643 0022 1A46     		mov	r2, r3
 393:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 644              		.loc 1 393 0
 645 0024 0091     		str	r1, [sp]
 394:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.pxTimer = xTimer;
 646              		.loc 1 394 0
 647 0026 0195     		str	r5, [sp, #4]
 395:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 648              		.loc 1 395 0
 649 0028 0294     		str	r4, [sp, #8]
 397:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 650              		.loc 1 397 0
 651 002a 0529     		cmp	r1, #5
 652 002c 13DC     		bgt	.L51
 653              	.LVL57:
 399:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 654              		.loc 1 399 0
 655 002e FFF7FEFF 		bl	xTaskGetSchedulerState
 656              	.LVL58:
 657 0032 0228     		cmp	r0, #2
 658 0034 07D1     		bne	.L52
 401:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 659              		.loc 1 401 0
ARM GAS  /tmp/cctEhCXu.s 			page 34


 660 0036 0023     		movs	r3, #0
 661 0038 089A     		ldr	r2, [sp, #32]
 662 003a 6946     		mov	r1, sp
 663 003c 0A48     		ldr	r0, .L55
 664 003e 0068     		ldr	r0, [r0]
 665 0040 FFF7FEFF 		bl	xQueueGenericSend
 666              	.LVL59:
 667 0044 0DE0     		b	.L50
 668              	.LVL60:
 669              	.L52:
 405:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 670              		.loc 1 405 0
 671 0046 0023     		movs	r3, #0
 672 0048 1A46     		mov	r2, r3
 673 004a 6946     		mov	r1, sp
 674 004c 0648     		ldr	r0, .L55
 675 004e 0068     		ldr	r0, [r0]
 676 0050 FFF7FEFF 		bl	xQueueGenericSend
 677              	.LVL61:
 678 0054 05E0     		b	.L50
 679              	.LVL62:
 680              	.L51:
 410:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 681              		.loc 1 410 0
 682 0056 0023     		movs	r3, #0
 683 0058 6946     		mov	r1, sp
 684              	.LVL63:
 685 005a FFF7FEFF 		bl	xQueueGenericSendFromISR
 686              	.LVL64:
 687 005e 00E0     		b	.L50
 688              	.LVL65:
 689              	.L53:
 383:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 690              		.loc 1 383 0
 691 0060 0020     		movs	r0, #0
 692              	.LVL66:
 693              	.L50:
 421:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 694              		.loc 1 421 0
 695 0062 05B0     		add	sp, sp, #20
 696              	.LCFI16:
 697              		.cfi_def_cfa_offset 12
 698              		@ sp needed
 699 0064 30BD     		pop	{r4, r5, pc}
 700              	.LVL67:
 701              	.L56:
 702 0066 00BF     		.align	2
 703              	.L55:
 704 0068 00000000 		.word	.LANCHOR2
 705              		.cfi_endproc
 706              	.LFE8:
 708              		.section	.text.prvSwitchTimerLists,"ax",%progbits
 709              		.align	2
 710              		.thumb
 711              		.thumb_func
 713              	prvSwitchTimerLists:
 714              	.LFB22:
ARM GAS  /tmp/cctEhCXu.s 			page 35


 883:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime, xReloadTime;
 715              		.loc 1 883 0
 716              		.cfi_startproc
 717              		@ args = 0, pretend = 0, frame = 0
 718              		@ frame_needed = 0, uses_anonymous_args = 0
 719 0000 70B5     		push	{r4, r5, r6, lr}
 720              	.LCFI17:
 721              		.cfi_def_cfa_offset 16
 722              		.cfi_offset 4, -16
 723              		.cfi_offset 5, -12
 724              		.cfi_offset 6, -8
 725              		.cfi_offset 14, -4
 726 0002 82B0     		sub	sp, sp, #8
 727              	.LCFI18:
 728              		.cfi_def_cfa_offset 24
 893:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 729              		.loc 1 893 0
 730 0004 2BE0     		b	.L59
 731              	.L63:
 895:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 732              		.loc 1 895 0
 733 0006 DB68     		ldr	r3, [r3, #12]
 734 0008 1E68     		ldr	r6, [r3]
 735              	.LVL68:
 898:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 736              		.loc 1 898 0
 737 000a DC68     		ldr	r4, [r3, #12]
 738              	.LVL69:
 899:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_EXPIRED( pxTimer );
 739              		.loc 1 899 0
 740 000c 251D     		adds	r5, r4, #4
 741 000e 2846     		mov	r0, r5
 742 0010 FFF7FEFF 		bl	uxListRemove
 743              	.LVL70:
 905:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 744              		.loc 1 905 0
 745 0014 236A     		ldr	r3, [r4, #32]
 746 0016 2046     		mov	r0, r4
 747 0018 9847     		blx	r3
 748              	.LVL71:
 907:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 749              		.loc 1 907 0
 750 001a 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 751 001e 13F0040F 		tst	r3, #4
 752 0022 1CD0     		beq	.L59
 915:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xReloadTime > xNextExpireTime )
 753              		.loc 1 915 0
 754 0024 A369     		ldr	r3, [r4, #24]
 755 0026 3344     		add	r3, r3, r6
 756              	.LVL72:
 916:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 757              		.loc 1 916 0
 758 0028 9E42     		cmp	r6, r3
 759 002a 07D2     		bcs	.L60
 918:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 760              		.loc 1 918 0
 761 002c 6360     		str	r3, [r4, #4]
ARM GAS  /tmp/cctEhCXu.s 			page 36


 919:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 762              		.loc 1 919 0
 763 002e 2461     		str	r4, [r4, #16]
 920:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 764              		.loc 1 920 0
 765 0030 2946     		mov	r1, r5
 766 0032 114B     		ldr	r3, .L65
 767              	.LVL73:
 768 0034 1868     		ldr	r0, [r3]
 769 0036 FFF7FEFF 		bl	vListInsert
 770              	.LVL74:
 771 003a 10E0     		b	.L59
 772              	.LVL75:
 773              	.L60:
 924:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( xResult );
 774              		.loc 1 924 0
 775 003c 0021     		movs	r1, #0
 776 003e 0091     		str	r1, [sp]
 777 0040 0B46     		mov	r3, r1
 778              	.LVL76:
 779 0042 3246     		mov	r2, r6
 780 0044 2046     		mov	r0, r4
 781 0046 FFF7FEFF 		bl	xTimerGenericCommand
 782              	.LVL77:
 925:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xResult;
 783              		.loc 1 925 0
 784 004a 40B9     		cbnz	r0, .L59
 785              	.LBB59:
 786              	.LBB60:
 787              		.loc 2 195 0
 788              		.syntax unified
 789              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 790 004c 4FF05003 			mov r3, #80												
 791 0050 83F31188 		msr basepri, r3											
 792 0054 BFF36F8F 		isb														
 793 0058 BFF34F8F 		dsb														
 794              	
 795              	@ 0 "" 2
 796              	.LVL78:
 797              		.thumb
 798              		.syntax unified
 799              	.L62:
 800 005c FEE7     		b	.L62
 801              	.LVL79:
 802              	.L59:
 803              	.LBE60:
 804              	.LBE59:
 893:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 805              		.loc 1 893 0
 806 005e 064B     		ldr	r3, .L65
 807 0060 1B68     		ldr	r3, [r3]
 808 0062 1A68     		ldr	r2, [r3]
 809 0064 002A     		cmp	r2, #0
 810 0066 CED1     		bne	.L63
 811              	.LVL80:
 936:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxOverflowTimerList = pxTemp;
 812              		.loc 1 936 0
ARM GAS  /tmp/cctEhCXu.s 			page 37


 813 0068 044A     		ldr	r2, .L65+4
 814 006a 1068     		ldr	r0, [r2]
 815 006c 0249     		ldr	r1, .L65
 816 006e 0860     		str	r0, [r1]
 937:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 817              		.loc 1 937 0
 818 0070 1360     		str	r3, [r2]
 938:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 819              		.loc 1 938 0
 820 0072 02B0     		add	sp, sp, #8
 821              	.LCFI19:
 822              		.cfi_def_cfa_offset 16
 823              		@ sp needed
 824 0074 70BD     		pop	{r4, r5, r6, pc}
 825              	.L66:
 826 0076 00BF     		.align	2
 827              	.L65:
 828 0078 00000000 		.word	.LANCHOR0
 829 007c 00000000 		.word	.LANCHOR1
 830              		.cfi_endproc
 831              	.LFE22:
 833              		.section	.text.prvSampleTimeNow,"ax",%progbits
 834              		.align	2
 835              		.thumb
 836              		.thumb_func
 838              	prvSampleTimeNow:
 839              	.LFB19:
 671:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 840              		.loc 1 671 0
 841              		.cfi_startproc
 842              		@ args = 0, pretend = 0, frame = 0
 843              		@ frame_needed = 0, uses_anonymous_args = 0
 844              	.LVL81:
 845 0000 38B5     		push	{r3, r4, r5, lr}
 846              	.LCFI20:
 847              		.cfi_def_cfa_offset 16
 848              		.cfi_offset 3, -16
 849              		.cfi_offset 4, -12
 850              		.cfi_offset 5, -8
 851              		.cfi_offset 14, -4
 852 0002 0546     		mov	r5, r0
 675:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 853              		.loc 1 675 0
 854 0004 FFF7FEFF 		bl	xTaskGetTickCount
 855              	.LVL82:
 856 0008 0446     		mov	r4, r0
 857              	.LVL83:
 677:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 858              		.loc 1 677 0
 859 000a 074B     		ldr	r3, .L71
 860 000c 1B68     		ldr	r3, [r3]
 861 000e 9842     		cmp	r0, r3
 862 0010 04D2     		bcs	.L68
 679:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		*pxTimerListsWereSwitched = pdTRUE;
 863              		.loc 1 679 0
 864 0012 FFF7FEFF 		bl	prvSwitchTimerLists
 865              	.LVL84:
ARM GAS  /tmp/cctEhCXu.s 			page 38


 680:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 866              		.loc 1 680 0
 867 0016 0123     		movs	r3, #1
 868 0018 2B60     		str	r3, [r5]
 869 001a 01E0     		b	.L69
 870              	.LVL85:
 871              	.L68:
 684:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 872              		.loc 1 684 0
 873 001c 0023     		movs	r3, #0
 874 001e 2B60     		str	r3, [r5]
 875              	.LVL86:
 876              	.L69:
 687:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 877              		.loc 1 687 0
 878 0020 014B     		ldr	r3, .L71
 879 0022 1C60     		str	r4, [r3]
 690:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 880              		.loc 1 690 0
 881 0024 2046     		mov	r0, r4
 882 0026 38BD     		pop	{r3, r4, r5, pc}
 883              	.LVL87:
 884              	.L72:
 885              		.align	2
 886              	.L71:
 887 0028 00000000 		.word	.LANCHOR8
 888              		.cfi_endproc
 889              	.LFE19:
 891              		.section	.text.prvProcessExpiredTimer,"ax",%progbits
 892              		.align	2
 893              		.thumb
 894              		.thumb_func
 896              	prvProcessExpiredTimer:
 897              	.LFB15:
 508:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xResult;
 898              		.loc 1 508 0
 899              		.cfi_startproc
 900              		@ args = 0, pretend = 0, frame = 0
 901              		@ frame_needed = 0, uses_anonymous_args = 0
 902              	.LVL88:
 903 0000 70B5     		push	{r4, r5, r6, lr}
 904              	.LCFI21:
 905              		.cfi_def_cfa_offset 16
 906              		.cfi_offset 4, -16
 907              		.cfi_offset 5, -12
 908              		.cfi_offset 6, -8
 909              		.cfi_offset 14, -4
 910 0002 82B0     		sub	sp, sp, #8
 911              	.LCFI22:
 912              		.cfi_def_cfa_offset 24
 913 0004 0546     		mov	r5, r0
 914 0006 0E46     		mov	r6, r1
 510:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 915              		.loc 1 510 0
 916 0008 164B     		ldr	r3, .L78
 917 000a 1B68     		ldr	r3, [r3]
 918 000c DB68     		ldr	r3, [r3, #12]
ARM GAS  /tmp/cctEhCXu.s 			page 39


 919 000e DC68     		ldr	r4, [r3, #12]
 920              	.LVL89:
 514:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	traceTIMER_EXPIRED( pxTimer );
 921              		.loc 1 514 0
 922 0010 201D     		adds	r0, r4, #4
 923              	.LVL90:
 924 0012 FFF7FEFF 		bl	uxListRemove
 925              	.LVL91:
 519:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 926              		.loc 1 519 0
 927 0016 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 928 001a 13F0040F 		tst	r3, #4
 929 001e 18D0     		beq	.L74
 524:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 930              		.loc 1 524 0
 931 0020 A169     		ldr	r1, [r4, #24]
 932 0022 2B46     		mov	r3, r5
 933 0024 3246     		mov	r2, r6
 934 0026 2944     		add	r1, r1, r5
 935 0028 2046     		mov	r0, r4
 936 002a FFF7FEFF 		bl	prvInsertTimerInActiveList
 937              	.LVL92:
 938 002e A0B1     		cbz	r0, .L75
 528:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xResult );
 939              		.loc 1 528 0
 940 0030 0021     		movs	r1, #0
 941 0032 0091     		str	r1, [sp]
 942 0034 0B46     		mov	r3, r1
 943 0036 2A46     		mov	r2, r5
 944 0038 2046     		mov	r0, r4
 945 003a FFF7FEFF 		bl	xTimerGenericCommand
 946              	.LVL93:
 529:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xResult;
 947              		.loc 1 529 0
 948 003e 60B9     		cbnz	r0, .L75
 949              	.LBB61:
 950              	.LBB62:
 951              		.loc 2 195 0
 952              		.syntax unified
 953              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 954 0040 4FF05003 			mov r3, #80												
 955 0044 83F31188 		msr basepri, r3											
 956 0048 BFF36F8F 		isb														
 957 004c BFF34F8F 		dsb														
 958              	
 959              	@ 0 "" 2
 960              	.LVL94:
 961              		.thumb
 962              		.syntax unified
 963              	.L76:
 964 0050 FEE7     		b	.L76
 965              	.LVL95:
 966              	.L74:
 967              	.LBE62:
 968              	.LBE61:
 539:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 969              		.loc 1 539 0
ARM GAS  /tmp/cctEhCXu.s 			page 40


 970 0052 23F00103 		bic	r3, r3, #1
 971 0056 84F82830 		strb	r3, [r4, #40]
 972              	.L75:
 544:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 973              		.loc 1 544 0
 974 005a 236A     		ldr	r3, [r4, #32]
 975 005c 2046     		mov	r0, r4
 976 005e 9847     		blx	r3
 977              	.LVL96:
 545:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 978              		.loc 1 545 0
 979 0060 02B0     		add	sp, sp, #8
 980              	.LCFI23:
 981              		.cfi_def_cfa_offset 16
 982              		@ sp needed
 983 0062 70BD     		pop	{r4, r5, r6, pc}
 984              	.LVL97:
 985              	.L79:
 986              		.align	2
 987              	.L78:
 988 0064 00000000 		.word	.LANCHOR0
 989              		.cfi_endproc
 990              	.LFE15:
 992              		.section	.text.prvProcessTimerOrBlockTask,"ax",%progbits
 993              		.align	2
 994              		.thumb
 995              		.thumb_func
 997              	prvProcessTimerOrBlockTask:
 998              	.LFB17:
 585:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 999              		.loc 1 585 0
 1000              		.cfi_startproc
 1001              		@ args = 0, pretend = 0, frame = 8
 1002              		@ frame_needed = 0, uses_anonymous_args = 0
 1003              	.LVL98:
 1004 0000 70B5     		push	{r4, r5, r6, lr}
 1005              	.LCFI24:
 1006              		.cfi_def_cfa_offset 16
 1007              		.cfi_offset 4, -16
 1008              		.cfi_offset 5, -12
 1009              		.cfi_offset 6, -8
 1010              		.cfi_offset 14, -4
 1011 0002 82B0     		sub	sp, sp, #8
 1012              	.LCFI25:
 1013              		.cfi_def_cfa_offset 24
 1014 0004 0646     		mov	r6, r0
 1015 0006 0C46     		mov	r4, r1
 589:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1016              		.loc 1 589 0
 1017 0008 FFF7FEFF 		bl	vTaskSuspendAll
 1018              	.LVL99:
 596:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerListsWereSwitched == pdFALSE )
 1019              		.loc 1 596 0
 1020 000c 01A8     		add	r0, sp, #4
 1021 000e FFF7FEFF 		bl	prvSampleTimeNow
 1022              	.LVL100:
 597:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
ARM GAS  /tmp/cctEhCXu.s 			page 41


 1023              		.loc 1 597 0
 1024 0012 019B     		ldr	r3, [sp, #4]
 1025 0014 23BB     		cbnz	r3, .L81
 1026 0016 0546     		mov	r5, r0
 600:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1027              		.loc 1 600 0
 1028 0018 44B9     		cbnz	r4, .L82
 600:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1029              		.loc 1 600 0 is_stmt 0 discriminator 1
 1030 001a B042     		cmp	r0, r6
 1031 001c 06D3     		bcc	.L82
 602:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 1032              		.loc 1 602 0 is_stmt 1
 1033 001e FFF7FEFF 		bl	xTaskResumeAll
 1034              	.LVL101:
 603:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 1035              		.loc 1 603 0
 1036 0022 2946     		mov	r1, r5
 1037 0024 3046     		mov	r0, r6
 1038 0026 FFF7FEFF 		bl	prvProcessExpiredTimer
 1039              	.LVL102:
 1040 002a 1BE0     		b	.L80
 1041              	.LVL103:
 1042              	.L82:
 613:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 1043              		.loc 1 613 0
 1044 002c 34B1     		cbz	r4, .L84
 617:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 1045              		.loc 1 617 0
 1046 002e 0E4B     		ldr	r3, .L87
 1047 0030 1B68     		ldr	r3, [r3]
 1048 0032 1B68     		ldr	r3, [r3]
 1049 0034 0BB9     		cbnz	r3, .L85
 1050 0036 0124     		movs	r4, #1
 1051              	.LVL104:
 1052 0038 00E0     		b	.L84
 1053              	.LVL105:
 1054              	.L85:
 1055 003a 0024     		movs	r4, #0
 1056              	.LVL106:
 1057              	.L84:
 620:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1058              		.loc 1 620 0
 1059 003c 2246     		mov	r2, r4
 1060 003e 711B     		subs	r1, r6, r5
 1061 0040 0A4B     		ldr	r3, .L87+4
 1062 0042 1868     		ldr	r0, [r3]
 1063              	.LVL107:
 1064 0044 FFF7FEFF 		bl	vQueueWaitForMessageRestricted
 1065              	.LVL108:
 622:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 1066              		.loc 1 622 0
 1067 0048 FFF7FEFF 		bl	xTaskResumeAll
 1068              	.LVL109:
 1069 004c 50B9     		cbnz	r0, .L80
 628:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 1070              		.loc 1 628 0
ARM GAS  /tmp/cctEhCXu.s 			page 42


 1071 004e 4FF08052 		mov	r2, #268435456
 1072 0052 074B     		ldr	r3, .L87+8
 1073 0054 1A60     		str	r2, [r3]
 1074              		.syntax unified
 1075              	@ 628 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 1076 0056 BFF34F8F 		dsb
 1077              	@ 0 "" 2
 1078              	@ 628 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 1079 005a BFF36F8F 		isb
 1080              	@ 0 "" 2
 1081              		.thumb
 1082              		.syntax unified
 1083 005e 01E0     		b	.L80
 1084              	.LVL110:
 1085              	.L81:
 638:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 1086              		.loc 1 638 0
 1087 0060 FFF7FEFF 		bl	xTaskResumeAll
 1088              	.LVL111:
 1089              	.L80:
 641:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1090              		.loc 1 641 0
 1091 0064 02B0     		add	sp, sp, #8
 1092              	.LCFI26:
 1093              		.cfi_def_cfa_offset 16
 1094              		@ sp needed
 1095 0066 70BD     		pop	{r4, r5, r6, pc}
 1096              	.LVL112:
 1097              	.L88:
 1098              		.align	2
 1099              	.L87:
 1100 0068 00000000 		.word	.LANCHOR1
 1101 006c 00000000 		.word	.LANCHOR2
 1102 0070 04ED00E0 		.word	-536810236
 1103              		.cfi_endproc
 1104              	.LFE17:
 1106              		.section	.text.prvProcessReceivedCommands,"ax",%progbits
 1107              		.align	2
 1108              		.thumb
 1109              		.thumb_func
 1111              	prvProcessReceivedCommands:
 1112              	.LFB21:
 735:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 1113              		.loc 1 735 0
 1114              		.cfi_startproc
 1115              		@ args = 0, pretend = 0, frame = 24
 1116              		@ frame_needed = 0, uses_anonymous_args = 0
 1117 0000 30B5     		push	{r4, r5, lr}
 1118              	.LCFI27:
 1119              		.cfi_def_cfa_offset 12
 1120              		.cfi_offset 4, -12
 1121              		.cfi_offset 5, -8
 1122              		.cfi_offset 14, -4
 1123 0002 89B0     		sub	sp, sp, #36
 1124              	.LCFI28:
 1125              		.cfi_def_cfa_offset 48
 741:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
ARM GAS  /tmp/cctEhCXu.s 			page 43


 1126              		.loc 1 741 0
 1127 0004 74E0     		b	.L92
 1128              	.L105:
 747:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1129              		.loc 1 747 0
 1130 0006 049B     		ldr	r3, [sp, #16]
 1131 0008 002B     		cmp	r3, #0
 1132 000a 03DA     		bge	.L91
 1133              	.LVL113:
 1134              	.LBB63:
 756:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 1135              		.loc 1 756 0
 1136 000c 0799     		ldr	r1, [sp, #28]
 1137 000e 0698     		ldr	r0, [sp, #24]
 1138 0010 059B     		ldr	r3, [sp, #20]
 1139 0012 9847     		blx	r3
 1140              	.LVL114:
 1141              	.L91:
 1142              	.LBE63:
 767:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 1143              		.loc 1 767 0
 1144 0014 049B     		ldr	r3, [sp, #16]
 1145 0016 002B     		cmp	r3, #0
 1146 0018 6ADB     		blt	.L92
 771:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1147              		.loc 1 771 0
 1148 001a 069C     		ldr	r4, [sp, #24]
 1149              	.LVL115:
 773:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1150              		.loc 1 773 0
 1151 001c 6369     		ldr	r3, [r4, #20]
 1152 001e 13B1     		cbz	r3, .L93
 776:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 1153              		.loc 1 776 0
 1154 0020 201D     		adds	r0, r4, #4
 1155 0022 FFF7FEFF 		bl	uxListRemove
 1156              	.LVL116:
 1157              	.L93:
 791:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1158              		.loc 1 791 0
 1159 0026 03A8     		add	r0, sp, #12
 1160 0028 FFF7FEFF 		bl	prvSampleTimeNow
 1161              	.LVL117:
 793:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1162              		.loc 1 793 0
 1163 002c 049B     		ldr	r3, [sp, #16]
 1164 002e 092B     		cmp	r3, #9
 1165 0030 5ED8     		bhi	.L92
 1166 0032 DFE803F0 		tbb	[pc, r3]
 1167              	.L96:
 1168 0036 05       		.byte	(.L95-.L96)/2
 1169 0037 05       		.byte	(.L95-.L96)/2
 1170 0038 05       		.byte	(.L95-.L96)/2
 1171 0039 30       		.byte	(.L97-.L96)/2
 1172 003a 37       		.byte	(.L98-.L96)/2
 1173 003b 50       		.byte	(.L99-.L96)/2
 1174 003c 05       		.byte	(.L95-.L96)/2
ARM GAS  /tmp/cctEhCXu.s 			page 44


 1175 003d 05       		.byte	(.L95-.L96)/2
 1176 003e 30       		.byte	(.L97-.L96)/2
 1177 003f 37       		.byte	(.L98-.L96)/2
 1178              		.p2align 1
 1179              	.L95:
 801:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer-
 1180              		.loc 1 801 0
 1181 0040 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1182 0044 43F00103 		orr	r3, r3, #1
 1183 0048 84F82830 		strb	r3, [r4, #40]
 802:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 1184              		.loc 1 802 0
 1185 004c 0599     		ldr	r1, [sp, #20]
 1186 004e A569     		ldr	r5, [r4, #24]
 1187 0050 0B46     		mov	r3, r1
 1188 0052 0246     		mov	r2, r0
 1189 0054 2944     		add	r1, r1, r5
 1190 0056 2046     		mov	r0, r4
 1191              	.LVL118:
 1192 0058 FFF7FEFF 		bl	prvInsertTimerInActiveList
 1193              	.LVL119:
 1194 005c 0028     		cmp	r0, #0
 1195 005e 47D0     		beq	.L92
 806:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						traceTIMER_EXPIRED( pxTimer );
 1196              		.loc 1 806 0
 1197 0060 236A     		ldr	r3, [r4, #32]
 1198 0062 2046     		mov	r0, r4
 1199 0064 9847     		blx	r3
 1200              	.LVL120:
 809:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 1201              		.loc 1 809 0
 1202 0066 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1203 006a 13F0040F 		tst	r3, #4
 1204 006e 3FD0     		beq	.L92
 811:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							configASSERT( xResult );
 1205              		.loc 1 811 0
 1206 0070 A269     		ldr	r2, [r4, #24]
 1207 0072 0021     		movs	r1, #0
 1208 0074 0091     		str	r1, [sp]
 1209 0076 0B46     		mov	r3, r1
 1210 0078 0598     		ldr	r0, [sp, #20]
 1211 007a 0244     		add	r2, r2, r0
 1212 007c 2046     		mov	r0, r4
 1213 007e FFF7FEFF 		bl	xTimerGenericCommand
 1214              	.LVL121:
 812:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							( void ) xResult;
 1215              		.loc 1 812 0
 1216 0082 A8BB     		cbnz	r0, .L92
 1217              	.LBB64:
 1218              	.LBB65:
 1219              		.loc 2 195 0
 1220              		.syntax unified
 1221              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1222 0084 4FF05003 			mov r3, #80												
 1223 0088 83F31188 		msr basepri, r3											
 1224 008c BFF36F8F 		isb														
 1225 0090 BFF34F8F 		dsb														
ARM GAS  /tmp/cctEhCXu.s 			page 45


 1226              	
 1227              	@ 0 "" 2
 1228              	.LVL122:
 1229              		.thumb
 1230              		.syntax unified
 1231              	.L101:
 1232 0094 FEE7     		b	.L101
 1233              	.LVL123:
 1234              	.L97:
 1235              	.LBE65:
 1236              	.LBE64:
 829:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 1237              		.loc 1 829 0
 1238 0096 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1239 009a 23F00103 		bic	r3, r3, #1
 1240 009e 84F82830 		strb	r3, [r4, #40]
 830:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1241              		.loc 1 830 0
 1242 00a2 25E0     		b	.L92
 1243              	.L98:
 834:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 1244              		.loc 1 834 0
 1245 00a4 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1246 00a8 43F00103 		orr	r3, r3, #1
 1247 00ac 84F82830 		strb	r3, [r4, #40]
 835:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 1248              		.loc 1 835 0
 1249 00b0 0599     		ldr	r1, [sp, #20]
 1250 00b2 A161     		str	r1, [r4, #24]
 836:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1251              		.loc 1 836 0
 1252 00b4 41B9     		cbnz	r1, .L102
 1253              	.LBB66:
 1254              	.LBB67:
 1255              		.loc 2 195 0
 1256              		.syntax unified
 1257              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1258 00b6 4FF05003 			mov r3, #80												
 1259 00ba 83F31188 		msr basepri, r3											
 1260 00be BFF36F8F 		isb														
 1261 00c2 BFF34F8F 		dsb														
 1262              	
 1263              	@ 0 "" 2
 1264              	.LVL124:
 1265              		.thumb
 1266              		.syntax unified
 1267              	.L103:
 1268 00c6 FEE7     		b	.L103
 1269              	.L102:
 1270              	.LBE67:
 1271              	.LBE66:
 844:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 1272              		.loc 1 844 0
 1273 00c8 0346     		mov	r3, r0
 1274 00ca 0246     		mov	r2, r0
 1275 00cc 0144     		add	r1, r1, r0
 1276 00ce 2046     		mov	r0, r4
ARM GAS  /tmp/cctEhCXu.s 			page 46


 1277              	.LVL125:
 1278 00d0 FFF7FEFF 		bl	prvInsertTimerInActiveList
 1279              	.LVL126:
 845:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1280              		.loc 1 845 0
 1281 00d4 0CE0     		b	.L92
 1282              	.LVL127:
 1283              	.L99:
 853:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 1284              		.loc 1 853 0
 1285 00d6 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1286 00da 13F0020F 		tst	r3, #2
 1287 00de 03D1     		bne	.L104
 855:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 1288              		.loc 1 855 0
 1289 00e0 2046     		mov	r0, r4
 1290              	.LVL128:
 1291 00e2 FFF7FEFF 		bl	vPortFree
 1292              	.LVL129:
 1293 00e6 03E0     		b	.L92
 1294              	.LVL130:
 1295              	.L104:
 859:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 1296              		.loc 1 859 0
 1297 00e8 23F00103 		bic	r3, r3, #1
 1298 00ec 84F82830 		strb	r3, [r4, #40]
 1299              	.LVL131:
 1300              	.L92:
 741:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1301              		.loc 1 741 0
 1302 00f0 0022     		movs	r2, #0
 1303 00f2 04A9     		add	r1, sp, #16
 1304 00f4 034B     		ldr	r3, .L107
 1305 00f6 1868     		ldr	r0, [r3]
 1306 00f8 FFF7FEFF 		bl	xQueueReceive
 1307              	.LVL132:
 1308 00fc 0028     		cmp	r0, #0
 1309 00fe 82D1     		bne	.L105
 879:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1310              		.loc 1 879 0
 1311 0100 09B0     		add	sp, sp, #36
 1312              	.LCFI29:
 1313              		.cfi_def_cfa_offset 12
 1314              		@ sp needed
 1315 0102 30BD     		pop	{r4, r5, pc}
 1316              	.L108:
 1317              		.align	2
 1318              	.L107:
 1319 0104 00000000 		.word	.LANCHOR2
 1320              		.cfi_endproc
 1321              	.LFE21:
 1323              		.section	.text.prvTimerTask,"ax",%progbits
 1324              		.align	2
 1325              		.thumb
 1326              		.thumb_func
 1328              	prvTimerTask:
 1329              	.LFB16:
ARM GAS  /tmp/cctEhCXu.s 			page 47


 549:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 1330              		.loc 1 549 0
 1331              		.cfi_startproc
 1332              		@ args = 0, pretend = 0, frame = 8
 1333              		@ frame_needed = 0, uses_anonymous_args = 0
 1334              	.LVL133:
 1335 0000 00B5     		push	{lr}
 1336              	.LCFI30:
 1337              		.cfi_def_cfa_offset 4
 1338              		.cfi_offset 14, -4
 1339 0002 83B0     		sub	sp, sp, #12
 1340              	.LCFI31:
 1341              		.cfi_def_cfa_offset 16
 1342              	.LVL134:
 1343              	.L110:
 572:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1344              		.loc 1 572 0 discriminator 1
 1345 0004 01A8     		add	r0, sp, #4
 1346 0006 FFF7FEFF 		bl	prvGetNextExpireTime
 1347              	.LVL135:
 576:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1348              		.loc 1 576 0 discriminator 1
 1349 000a 0199     		ldr	r1, [sp, #4]
 1350 000c FFF7FEFF 		bl	prvProcessTimerOrBlockTask
 1351              	.LVL136:
 579:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1352              		.loc 1 579 0 discriminator 1
 1353 0010 FFF7FEFF 		bl	prvProcessReceivedCommands
 1354              	.LVL137:
 1355 0014 F6E7     		b	.L110
 1356              		.cfi_endproc
 1357              	.LFE16:
 1359 0016 00BF     		.section	.text.xTimerGetTimerDaemonTaskHandle,"ax",%progbits
 1360              		.align	2
 1361              		.global	xTimerGetTimerDaemonTaskHandle
 1362              		.thumb
 1363              		.thumb_func
 1365              	xTimerGetTimerDaemonTaskHandle:
 1366              	.LFB9:
 425:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 1367              		.loc 1 425 0
 1368              		.cfi_startproc
 1369              		@ args = 0, pretend = 0, frame = 0
 1370              		@ frame_needed = 0, uses_anonymous_args = 0
 1371              		@ link register save eliminated.
 428:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimerTaskHandle;
 1372              		.loc 1 428 0
 1373 0000 064B     		ldr	r3, .L115
 1374 0002 1868     		ldr	r0, [r3]
 1375 0004 40B9     		cbnz	r0, .L113
 1376              	.LBB68:
 1377              	.LBB69:
 1378              		.loc 2 195 0
 1379              		.syntax unified
 1380              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1381 0006 4FF05003 			mov r3, #80												
 1382 000a 83F31188 		msr basepri, r3											
ARM GAS  /tmp/cctEhCXu.s 			page 48


 1383 000e BFF36F8F 		isb														
 1384 0012 BFF34F8F 		dsb														
 1385              	
 1386              	@ 0 "" 2
 1387              	.LVL138:
 1388              		.thumb
 1389              		.syntax unified
 1390              	.L114:
 1391 0016 FEE7     		b	.L114
 1392              	.L113:
 1393              	.LBE69:
 1394              	.LBE68:
 430:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1395              		.loc 1 430 0
 1396 0018 7047     		bx	lr
 1397              	.L116:
 1398 001a 00BF     		.align	2
 1399              	.L115:
 1400 001c 00000000 		.word	.LANCHOR7
 1401              		.cfi_endproc
 1402              	.LFE9:
 1404              		.section	.text.xTimerGetPeriod,"ax",%progbits
 1405              		.align	2
 1406              		.global	xTimerGetPeriod
 1407              		.thumb
 1408              		.thumb_func
 1410              	xTimerGetPeriod:
 1411              	.LFB10:
 434:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = xTimer;
 1412              		.loc 1 434 0
 1413              		.cfi_startproc
 1414              		@ args = 0, pretend = 0, frame = 0
 1415              		@ frame_needed = 0, uses_anonymous_args = 0
 1416              		@ link register save eliminated.
 1417              	.LVL139:
 437:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->xTimerPeriodInTicks;
 1418              		.loc 1 437 0
 1419 0000 40B9     		cbnz	r0, .L118
 1420              	.LBB70:
 1421              	.LBB71:
 1422              		.loc 2 195 0
 1423              		.syntax unified
 1424              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1425 0002 4FF05003 			mov r3, #80												
 1426 0006 83F31188 		msr basepri, r3											
 1427 000a BFF36F8F 		isb														
 1428 000e BFF34F8F 		dsb														
 1429              	
 1430              	@ 0 "" 2
 1431              	.LVL140:
 1432              		.thumb
 1433              		.syntax unified
 1434              	.L119:
 1435 0012 FEE7     		b	.L119
 1436              	.L118:
 1437              	.LBE71:
 1438              	.LBE70:
ARM GAS  /tmp/cctEhCXu.s 			page 49


 439:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1439              		.loc 1 439 0
 1440 0014 8069     		ldr	r0, [r0, #24]
 1441              	.LVL141:
 1442 0016 7047     		bx	lr
 1443              		.cfi_endproc
 1444              	.LFE10:
 1446              		.section	.text.vTimerSetReloadMode,"ax",%progbits
 1447              		.align	2
 1448              		.global	vTimerSetReloadMode
 1449              		.thumb
 1450              		.thumb_func
 1452              	vTimerSetReloadMode:
 1453              	.LFB11:
 443:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer =  xTimer;
 1454              		.loc 1 443 0
 1455              		.cfi_startproc
 1456              		@ args = 0, pretend = 0, frame = 0
 1457              		@ frame_needed = 0, uses_anonymous_args = 0
 1458              	.LVL142:
 1459 0000 38B5     		push	{r3, r4, r5, lr}
 1460              	.LCFI32:
 1461              		.cfi_def_cfa_offset 16
 1462              		.cfi_offset 3, -16
 1463              		.cfi_offset 4, -12
 1464              		.cfi_offset 5, -8
 1465              		.cfi_offset 14, -4
 1466              	.LVL143:
 446:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1467              		.loc 1 446 0
 1468 0002 40B9     		cbnz	r0, .L121
 1469              	.LBB72:
 1470              	.LBB73:
 1471              		.loc 2 195 0
 1472              		.syntax unified
 1473              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1474 0004 4FF05003 			mov r3, #80												
 1475 0008 83F31188 		msr basepri, r3											
 1476 000c BFF36F8F 		isb														
 1477 0010 BFF34F8F 		dsb														
 1478              	
 1479              	@ 0 "" 2
 1480              	.LVL144:
 1481              		.thumb
 1482              		.syntax unified
 1483              	.L122:
 1484 0014 FEE7     		b	.L122
 1485              	.L121:
 1486 0016 0446     		mov	r4, r0
 1487 0018 0D46     		mov	r5, r1
 1488              	.LBE73:
 1489              	.LBE72:
 447:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1490              		.loc 1 447 0
 1491 001a FFF7FEFF 		bl	vPortEnterCritical
 1492              	.LVL145:
 449:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
ARM GAS  /tmp/cctEhCXu.s 			page 50


 1493              		.loc 1 449 0
 1494 001e 35B1     		cbz	r5, .L123
 451:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 1495              		.loc 1 451 0
 1496 0020 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1497 0024 43F00403 		orr	r3, r3, #4
 1498 0028 84F82830 		strb	r3, [r4, #40]
 1499 002c 05E0     		b	.L124
 1500              	.L123:
 455:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 1501              		.loc 1 455 0
 1502 002e 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1503 0032 23F00403 		bic	r3, r3, #4
 1504 0036 84F82830 		strb	r3, [r4, #40]
 1505              	.L124:
 458:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 1506              		.loc 1 458 0
 1507 003a FFF7FEFF 		bl	vPortExitCritical
 1508              	.LVL146:
 1509 003e 38BD     		pop	{r3, r4, r5, pc}
 1510              		.cfi_endproc
 1511              	.LFE11:
 1513              		.section	.text.uxTimerGetReloadMode,"ax",%progbits
 1514              		.align	2
 1515              		.global	uxTimerGetReloadMode
 1516              		.thumb
 1517              		.thumb_func
 1519              	uxTimerGetReloadMode:
 1520              	.LFB12:
 463:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer =  xTimer;
 1521              		.loc 1 463 0
 1522              		.cfi_startproc
 1523              		@ args = 0, pretend = 0, frame = 0
 1524              		@ frame_needed = 0, uses_anonymous_args = 0
 1525              	.LVL147:
 467:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1526              		.loc 1 467 0
 1527 0000 40B9     		cbnz	r0, .L127
 1528              	.LBB74:
 1529              	.LBB75:
 1530              		.loc 2 195 0
 1531              		.syntax unified
 1532              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1533 0002 4FF05003 			mov r3, #80												
 1534 0006 83F31188 		msr basepri, r3											
 1535 000a BFF36F8F 		isb														
 1536 000e BFF34F8F 		dsb														
 1537              	
 1538              	@ 0 "" 2
 1539              	.LVL148:
 1540              		.thumb
 1541              		.syntax unified
 1542              	.L128:
 1543 0012 FEE7     		b	.L128
 1544              	.L127:
 1545              	.LBE75:
 1546              	.LBE74:
ARM GAS  /tmp/cctEhCXu.s 			page 51


 463:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer =  xTimer;
 1547              		.loc 1 463 0
 1548 0014 10B5     		push	{r4, lr}
 1549              	.LCFI33:
 1550              		.cfi_def_cfa_offset 8
 1551              		.cfi_offset 4, -8
 1552              		.cfi_offset 14, -4
 1553 0016 0446     		mov	r4, r0
 468:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1554              		.loc 1 468 0
 1555 0018 FFF7FEFF 		bl	vPortEnterCritical
 1556              	.LVL149:
 470:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 1557              		.loc 1 470 0
 1558 001c 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1559 0020 13F0040F 		tst	r3, #4
 1560 0024 01D1     		bne	.L130
 473:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 1561              		.loc 1 473 0
 1562 0026 0024     		movs	r4, #0
 1563              	.LVL150:
 1564 0028 00E0     		b	.L129
 1565              	.LVL151:
 1566              	.L130:
 478:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 1567              		.loc 1 478 0
 1568 002a 0124     		movs	r4, #1
 1569              	.LVL152:
 1570              	.L129:
 481:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1571              		.loc 1 481 0
 1572 002c FFF7FEFF 		bl	vPortExitCritical
 1573              	.LVL153:
 484:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1574              		.loc 1 484 0
 1575 0030 2046     		mov	r0, r4
 1576 0032 10BD     		pop	{r4, pc}
 1577              		.cfi_endproc
 1578              	.LFE12:
 1580              		.section	.text.xTimerGetExpiryTime,"ax",%progbits
 1581              		.align	2
 1582              		.global	xTimerGetExpiryTime
 1583              		.thumb
 1584              		.thumb_func
 1586              	xTimerGetExpiryTime:
 1587              	.LFB13:
 488:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer =  xTimer;
 1588              		.loc 1 488 0
 1589              		.cfi_startproc
 1590              		@ args = 0, pretend = 0, frame = 0
 1591              		@ frame_needed = 0, uses_anonymous_args = 0
 1592              		@ link register save eliminated.
 1593              	.LVL154:
 492:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 1594              		.loc 1 492 0
 1595 0000 40B9     		cbnz	r0, .L133
 1596              	.LBB76:
ARM GAS  /tmp/cctEhCXu.s 			page 52


 1597              	.LBB77:
 1598              		.loc 2 195 0
 1599              		.syntax unified
 1600              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1601 0002 4FF05003 			mov r3, #80												
 1602 0006 83F31188 		msr basepri, r3											
 1603 000a BFF36F8F 		isb														
 1604 000e BFF34F8F 		dsb														
 1605              	
 1606              	@ 0 "" 2
 1607              	.LVL155:
 1608              		.thumb
 1609              		.syntax unified
 1610              	.L134:
 1611 0012 FEE7     		b	.L134
 1612              	.L133:
 1613              	.LVL156:
 1614              	.LBE77:
 1615              	.LBE76:
 495:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1616              		.loc 1 495 0
 1617 0014 4068     		ldr	r0, [r0, #4]
 1618              	.LVL157:
 1619 0016 7047     		bx	lr
 1620              		.cfi_endproc
 1621              	.LFE13:
 1623              		.section	.text.pcTimerGetName,"ax",%progbits
 1624              		.align	2
 1625              		.global	pcTimerGetName
 1626              		.thumb
 1627              		.thumb_func
 1629              	pcTimerGetName:
 1630              	.LFB14:
 499:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = xTimer;
 1631              		.loc 1 499 0
 1632              		.cfi_startproc
 1633              		@ args = 0, pretend = 0, frame = 0
 1634              		@ frame_needed = 0, uses_anonymous_args = 0
 1635              		@ link register save eliminated.
 1636              	.LVL158:
 502:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->pcTimerName;
 1637              		.loc 1 502 0
 1638 0000 40B9     		cbnz	r0, .L136
 1639              	.LBB78:
 1640              	.LBB79:
 1641              		.loc 2 195 0
 1642              		.syntax unified
 1643              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1644 0002 4FF05003 			mov r3, #80												
 1645 0006 83F31188 		msr basepri, r3											
 1646 000a BFF36F8F 		isb														
 1647 000e BFF34F8F 		dsb														
 1648              	
 1649              	@ 0 "" 2
 1650              	.LVL159:
 1651              		.thumb
 1652              		.syntax unified
ARM GAS  /tmp/cctEhCXu.s 			page 53


 1653              	.L137:
 1654 0012 FEE7     		b	.L137
 1655              	.L136:
 1656              	.LBE79:
 1657              	.LBE78:
 504:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1658              		.loc 1 504 0
 1659 0014 0068     		ldr	r0, [r0]
 1660              	.LVL160:
 1661 0016 7047     		bx	lr
 1662              		.cfi_endproc
 1663              	.LFE14:
 1665              		.section	.text.xTimerIsTimerActive,"ax",%progbits
 1666              		.align	2
 1667              		.global	xTimerIsTimerActive
 1668              		.thumb
 1669              		.thumb_func
 1671              	xTimerIsTimerActive:
 1672              	.LFB24:
 990:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 991:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 992:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerIsTimerActive( TimerHandle_t xTimer )
 993:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 1673              		.loc 1 993 0
 1674              		.cfi_startproc
 1675              		@ args = 0, pretend = 0, frame = 0
 1676              		@ frame_needed = 0, uses_anonymous_args = 0
 1677              	.LVL161:
 994:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn;
 995:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = xTimer;
 996:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 997:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1678              		.loc 1 997 0
 1679 0000 40B9     		cbnz	r0, .L139
 1680              	.LBB80:
 1681              	.LBB81:
 1682              		.loc 2 195 0
 1683              		.syntax unified
 1684              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1685 0002 4FF05003 			mov r3, #80												
 1686 0006 83F31188 		msr basepri, r3											
 1687 000a BFF36F8F 		isb														
 1688 000e BFF34F8F 		dsb														
 1689              	
 1690              	@ 0 "" 2
 1691              	.LVL162:
 1692              		.thumb
 1693              		.syntax unified
 1694              	.L140:
 1695 0012 FEE7     		b	.L140
 1696              	.L139:
 1697              	.LBE81:
 1698              	.LBE80:
 993:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn;
 1699              		.loc 1 993 0
 1700 0014 10B5     		push	{r4, lr}
 1701              	.LCFI34:
ARM GAS  /tmp/cctEhCXu.s 			page 54


 1702              		.cfi_def_cfa_offset 8
 1703              		.cfi_offset 4, -8
 1704              		.cfi_offset 14, -4
 1705 0016 0446     		mov	r4, r0
 998:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 999:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Is the timer in the list of active timers? */
1000:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1706              		.loc 1 1000 0
 1707 0018 FFF7FEFF 		bl	vPortEnterCritical
 1708              	.LVL163:
1001:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
1002:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( ( pxTimer->ucStatus & tmrSTATUS_IS_ACTIVE ) == 0 )
 1709              		.loc 1 1002 0
 1710 001c 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1711 0020 13F0010F 		tst	r3, #1
 1712 0024 01D1     		bne	.L142
1003:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
1004:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReturn = pdFALSE;
 1713              		.loc 1 1004 0
 1714 0026 0024     		movs	r4, #0
 1715              	.LVL164:
 1716 0028 00E0     		b	.L141
 1717              	.LVL165:
 1718              	.L142:
1005:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
1006:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
1007:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
1008:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReturn = pdTRUE;
 1719              		.loc 1 1008 0
 1720 002a 0124     		movs	r4, #1
 1721              	.LVL166:
 1722              	.L141:
1009:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
1010:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
1011:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 1723              		.loc 1 1011 0
 1724 002c FFF7FEFF 		bl	vPortExitCritical
 1725              	.LVL167:
1012:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1013:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
1014:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } /*lint !e818 Can't be pointer to const due to the typedef. */
 1726              		.loc 1 1014 0
 1727 0030 2046     		mov	r0, r4
 1728 0032 10BD     		pop	{r4, pc}
 1729              		.cfi_endproc
 1730              	.LFE24:
 1732              		.section	.text.pvTimerGetTimerID,"ax",%progbits
 1733              		.align	2
 1734              		.global	pvTimerGetTimerID
 1735              		.thumb
 1736              		.thumb_func
 1738              	pvTimerGetTimerID:
 1739              	.LFB25:
1015:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1016:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1017:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void *pvTimerGetTimerID( const TimerHandle_t xTimer )
1018:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
ARM GAS  /tmp/cctEhCXu.s 			page 55


 1740              		.loc 1 1018 0
 1741              		.cfi_startproc
 1742              		@ args = 0, pretend = 0, frame = 0
 1743              		@ frame_needed = 0, uses_anonymous_args = 0
 1744              	.LVL168:
1019:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = xTimer;
1020:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void *pvReturn;
1021:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1022:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1745              		.loc 1 1022 0
 1746 0000 40B9     		cbnz	r0, .L145
 1747              	.LBB82:
 1748              	.LBB83:
 1749              		.loc 2 195 0
 1750              		.syntax unified
 1751              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1752 0002 4FF05003 			mov r3, #80												
 1753 0006 83F31188 		msr basepri, r3											
 1754 000a BFF36F8F 		isb														
 1755 000e BFF34F8F 		dsb														
 1756              	
 1757              	@ 0 "" 2
 1758              	.LVL169:
 1759              		.thumb
 1760              		.syntax unified
 1761              	.L146:
 1762 0012 FEE7     		b	.L146
 1763              	.L145:
 1764              	.LBE83:
 1765              	.LBE82:
1018:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = xTimer;
 1766              		.loc 1 1018 0
 1767 0014 10B5     		push	{r4, lr}
 1768              	.LCFI35:
 1769              		.cfi_def_cfa_offset 8
 1770              		.cfi_offset 4, -8
 1771              		.cfi_offset 14, -4
 1772 0016 0446     		mov	r4, r0
1023:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1024:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1773              		.loc 1 1024 0
 1774 0018 FFF7FEFF 		bl	vPortEnterCritical
 1775              	.LVL170:
1025:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
1026:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pvReturn = pxTimer->pvTimerID;
 1776              		.loc 1 1026 0
 1777 001c E469     		ldr	r4, [r4, #28]
 1778              	.LVL171:
1027:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
1028:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 1779              		.loc 1 1028 0
 1780 001e FFF7FEFF 		bl	vPortExitCritical
 1781              	.LVL172:
1029:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1030:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pvReturn;
1031:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 1782              		.loc 1 1031 0
ARM GAS  /tmp/cctEhCXu.s 			page 56


 1783 0022 2046     		mov	r0, r4
 1784 0024 10BD     		pop	{r4, pc}
 1785              		.cfi_endproc
 1786              	.LFE25:
 1788 0026 00BF     		.section	.text.vTimerSetTimerID,"ax",%progbits
 1789              		.align	2
 1790              		.global	vTimerSetTimerID
 1791              		.thumb
 1792              		.thumb_func
 1794              	vTimerSetTimerID:
 1795              	.LFB26:
1032:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1033:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1034:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void vTimerSetTimerID( TimerHandle_t xTimer, void *pvNewID )
1035:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 1796              		.loc 1 1035 0
 1797              		.cfi_startproc
 1798              		@ args = 0, pretend = 0, frame = 0
 1799              		@ frame_needed = 0, uses_anonymous_args = 0
 1800              	.LVL173:
 1801 0000 38B5     		push	{r3, r4, r5, lr}
 1802              	.LCFI36:
 1803              		.cfi_def_cfa_offset 16
 1804              		.cfi_offset 3, -16
 1805              		.cfi_offset 4, -12
 1806              		.cfi_offset 5, -8
 1807              		.cfi_offset 14, -4
 1808              	.LVL174:
1036:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = xTimer;
1037:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1038:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1809              		.loc 1 1038 0
 1810 0002 40B9     		cbnz	r0, .L149
 1811              	.LBB84:
 1812              	.LBB85:
 1813              		.loc 2 195 0
 1814              		.syntax unified
 1815              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1816 0004 4FF05003 			mov r3, #80												
 1817 0008 83F31188 		msr basepri, r3											
 1818 000c BFF36F8F 		isb														
 1819 0010 BFF34F8F 		dsb														
 1820              	
 1821              	@ 0 "" 2
 1822              	.LVL175:
 1823              		.thumb
 1824              		.syntax unified
 1825              	.L150:
 1826 0014 FEE7     		b	.L150
 1827              	.L149:
 1828 0016 0446     		mov	r4, r0
 1829 0018 0D46     		mov	r5, r1
 1830              	.LBE85:
 1831              	.LBE84:
1039:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1040:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1832              		.loc 1 1040 0
ARM GAS  /tmp/cctEhCXu.s 			page 57


 1833 001a FFF7FEFF 		bl	vPortEnterCritical
 1834              	.LVL176:
1041:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
1042:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer->pvTimerID = pvNewID;
 1835              		.loc 1 1042 0
 1836 001e E561     		str	r5, [r4, #28]
1043:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
1044:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 1837              		.loc 1 1044 0
 1838 0020 FFF7FEFF 		bl	vPortExitCritical
 1839              	.LVL177:
 1840 0024 38BD     		pop	{r3, r4, r5, pc}
 1841              		.cfi_endproc
 1842              	.LFE26:
 1844 0026 00BF     		.section	.text.xTimerPendFunctionCallFromISR,"ax",%progbits
 1845              		.align	2
 1846              		.global	xTimerPendFunctionCallFromISR
 1847              		.thumb
 1848              		.thumb_func
 1850              	xTimerPendFunctionCallFromISR:
 1851              	.LFB27:
1045:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
1046:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1047:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1048:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( INCLUDE_xTimerPendFunctionCall == 1 )
1049:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1050:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xTimerPendFunctionCallFromISR( PendedFunction_t xFunctionToPend, void *pvParameter1, ui
1051:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1852              		.loc 1 1051 0
 1853              		.cfi_startproc
 1854              		@ args = 0, pretend = 0, frame = 16
 1855              		@ frame_needed = 0, uses_anonymous_args = 0
 1856              	.LVL178:
 1857 0000 10B5     		push	{r4, lr}
 1858              	.LCFI37:
 1859              		.cfi_def_cfa_offset 8
 1860              		.cfi_offset 4, -8
 1861              		.cfi_offset 14, -4
 1862 0002 84B0     		sub	sp, sp, #16
 1863              	.LCFI38:
 1864              		.cfi_def_cfa_offset 24
 1865 0004 1C46     		mov	r4, r3
1052:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	DaemonTaskMessage_t xMessage;
1053:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xReturn;
1054:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1055:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Complete the message with the function parameters and post it to the
1056:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		daemon task. */
1057:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK_FROM_ISR;
 1866              		.loc 1 1057 0
 1867 0006 6FF00103 		mvn	r3, #1
 1868              	.LVL179:
 1869 000a 0093     		str	r3, [sp]
1058:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
 1870              		.loc 1 1058 0
 1871 000c 0190     		str	r0, [sp, #4]
1059:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
 1872              		.loc 1 1059 0
ARM GAS  /tmp/cctEhCXu.s 			page 58


 1873 000e 0291     		str	r1, [sp, #8]
1060:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
 1874              		.loc 1 1060 0
 1875 0010 0392     		str	r2, [sp, #12]
1061:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1062:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xReturn = xQueueSendFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 1876              		.loc 1 1062 0
 1877 0012 0023     		movs	r3, #0
 1878 0014 2246     		mov	r2, r4
 1879              	.LVL180:
 1880 0016 6946     		mov	r1, sp
 1881              	.LVL181:
 1882 0018 0248     		ldr	r0, .L154
 1883              	.LVL182:
 1884 001a 0068     		ldr	r0, [r0]
 1885 001c FFF7FEFF 		bl	xQueueGenericSendFromISR
 1886              	.LVL183:
1063:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1064:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		tracePEND_FUNC_CALL_FROM_ISR( xFunctionToPend, pvParameter1, ulParameter2, xReturn );
1065:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1066:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return xReturn;
1067:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1887              		.loc 1 1067 0
 1888 0020 04B0     		add	sp, sp, #16
 1889              	.LCFI39:
 1890              		.cfi_def_cfa_offset 8
 1891              		@ sp needed
 1892 0022 10BD     		pop	{r4, pc}
 1893              	.LVL184:
 1894              	.L155:
 1895              		.align	2
 1896              	.L154:
 1897 0024 00000000 		.word	.LANCHOR2
 1898              		.cfi_endproc
 1899              	.LFE27:
 1901              		.section	.text.xTimerPendFunctionCall,"ax",%progbits
 1902              		.align	2
 1903              		.global	xTimerPendFunctionCall
 1904              		.thumb
 1905              		.thumb_func
 1907              	xTimerPendFunctionCall:
 1908              	.LFB28:
1068:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1069:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* INCLUDE_xTimerPendFunctionCall */
1070:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1071:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1072:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( INCLUDE_xTimerPendFunctionCall == 1 )
1073:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1074:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xTimerPendFunctionCall( PendedFunction_t xFunctionToPend, void *pvParameter1, uint32_t 
1075:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1909              		.loc 1 1075 0
 1910              		.cfi_startproc
 1911              		@ args = 0, pretend = 0, frame = 16
 1912              		@ frame_needed = 0, uses_anonymous_args = 0
 1913              	.LVL185:
 1914 0000 30B5     		push	{r4, r5, lr}
 1915              	.LCFI40:
ARM GAS  /tmp/cctEhCXu.s 			page 59


 1916              		.cfi_def_cfa_offset 12
 1917              		.cfi_offset 4, -12
 1918              		.cfi_offset 5, -8
 1919              		.cfi_offset 14, -4
 1920 0002 85B0     		sub	sp, sp, #20
 1921              	.LCFI41:
 1922              		.cfi_def_cfa_offset 32
 1923 0004 1446     		mov	r4, r2
1076:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	DaemonTaskMessage_t xMessage;
1077:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xReturn;
1078:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1079:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* This function can only be called after a timer has been created or
1080:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		after the scheduler has been started because, until then, the timer
1081:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		queue does not exist. */
1082:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		configASSERT( xTimerQueue );
 1924              		.loc 1 1082 0
 1925 0006 0D4A     		ldr	r2, .L160
 1926              	.LVL186:
 1927 0008 1568     		ldr	r5, [r2]
 1928 000a 45B9     		cbnz	r5, .L157
 1929              	.LBB86:
 1930              	.LBB87:
 1931              		.loc 2 195 0
 1932              		.syntax unified
 1933              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1934 000c 4FF05003 			mov r3, #80												
 1935 0010 83F31188 		msr basepri, r3											
 1936 0014 BFF36F8F 		isb														
 1937 0018 BFF34F8F 		dsb														
 1938              	
 1939              	@ 0 "" 2
 1940              	.LVL187:
 1941              		.thumb
 1942              		.syntax unified
 1943              	.L158:
 1944 001c FEE7     		b	.L158
 1945              	.LVL188:
 1946              	.L157:
 1947 001e 1A46     		mov	r2, r3
 1948 0020 0346     		mov	r3, r0
 1949              	.LVL189:
 1950              	.LBE87:
 1951              	.LBE86:
1083:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1084:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Complete the message with the function parameters and post it to the
1085:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		daemon task. */
1086:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK;
 1952              		.loc 1 1086 0
 1953 0022 4FF0FF30 		mov	r0, #-1
 1954              	.LVL190:
 1955 0026 0090     		str	r0, [sp]
1087:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
 1956              		.loc 1 1087 0
 1957 0028 0193     		str	r3, [sp, #4]
1088:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
 1958              		.loc 1 1088 0
 1959 002a 0291     		str	r1, [sp, #8]
ARM GAS  /tmp/cctEhCXu.s 			page 60


1089:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
 1960              		.loc 1 1089 0
 1961 002c 0394     		str	r4, [sp, #12]
1090:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1091:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 1962              		.loc 1 1091 0
 1963 002e 0023     		movs	r3, #0
 1964              	.LVL191:
 1965 0030 6946     		mov	r1, sp
 1966              	.LVL192:
 1967 0032 2846     		mov	r0, r5
 1968 0034 FFF7FEFF 		bl	xQueueGenericSend
 1969              	.LVL193:
1092:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1093:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		tracePEND_FUNC_CALL( xFunctionToPend, pvParameter1, ulParameter2, xReturn );
1094:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1095:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return xReturn;
1096:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1970              		.loc 1 1096 0
 1971 0038 05B0     		add	sp, sp, #20
 1972              	.LCFI42:
 1973              		.cfi_def_cfa_offset 12
 1974              		@ sp needed
 1975 003a 30BD     		pop	{r4, r5, pc}
 1976              	.LVL194:
 1977              	.L161:
 1978              		.align	2
 1979              	.L160:
 1980 003c 00000000 		.word	.LANCHOR2
 1981              		.cfi_endproc
 1982              	.LFE28:
 1984              		.section	.text.uxTimerGetTimerNumber,"ax",%progbits
 1985              		.align	2
 1986              		.global	uxTimerGetTimerNumber
 1987              		.thumb
 1988              		.thumb_func
 1990              	uxTimerGetTimerNumber:
 1991              	.LFB29:
1097:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1098:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* INCLUDE_xTimerPendFunctionCall */
1099:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1100:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1101:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1102:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1103:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	UBaseType_t uxTimerGetTimerNumber( TimerHandle_t xTimer )
1104:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1992              		.loc 1 1104 0
 1993              		.cfi_startproc
 1994              		@ args = 0, pretend = 0, frame = 0
 1995              		@ frame_needed = 0, uses_anonymous_args = 0
 1996              		@ link register save eliminated.
 1997              	.LVL195:
1105:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return ( ( Timer_t * ) xTimer )->uxTimerNumber;
1106:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1998              		.loc 1 1106 0
 1999 0000 406A     		ldr	r0, [r0, #36]
 2000              	.LVL196:
ARM GAS  /tmp/cctEhCXu.s 			page 61


 2001 0002 7047     		bx	lr
 2002              		.cfi_endproc
 2003              	.LFE29:
 2005              		.section	.text.vTimerSetTimerNumber,"ax",%progbits
 2006              		.align	2
 2007              		.global	vTimerSetTimerNumber
 2008              		.thumb
 2009              		.thumb_func
 2011              	vTimerSetTimerNumber:
 2012              	.LFB30:
1107:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1108:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* configUSE_TRACE_FACILITY */
1109:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1110:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1111:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1112:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1113:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	void vTimerSetTimerNumber( TimerHandle_t xTimer, UBaseType_t uxTimerNumber )
1114:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 2013              		.loc 1 1114 0
 2014              		.cfi_startproc
 2015              		@ args = 0, pretend = 0, frame = 0
 2016              		@ frame_needed = 0, uses_anonymous_args = 0
 2017              		@ link register save eliminated.
 2018              	.LVL197:
1115:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		( ( Timer_t * ) xTimer )->uxTimerNumber = uxTimerNumber;
 2019              		.loc 1 1115 0
 2020 0000 4162     		str	r1, [r0, #36]
 2021 0002 7047     		bx	lr
 2022              		.cfi_endproc
 2023              	.LFE30:
 2025              		.section	.bss.pxCurrentTimerList,"aw",%nobits
 2026              		.align	2
 2027              		.set	.LANCHOR0,. + 0
 2030              	pxCurrentTimerList:
 2031 0000 00000000 		.space	4
 2032              		.section	.bss.xActiveTimerList1,"aw",%nobits
 2033              		.align	2
 2034              		.set	.LANCHOR3,. + 0
 2037              	xActiveTimerList1:
 2038 0000 00000000 		.space	20
 2038      00000000 
 2038      00000000 
 2038      00000000 
 2038      00000000 
 2039              		.section	.bss.xActiveTimerList2,"aw",%nobits
 2040              		.align	2
 2041              		.set	.LANCHOR4,. + 0
 2044              	xActiveTimerList2:
 2045 0000 00000000 		.space	20
 2045      00000000 
 2045      00000000 
 2045      00000000 
 2045      00000000 
 2046              		.section	.bss.xStaticTimerQueue.5594,"aw",%nobits
 2047              		.align	2
 2048              		.set	.LANCHOR5,. + 0
 2051              	xStaticTimerQueue.5594:
ARM GAS  /tmp/cctEhCXu.s 			page 62


 2052 0000 00000000 		.space	80
 2052      00000000 
 2052      00000000 
 2052      00000000 
 2052      00000000 
 2053              		.section	.rodata.str1.4,"aMS",%progbits,1
 2054              		.align	2
 2055              	.LC0:
 2056 0000 546D7251 		.ascii	"TmrQ\000"
 2056      00
 2057 0005 000000   		.space	3
 2058              	.LC1:
 2059 0008 546D7220 		.ascii	"Tmr Svc\000"
 2059      53766300 
 2060              		.section	.bss.xTimerQueue,"aw",%nobits
 2061              		.align	2
 2062              		.set	.LANCHOR2,. + 0
 2065              	xTimerQueue:
 2066 0000 00000000 		.space	4
 2067              		.section	.bss.xLastTime.5544,"aw",%nobits
 2068              		.align	2
 2069              		.set	.LANCHOR8,. + 0
 2072              	xLastTime.5544:
 2073 0000 00000000 		.space	4
 2074              		.section	.bss.ucStaticTimerQueueStorage.5595,"aw",%nobits
 2075              		.align	2
 2076              		.set	.LANCHOR6,. + 0
 2079              	ucStaticTimerQueueStorage.5595:
 2080 0000 00000000 		.space	160
 2080      00000000 
 2080      00000000 
 2080      00000000 
 2080      00000000 
 2081              		.section	.bss.pxOverflowTimerList,"aw",%nobits
 2082              		.align	2
 2083              		.set	.LANCHOR1,. + 0
 2086              	pxOverflowTimerList:
 2087 0000 00000000 		.space	4
 2088              		.section	.bss.xTimerTaskHandle,"aw",%nobits
 2089              		.align	2
 2090              		.set	.LANCHOR7,. + 0
 2093              	xTimerTaskHandle:
 2094 0000 00000000 		.space	4
 2095              		.text
 2096              	.Letext0:
 2097              		.file 3 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/lib/gcc/arm-none-eabi/5.4.1/include/stdd
 2098              		.file 4 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_t
 2099              		.file 5 "/home/deh/launchpad/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 2100              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h"
 2101              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 2102              		.file 8 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 2103              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 2104              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 2105              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/timers.h"
 2106              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
ARM GAS  /tmp/cctEhCXu.s 			page 63


DEFINED SYMBOLS
                            *ABS*:00000000 timers.c
     /tmp/cctEhCXu.s:22     .text.prvGetNextExpireTime:00000000 $t
     /tmp/cctEhCXu.s:26     .text.prvGetNextExpireTime:00000000 prvGetNextExpireTime
     /tmp/cctEhCXu.s:64     .text.prvGetNextExpireTime:0000001c $d
     /tmp/cctEhCXu.s:69     .text.prvInsertTimerInActiveList:00000000 $t
     /tmp/cctEhCXu.s:73     .text.prvInsertTimerInActiveList:00000000 prvInsertTimerInActiveList
     /tmp/cctEhCXu.s:149    .text.prvInsertTimerInActiveList:00000040 $d
     /tmp/cctEhCXu.s:155    .text.prvCheckForValidListAndQueue:00000000 $t
     /tmp/cctEhCXu.s:159    .text.prvCheckForValidListAndQueue:00000000 prvCheckForValidListAndQueue
     /tmp/cctEhCXu.s:229    .text.prvCheckForValidListAndQueue:0000004c $d
     /tmp/cctEhCXu.s:241    .text.prvInitialiseNewTimer:00000000 $t
     /tmp/cctEhCXu.s:245    .text.prvInitialiseNewTimer:00000000 prvInitialiseNewTimer
     /tmp/cctEhCXu.s:320    .text.xTimerCreateTimerTask:00000000 $t
     /tmp/cctEhCXu.s:325    .text.xTimerCreateTimerTask:00000000 xTimerCreateTimerTask
     /tmp/cctEhCXu.s:423    .text.xTimerCreateTimerTask:00000060 $d
     /tmp/cctEhCXu.s:1328   .text.prvTimerTask:00000000 prvTimerTask
     /tmp/cctEhCXu.s:431    .text.xTimerCreate:00000000 $t
     /tmp/cctEhCXu.s:436    .text.xTimerCreate:00000000 xTimerCreate
     /tmp/cctEhCXu.s:493    .text.xTimerCreateStatic:00000000 $t
     /tmp/cctEhCXu.s:498    .text.xTimerCreateStatic:00000000 xTimerCreateStatic
     /tmp/cctEhCXu.s:591    .text.xTimerGenericCommand:00000000 $t
     /tmp/cctEhCXu.s:596    .text.xTimerGenericCommand:00000000 xTimerGenericCommand
     /tmp/cctEhCXu.s:704    .text.xTimerGenericCommand:00000068 $d
     /tmp/cctEhCXu.s:709    .text.prvSwitchTimerLists:00000000 $t
     /tmp/cctEhCXu.s:713    .text.prvSwitchTimerLists:00000000 prvSwitchTimerLists
     /tmp/cctEhCXu.s:828    .text.prvSwitchTimerLists:00000078 $d
     /tmp/cctEhCXu.s:834    .text.prvSampleTimeNow:00000000 $t
     /tmp/cctEhCXu.s:838    .text.prvSampleTimeNow:00000000 prvSampleTimeNow
     /tmp/cctEhCXu.s:887    .text.prvSampleTimeNow:00000028 $d
     /tmp/cctEhCXu.s:892    .text.prvProcessExpiredTimer:00000000 $t
     /tmp/cctEhCXu.s:896    .text.prvProcessExpiredTimer:00000000 prvProcessExpiredTimer
     /tmp/cctEhCXu.s:988    .text.prvProcessExpiredTimer:00000064 $d
     /tmp/cctEhCXu.s:993    .text.prvProcessTimerOrBlockTask:00000000 $t
     /tmp/cctEhCXu.s:997    .text.prvProcessTimerOrBlockTask:00000000 prvProcessTimerOrBlockTask
     /tmp/cctEhCXu.s:1100   .text.prvProcessTimerOrBlockTask:00000068 $d
     /tmp/cctEhCXu.s:1107   .text.prvProcessReceivedCommands:00000000 $t
     /tmp/cctEhCXu.s:1111   .text.prvProcessReceivedCommands:00000000 prvProcessReceivedCommands
     /tmp/cctEhCXu.s:1168   .text.prvProcessReceivedCommands:00000036 $d
     /tmp/cctEhCXu.s:1178   .text.prvProcessReceivedCommands:00000040 $t
     /tmp/cctEhCXu.s:1319   .text.prvProcessReceivedCommands:00000104 $d
     /tmp/cctEhCXu.s:1324   .text.prvTimerTask:00000000 $t
     /tmp/cctEhCXu.s:1360   .text.xTimerGetTimerDaemonTaskHandle:00000000 $t
     /tmp/cctEhCXu.s:1365   .text.xTimerGetTimerDaemonTaskHandle:00000000 xTimerGetTimerDaemonTaskHandle
     /tmp/cctEhCXu.s:1400   .text.xTimerGetTimerDaemonTaskHandle:0000001c $d
     /tmp/cctEhCXu.s:1405   .text.xTimerGetPeriod:00000000 $t
     /tmp/cctEhCXu.s:1410   .text.xTimerGetPeriod:00000000 xTimerGetPeriod
     /tmp/cctEhCXu.s:1447   .text.vTimerSetReloadMode:00000000 $t
     /tmp/cctEhCXu.s:1452   .text.vTimerSetReloadMode:00000000 vTimerSetReloadMode
     /tmp/cctEhCXu.s:1514   .text.uxTimerGetReloadMode:00000000 $t
     /tmp/cctEhCXu.s:1519   .text.uxTimerGetReloadMode:00000000 uxTimerGetReloadMode
     /tmp/cctEhCXu.s:1581   .text.xTimerGetExpiryTime:00000000 $t
     /tmp/cctEhCXu.s:1586   .text.xTimerGetExpiryTime:00000000 xTimerGetExpiryTime
     /tmp/cctEhCXu.s:1624   .text.pcTimerGetName:00000000 $t
     /tmp/cctEhCXu.s:1629   .text.pcTimerGetName:00000000 pcTimerGetName
     /tmp/cctEhCXu.s:1666   .text.xTimerIsTimerActive:00000000 $t
     /tmp/cctEhCXu.s:1671   .text.xTimerIsTimerActive:00000000 xTimerIsTimerActive
ARM GAS  /tmp/cctEhCXu.s 			page 64


     /tmp/cctEhCXu.s:1733   .text.pvTimerGetTimerID:00000000 $t
     /tmp/cctEhCXu.s:1738   .text.pvTimerGetTimerID:00000000 pvTimerGetTimerID
     /tmp/cctEhCXu.s:1789   .text.vTimerSetTimerID:00000000 $t
     /tmp/cctEhCXu.s:1794   .text.vTimerSetTimerID:00000000 vTimerSetTimerID
     /tmp/cctEhCXu.s:1845   .text.xTimerPendFunctionCallFromISR:00000000 $t
     /tmp/cctEhCXu.s:1850   .text.xTimerPendFunctionCallFromISR:00000000 xTimerPendFunctionCallFromISR
     /tmp/cctEhCXu.s:1897   .text.xTimerPendFunctionCallFromISR:00000024 $d
     /tmp/cctEhCXu.s:1902   .text.xTimerPendFunctionCall:00000000 $t
     /tmp/cctEhCXu.s:1907   .text.xTimerPendFunctionCall:00000000 xTimerPendFunctionCall
     /tmp/cctEhCXu.s:1980   .text.xTimerPendFunctionCall:0000003c $d
     /tmp/cctEhCXu.s:1985   .text.uxTimerGetTimerNumber:00000000 $t
     /tmp/cctEhCXu.s:1990   .text.uxTimerGetTimerNumber:00000000 uxTimerGetTimerNumber
     /tmp/cctEhCXu.s:2006   .text.vTimerSetTimerNumber:00000000 $t
     /tmp/cctEhCXu.s:2011   .text.vTimerSetTimerNumber:00000000 vTimerSetTimerNumber
     /tmp/cctEhCXu.s:2026   .bss.pxCurrentTimerList:00000000 $d
     /tmp/cctEhCXu.s:2030   .bss.pxCurrentTimerList:00000000 pxCurrentTimerList
     /tmp/cctEhCXu.s:2033   .bss.xActiveTimerList1:00000000 $d
     /tmp/cctEhCXu.s:2037   .bss.xActiveTimerList1:00000000 xActiveTimerList1
     /tmp/cctEhCXu.s:2040   .bss.xActiveTimerList2:00000000 $d
     /tmp/cctEhCXu.s:2044   .bss.xActiveTimerList2:00000000 xActiveTimerList2
     /tmp/cctEhCXu.s:2047   .bss.xStaticTimerQueue.5594:00000000 $d
     /tmp/cctEhCXu.s:2051   .bss.xStaticTimerQueue.5594:00000000 xStaticTimerQueue.5594
     /tmp/cctEhCXu.s:2054   .rodata.str1.4:00000000 $d
     /tmp/cctEhCXu.s:2061   .bss.xTimerQueue:00000000 $d
     /tmp/cctEhCXu.s:2065   .bss.xTimerQueue:00000000 xTimerQueue
     /tmp/cctEhCXu.s:2068   .bss.xLastTime.5544:00000000 $d
     /tmp/cctEhCXu.s:2072   .bss.xLastTime.5544:00000000 xLastTime.5544
     /tmp/cctEhCXu.s:2075   .bss.ucStaticTimerQueueStorage.5595:00000000 $d
     /tmp/cctEhCXu.s:2079   .bss.ucStaticTimerQueueStorage.5595:00000000 ucStaticTimerQueueStorage.5595
     /tmp/cctEhCXu.s:2082   .bss.pxOverflowTimerList:00000000 $d
     /tmp/cctEhCXu.s:2086   .bss.pxOverflowTimerList:00000000 pxOverflowTimerList
     /tmp/cctEhCXu.s:2089   .bss.xTimerTaskHandle:00000000 $d
     /tmp/cctEhCXu.s:2093   .bss.xTimerTaskHandle:00000000 xTimerTaskHandle
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
vListInsert
vPortEnterCritical
vListInitialise
xQueueGenericCreateStatic
vQueueAddToRegistry
vPortExitCritical
vListInitialiseItem
vApplicationGetTimerTaskMemory
xTaskCreateStatic
pvPortMalloc
xTaskGetSchedulerState
xQueueGenericSend
xQueueGenericSendFromISR
uxListRemove
xTaskGetTickCount
vTaskSuspendAll
xTaskResumeAll
vQueueWaitForMessageRestricted
vPortFree
xQueueReceive
